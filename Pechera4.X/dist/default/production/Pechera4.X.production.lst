

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul 22 22:45:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F46K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  001BC6                     __pidataCOMRAM:
    65                           	opt callstack 0
    66                           
    67                           ;initializer for _contBitEL
    68  001BC6  01                 	db	1
    69                           
    70                           ;initializer for _flancoEL
    71  001BC7  01                 	db	1
    72                           
    73                           	psect	smallconst
    74  001000                     __psmallconst:
    75                           	opt callstack 0
    76  001000  00                 	db	0
    77  001001                     _preambulo:
    78                           	opt callstack 0
    79  001001  7F                 	db	127
    80  001002                     __end_of_preambulo:
    81                           	opt callstack 0
    82  0000                     _TMR4	set	3923
    83  0000                     _CCPR5H	set	3926
    84  0000                     _CCPR5L	set	3925
    85  0000                     _TMR5H	set	3920
    86  0000                     _TMR5L	set	3919
    87  0000                     _CCPR3H	set	3935
    88  0000                     _CCPR3L	set	3934
    89  0000                     _T5CONbits	set	3918
    90  0000                     _CCP3CONbits	set	3933
    91  0000                     _CCPTMRS0bits	set	3913
    92  0000                     _PR4	set	3922
    93  0000                     _T4CONbits	set	3921
    94  0000                     _ANSELD	set	3899
    95  0000                     _ANSELC	set	3898
    96  0000                     _ANSELB	set	3897
    97  0000                     _ANSELA	set	3896
    98  0000                     _PORTBbits	set	3969
    99  0000                     _SSP1BUF	set	4041
   100  0000                     _PIR4bits	set	3963
   101  0000                     _TMR3H	set	4019
   102  0000                     _TMR3L	set	4018
   103  0000                     _PIR2bits	set	4001
   104  0000                     _CCPR1H	set	4031
   105  0000                     _CCPR1L	set	4030
   106  0000                     _TMR1H	set	4047
   107  0000                     _TMR1L	set	4046
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PIR5bits	set	3966
   110  0000                     _RCONbits	set	4048
   111  0000                     _PIE3bits	set	4003
   112  0000                     _IPR3bits	set	4005
   113  0000                     _PIR3bits	set	4004
   114  0000                     _RCSTA2bits	set	3953
   115  0000                     _SPBRGH2	set	3958
   116  0000                     _SPBRG2	set	3957
   117  0000                     _TXSTA2bits	set	3954
   118  0000                     _BAUDCON2bits	set	3952
   119  0000                     _SSP1CON1bits	set	4038
   120  0000                     _SSP1STATbits	set	4039
   121  0000                     _PIE4bits	set	3962
   122  0000                     _IPR4bits	set	3964
   123  0000                     _TRISEbits	set	3990
   124  0000                     _PIE2bits	set	4000
   125  0000                     _IPR2bits	set	4002
   126  0000                     _T3CONbits	set	4017
   127  0000                     _CCP2CONbits	set	3942
   128  0000                     _PIE1bits	set	3997
   129  0000                     _IPR1bits	set	3999
   130  0000                     _T1CONbits	set	4045
   131  0000                     _CCP1CONbits	set	4029
   132  0000                     _PIE5bits	set	3965
   133  0000                     _IPR5bits	set	3967
   134  0000                     _INTCON2bits	set	4081
   135  0000                     _TMR0L	set	4054
   136  0000                     _TMR0H	set	4055
   137  0000                     _T0CONbits	set	4053
   138  0000                     _INTCON3bits	set	4080
   139  0000                     _INTCONbits	set	4082
   140  0000                     _TRISE	set	3990
   141  0000                     _TRISD	set	3989
   142  0000                     _TRISCbits	set	3988
   143  0000                     _WPUB	set	3937
   144  0000                     _TRISB	set	3987
   145  0000                     _LATB	set	3978
   146  0000                     _LATA	set	3977
   147  0000                     _TRISA	set	3986
   148  0000                     _TXREG2	set	3955
   149  0000                     _LC0	set	31832
   150  0000                     _LA3	set	31819
   151  0000                     _LA2	set	31818
   152                           
   153                           ; #config settings
   154  001002  00                 	db	0	; dummy byte at the end
   155  0000                     
   156                           	psect	cinit
   157  001B08                     __pcinit:
   158                           	opt callstack 0
   159  001B08                     start_initialization:
   160                           	opt callstack 0
   161  001B08                     __initialization:
   162                           	opt callstack 0
   163                           
   164                           ; Initialize objects allocated to COMRAM (2 bytes)
   165                           ; load TBLPTR registers with __pidataCOMRAM
   166  001B08  0EC6               	movlw	low __pidataCOMRAM
   167  001B0A  6EF6               	movwf	tblptrl,c
   168  001B0C  0E1B               	movlw	high __pidataCOMRAM
   169  001B0E  6EF7               	movwf	tblptrh,c
   170  001B10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   171  001B12  6EF8               	movwf	tblptru,c
   172  001B14  0009               	tblrd		*+	;fetch initializer
   173  001B16  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   174  001B1A  0009               	tblrd		*+	;fetch initializer
   175  001B1C  CFF5 F04C          	movff	tablat,__pdataCOMRAM+1
   176                           
   177                           ; Clear objects allocated to BANK1 (52 bytes)
   178  001B20  EE01  F000         	lfsr	0,__pbssBANK1
   179  001B24  0E34               	movlw	52
   180  001B26                     clear_0:
   181  001B26  6AEE               	clrf	postinc0,c
   182  001B28  06E8               	decf	wreg,f,c
   183  001B2A  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BANK0 (122 bytes)
   186  001B2C  EE00  F060         	lfsr	0,__pbssBANK0
   187  001B30  0E7A               	movlw	122
   188  001B32                     clear_1:
   189  001B32  6AEE               	clrf	postinc0,c
   190  001B34  06E8               	decf	wreg,f,c
   191  001B36  E1FD               	bnz	clear_1
   192                           
   193                           ; Clear objects allocated to COMRAM (47 bytes)
   194  001B38  EE00  F001         	lfsr	0,__pbssCOMRAM
   195  001B3C  0E2F               	movlw	47
   196  001B3E                     clear_2:
   197  001B3E  6AEE               	clrf	postinc0,c
   198  001B40  06E8               	decf	wreg,f,c
   199  001B42  E1FD               	bnz	clear_2
   200  001B44                     end_of_initialization:
   201                           	opt callstack 0
   202  001B44                     __end_of__initialization:
   203                           	opt callstack 0
   204  001B44  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   205  001B46  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   206  001B48  0E00               	movlw	low (__Lsmallconst shr (0+16))
   207  001B4A  6EF8               	movwf	tblptru,c
   208  001B4C  0E10               	movlw	high __Lsmallconst
   209  001B4E  6EF7               	movwf	tblptrh,c
   210  001B50  0100               	movlb	0
   211  001B52  EF65  F009         	goto	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMRAM
   214  000001                     __pbssCOMRAM:
   215                           	opt callstack 0
   216  000001                     _DatosEL:
   217                           	opt callstack 0
   218  000001                     	ds	6
   219  000007                     _cantBytesEL:
   220                           	opt callstack 0
   221  000007                     	ds	1
   222  000008                     _contByteEL:
   223                           	opt callstack 0
   224  000008                     	ds	1
   225  000009                     _primerosBitsEL:
   226                           	opt callstack 0
   227  000009                     	ds	1
   228  00000A                     _debugCont:
   229                           	opt callstack 0
   230  00000A                     	ds	1
   231  00000B                     _jugador:
   232                           	opt callstack 0
   233  00000B                     	ds	31
   234  00002A                     _configJuego:
   235                           	opt callstack 0
   236  00002A                     	ds	6
   237                           
   238                           	psect	dataCOMRAM
   239  00004B                     __pdataCOMRAM:
   240                           	opt callstack 0
   241  00004B                     _contBitEL:
   242                           	opt callstack 0
   243  00004B                     	ds	1
   244  00004C                     _flancoEL:
   245                           	opt callstack 0
   246  00004C                     	ds	1
   247                           
   248                           	psect	bssBANK0
   249  000060                     __pbssBANK0:
   250                           	opt callstack 0
   251  000060                     _receptores:
   252                           	opt callstack 0
   253  000060                     	ds	69
   254  0000A5                     _debug:
   255                           	opt callstack 0
   256  0000A5                     	ds	53
   257                           
   258                           	psect	bssBANK1
   259  000100                     __pbssBANK1:
   260                           	opt callstack 0
   261  000100                     _rfid:
   262                           	opt callstack 0
   263  000100                     	ds	52
   264                           
   265                           	psect	cstackCOMRAM
   266  000030                     __pcstackCOMRAM:
   267                           	opt callstack 0
   268  000030                     ??_IRS_High:
   269  000030                     
   270                           ; 1 bytes @ 0x0
   271  000030                     	ds	2
   272  000032                     Capture@reception:
   273                           	opt callstack 0
   274  000032                     i1EUSARTEnviar2@reg:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x2
   278  000032                     	ds	2
   279  000034                     ??_Capture:
   280  000034                     i1EUSARTEnviar2@e:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x4
   284  000034                     	ds	2
   285  000036                     
   286                           ; 1 bytes @ 0x6
   287  000036                     	ds	2
   288  000038                     ??_IRS_Low:
   289                           
   290                           ; 1 bytes @ 0x8
   291  000038                     	ds	7
   292  00003F                     IRS_Low@aux:
   293                           	opt callstack 0
   294                           
   295                           ; 1 bytes @ 0xF
   296  00003F                     	ds	1
   297  000040                     InitDebug@i:
   298                           	opt callstack 0
   299  000040                     ReadShot@gameConfig:
   300                           	opt callstack 0
   301  000040                     RFIDInit@spi:
   302                           	opt callstack 0
   303  000040                     EUSARTEnviar2@reg:
   304                           	opt callstack 0
   305                           
   306                           ; 2 bytes @ 0x10
   307  000040                     	ds	1
   308  000041                     InitDebug@i_2154:
   309                           	opt callstack 0
   310                           
   311                           ; 1 bytes @ 0x11
   312  000041                     	ds	1
   313  000042                     ReadShot@player:
   314                           	opt callstack 0
   315  000042                     EUSARTEnviar2@e:
   316                           	opt callstack 0
   317                           
   318                           ; 2 bytes @ 0x12
   319  000042                     	ds	2
   320  000044                     ReadShot@reception:
   321                           	opt callstack 0
   322                           
   323                           ; 2 bytes @ 0x14
   324  000044                     	ds	2
   325  000046                     ??_ReadShot:
   326                           
   327                           ; 1 bytes @ 0x16
   328  000046                     	ds	5
   329  00004B                     
   330                           ; 1 bytes @ 0x1B
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 393 in file "pechera.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels required when called:    4
   356 ;; This function calls:
   357 ;;		_Config
   358 ;;		_EUSARTEnviar2
   359 ;;		_InitDebug
   360 ;;		_RFIDInit
   361 ;;		_ReadShot
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text0
   368  0012CA                     __ptext0:
   369                           	opt callstack 0
   370  0012CA                     _main:
   371                           	opt callstack 27
   372  0012CA                     
   373                           ;pechera.c: 395: Config();
   374  0012CA  EC12  F00D         	call	_Config	;wreg free
   375  0012CE                     
   376                           ;pechera.c: 396: RFIDInit(&rfid);
   377  0012CE  0E00               	movlw	low _rfid
   378  0012D0  6E40               	movwf	RFIDInit@spi^0,c
   379  0012D2  0E01               	movlw	high _rfid
   380  0012D4  6E41               	movwf	(RFIDInit@spi+1)^0,c
   381  0012D6  EC85  F00C         	call	_RFIDInit	;wreg free
   382  0012DA                     
   383                           ;pechera.c: 397: InitDebug();
   384  0012DA  ECEB  F00B         	call	_InitDebug	;wreg free
   385  0012DE                     
   386                           ;pechera.c: 399: configJuego.Estado = EnJuego;
   387  0012DE  0E06               	movlw	6
   388  0012E0  6E2F               	movwf	(_configJuego+5)^0,c
   389  0012E2                     l2014:
   390                           
   391                           ;pechera.c: 403: {;pechera.c: 404: if(configJuego.Estado == EnJuego)
   392  0012E2  0E06               	movlw	6
   393  0012E4  182F               	xorwf	(_configJuego+5)^0,w,c
   394  0012E6  A4D8               	btfss	status,2,c
   395  0012E8  EF78  F009         	goto	u1171
   396  0012EC  EF7A  F009         	goto	u1170
   397  0012F0                     u1171:
   398  0012F0  EF71  F009         	goto	l2014
   399  0012F4                     u1170:
   400  0012F4                     
   401                           ;pechera.c: 405: {;pechera.c: 406: if(jugador.estado == Revivir)
   402  0012F4  0E02               	movlw	2
   403  0012F6  180B               	xorwf	_jugador^0,w,c
   404  0012F8  A4D8               	btfss	status,2,c
   405  0012FA  EF81  F009         	goto	u1181
   406  0012FE  EF83  F009         	goto	u1180
   407  001302                     u1181:
   408  001302  EF91  F009         	goto	l2026
   409  001306                     u1180:
   410  001306                     
   411                           ;pechera.c: 407: {;pechera.c: 408: DatosEL[0] = 3;
   412  001306  0E03               	movlw	3
   413  001308  6E01               	movwf	_DatosEL^0,c
   414  00130A                     
   415                           ;pechera.c: 409: DatosEL[1] = jugador.ID;
   416  00130A  C00D  F002         	movff	_jugador+2,_DatosEL+1
   417  00130E                     
   418                           ;pechera.c: 410: DatosEL[2] = jugador.equipo;
   419  00130E  C00C  F003         	movff	_jugador+1,_DatosEL+2
   420  001312                     
   421                           ;pechera.c: 411: DatosEL[3] = jugador.Arma.damage;
   422  001312  C01F  F004         	movff	_jugador+20,_DatosEL+3
   423                           
   424                           ;pechera.c: 413: cantBytesEL = 4;
   425  001316  0E04               	movlw	4
   426  001318  6E07               	movwf	_cantBytesEL^0,c
   427                           
   428                           ;pechera.c: 414: jugador.estado = Vivo;
   429  00131A  0E00               	movlw	0
   430  00131C  6E0B               	movwf	_jugador^0,c
   431                           
   432                           ;pechera.c: 415: }
   433  00131E  EF71  F009         	goto	l2014
   434  001322                     l2026:
   435                           
   436                           ;pechera.c: 416: else if(jugador.estado == Vivo)
   437  001322  500B               	movf	_jugador^0,w,c
   438  001324  A4D8               	btfss	status,2,c
   439  001326  EF97  F009         	goto	u1191
   440  00132A  EF99  F009         	goto	u1190
   441  00132E                     u1191:
   442  00132E  EF71  F009         	goto	l2014
   443  001332                     u1190:
   444  001332                     
   445                           ;pechera.c: 417: {;pechera.c: 419: if(PORTBbits.RB0 && !jugador.Arma.disparando)
   446  001332  A081               	btfss	129,0,c	;volatile
   447  001334  EF9E  F009         	goto	u1201
   448  001338  EFA0  F009         	goto	u1200
   449  00133C                     u1201:
   450  00133C  EFB9  F009         	goto	l265
   451  001340                     u1200:
   452  001340  5022               	movf	(_jugador+23)^0,w,c
   453  001342  A4D8               	btfss	status,2,c
   454  001344  EFA6  F009         	goto	u1211
   455  001348  EFA8  F009         	goto	u1210
   456  00134C                     u1211:
   457  00134C  EFB9  F009         	goto	l265
   458  001350                     u1210:
   459  001350                     
   460                           ;pechera.c: 420: {;pechera.c: 421: TMR4 = 0;
   461  001350  0E00               	movlw	0
   462  001352  010F               	movlb	15	; () banked
   463  001354  6F53               	movwf	83,b	;volatile
   464                           
   465                           ;pechera.c: 422: PR4 = 20;
   466  001356  0E14               	movlw	20
   467  001358  6F52               	movwf	82,b	;volatile
   468                           
   469                           ;pechera.c: 423: T4CONbits.T4OUTPS = 10;
   470  00135A  5151               	movf	81,w,b	;volatile
   471  00135C  0B87               	andlw	-121
   472  00135E  0950               	iorlw	80
   473  001360  6F51               	movwf	81,b	;volatile
   474                           
   475                           ;pechera.c: 424: T4CONbits.T4CKPS = 0;
   476  001362  0EFC               	movlw	-4
   477  001364  1751               	andwf	81,f,b	;volatile
   478  001366                     
   479                           ; BSR set to: 15
   480                           ;pechera.c: 425: T4CONbits.TMR4ON = 1;
   481  001366  8551               	bsf	81,2,b	;volatile
   482  001368                     
   483                           ; BSR set to: 15
   484                           ;pechera.c: 426: PIE5bits.TMR4IE = 1;
   485  001368  807D               	bsf	125,0,c	;volatile
   486                           
   487                           ;pechera.c: 428: jugador.Arma.disparando = 1;
   488  00136A  0E01               	movlw	1
   489  00136C  6E22               	movwf	(_jugador+23)^0,c
   490                           
   491                           ;pechera.c: 437: }
   492  00136E  EFCC  F009         	goto	l266
   493  001372                     l265:
   494                           
   495                           ;pechera.c: 438: else if(!PORTBbits.RB0 && jugador.Arma.habilDisparo)
   496  001372  B081               	btfsc	129,0,c	;volatile
   497  001374  EFBE  F009         	goto	u1221
   498  001378  EFC0  F009         	goto	u1220
   499  00137C                     u1221:
   500  00137C  EFCC  F009         	goto	l266
   501  001380                     u1220:
   502  001380  5023               	movf	(_jugador+24)^0,w,c
   503  001382  B4D8               	btfsc	status,2,c
   504  001384  EFC6  F009         	goto	u1231
   505  001388  EFC8  F009         	goto	u1230
   506  00138C                     u1231:
   507  00138C  EFCC  F009         	goto	l266
   508  001390                     u1230:
   509  001390                     
   510                           ;pechera.c: 439: {;pechera.c: 440: jugador.Arma.habilDisparo = 0;
   511  001390  0E00               	movlw	0
   512  001392  6E23               	movwf	(_jugador+24)^0,c
   513                           
   514                           ;pechera.c: 441: jugador.Arma.disparando = 0;
   515  001394  0E00               	movlw	0
   516  001396  6E22               	movwf	(_jugador+23)^0,c
   517  001398                     l266:
   518                           
   519                           ;pechera.c: 442: };pechera.c: 444: if(receptores[0].DatosLRecibidoFlag)
   520  001398  0100               	movlb	0	; () banked
   521  00139A  5176               	movf	(_receptores+22)& (0+255),w,b
   522  00139C  B4D8               	btfsc	status,2,c
   523  00139E  EFD3  F009         	goto	u1241
   524  0013A2  EFD5  F009         	goto	u1240
   525  0013A6                     u1241:
   526  0013A6  EFFA  F009         	goto	l2056
   527  0013AA                     u1240:
   528  0013AA                     
   529                           ; BSR set to: 0
   530                           ;pechera.c: 445: {;pechera.c: 446: ReadShot(&configJuego, &jugador, &receptores[0]);
   531  0013AA  0E2A               	movlw	low _configJuego
   532  0013AC  6E40               	movwf	ReadShot@gameConfig^0,c
   533  0013AE  0E00               	movlw	high _configJuego
   534  0013B0  6E41               	movwf	(ReadShot@gameConfig+1)^0,c
   535  0013B2  0E0B               	movlw	low _jugador
   536  0013B4  6E42               	movwf	ReadShot@player^0,c
   537  0013B6  0E00               	movlw	high _jugador
   538  0013B8  6E43               	movwf	(ReadShot@player+1)^0,c
   539  0013BA  0E60               	movlw	low _receptores
   540  0013BC  6E44               	movwf	ReadShot@reception^0,c
   541  0013BE  0E00               	movlw	high _receptores
   542  0013C0  6E45               	movwf	(ReadShot@reception+1)^0,c
   543  0013C2  EC3B  F00B         	call	_ReadShot	;wreg free
   544  0013C6                     
   545                           ;pechera.c: 448: receptores[0].DatosLRecibidoFlag = 0;
   546  0013C6  0E00               	movlw	0
   547  0013C8  0100               	movlb	0	; () banked
   548  0013CA  6F76               	movwf	(_receptores+22)& (0+255),b
   549  0013CC                     
   550                           ; BSR set to: 0
   551                           ;pechera.c: 451: debug.Datos[0] = 'R';
   552  0013CC  0E52               	movlw	82
   553  0013CE  6FA5               	movwf	_debug& (0+255),b
   554  0013D0                     
   555                           ; BSR set to: 0
   556                           ;pechera.c: 452: debug.Datos[1] = 'e';
   557  0013D0  0E65               	movlw	101
   558  0013D2  6FA6               	movwf	(_debug+1)& (0+255),b
   559  0013D4                     
   560                           ; BSR set to: 0
   561                           ;pechera.c: 453: debug.Datos[2] = 'c';
   562  0013D4  0E63               	movlw	99
   563  0013D6  6FA7               	movwf	(_debug+2)& (0+255),b
   564  0013D8                     
   565                           ; BSR set to: 0
   566                           ;pechera.c: 454: debug.Datos[3] = '1';
   567  0013D8  0E31               	movlw	49
   568  0013DA  6FA8               	movwf	(_debug+3)& (0+255),b
   569  0013DC                     
   570                           ; BSR set to: 0
   571                           ;pechera.c: 455: debug.CantDatos = 4;
   572  0013DC  0E04               	movlw	4
   573  0013DE  6FD8               	movwf	(_debug+51)& (0+255),b
   574                           
   575                           ;pechera.c: 456: EUSARTEnviar2(&TXREG2, &debug);
   576  0013E0  0E73               	movlw	115
   577  0013E2  6E40               	movwf	EUSARTEnviar2@reg^0,c
   578  0013E4  0E0F               	movlw	15
   579  0013E6  6E41               	movwf	(EUSARTEnviar2@reg+1)^0,c
   580  0013E8  0EA5               	movlw	low _debug
   581  0013EA  6E42               	movwf	EUSARTEnviar2@e^0,c
   582  0013EC  0E00               	movlw	high _debug
   583  0013EE  6E43               	movwf	(EUSARTEnviar2@e+1)^0,c
   584  0013F0  ECAB  F00D         	call	_EUSARTEnviar2	;wreg free
   585  0013F4                     l2056:
   586                           
   587                           ;pechera.c: 457: };pechera.c: 459: if(receptores[1].DatosLRecibidoFlag)
   588  0013F4  0100               	movlb	0	; () banked
   589  0013F6  518D               	movf	(_receptores+45)& (0+255),w,b
   590  0013F8  B4D8               	btfsc	status,2,c
   591  0013FA  EF01  F00A         	goto	u1251
   592  0013FE  EF03  F00A         	goto	u1250
   593  001402                     u1251:
   594  001402  EF28  F00A         	goto	l2072
   595  001406                     u1250:
   596  001406                     
   597                           ; BSR set to: 0
   598                           ;pechera.c: 460: {;pechera.c: 461: ReadShot(&configJuego, &jugador, &receptores[1]);
   599  001406  0E2A               	movlw	low _configJuego
   600  001408  6E40               	movwf	ReadShot@gameConfig^0,c
   601  00140A  0E00               	movlw	high _configJuego
   602  00140C  6E41               	movwf	(ReadShot@gameConfig+1)^0,c
   603  00140E  0E0B               	movlw	low _jugador
   604  001410  6E42               	movwf	ReadShot@player^0,c
   605  001412  0E00               	movlw	high _jugador
   606  001414  6E43               	movwf	(ReadShot@player+1)^0,c
   607  001416  0E77               	movlw	low (_receptores+23)
   608  001418  6E44               	movwf	ReadShot@reception^0,c
   609  00141A  0E00               	movlw	high (_receptores+23)
   610  00141C  6E45               	movwf	(ReadShot@reception+1)^0,c
   611  00141E  EC3B  F00B         	call	_ReadShot	;wreg free
   612  001422                     
   613                           ;pechera.c: 463: receptores[1].DatosLRecibidoFlag = 0;
   614  001422  0E00               	movlw	0
   615  001424  0100               	movlb	0	; () banked
   616  001426  6F8D               	movwf	(_receptores+45)& (0+255),b
   617  001428                     
   618                           ; BSR set to: 0
   619                           ;pechera.c: 466: debug.Datos[0] = 'R';
   620  001428  0E52               	movlw	82
   621  00142A  6FA5               	movwf	_debug& (0+255),b
   622  00142C                     
   623                           ; BSR set to: 0
   624                           ;pechera.c: 467: debug.Datos[1] = 'e';
   625  00142C  0E65               	movlw	101
   626  00142E  6FA6               	movwf	(_debug+1)& (0+255),b
   627  001430                     
   628                           ; BSR set to: 0
   629                           ;pechera.c: 468: debug.Datos[2] = 'c';
   630  001430  0E63               	movlw	99
   631  001432  6FA7               	movwf	(_debug+2)& (0+255),b
   632  001434                     
   633                           ; BSR set to: 0
   634                           ;pechera.c: 469: debug.Datos[3] = '2';
   635  001434  0E32               	movlw	50
   636  001436  6FA8               	movwf	(_debug+3)& (0+255),b
   637  001438                     
   638                           ; BSR set to: 0
   639                           ;pechera.c: 470: debug.CantDatos = 4;
   640  001438  0E04               	movlw	4
   641  00143A  6FD8               	movwf	(_debug+51)& (0+255),b
   642                           
   643                           ;pechera.c: 471: EUSARTEnviar2(&TXREG2, &debug);
   644  00143C  0E73               	movlw	115
   645  00143E  6E40               	movwf	EUSARTEnviar2@reg^0,c
   646  001440  0E0F               	movlw	15
   647  001442  6E41               	movwf	(EUSARTEnviar2@reg+1)^0,c
   648  001444  0EA5               	movlw	low _debug
   649  001446  6E42               	movwf	EUSARTEnviar2@e^0,c
   650  001448  0E00               	movlw	high _debug
   651  00144A  6E43               	movwf	(EUSARTEnviar2@e+1)^0,c
   652  00144C  ECAB  F00D         	call	_EUSARTEnviar2	;wreg free
   653  001450                     l2072:
   654                           
   655                           ;pechera.c: 472: };pechera.c: 474: if(receptores[2].DatosLRecibidoFlag)
   656  001450  0100               	movlb	0	; () banked
   657  001452  51A4               	movf	(_receptores+68)& (0+255),w,b
   658  001454  B4D8               	btfsc	status,2,c
   659  001456  EF2F  F00A         	goto	u1261
   660  00145A  EF31  F00A         	goto	u1260
   661  00145E                     u1261:
   662  00145E  EF58  F00A         	goto	l261
   663  001462                     u1260:
   664  001462                     
   665                           ; BSR set to: 0
   666                           ;pechera.c: 475: {;pechera.c: 476: ReadShot(&configJuego, &jugador, &receptores[2]);
   667  001462  0E2A               	movlw	low _configJuego
   668  001464  6E40               	movwf	ReadShot@gameConfig^0,c
   669  001466  0E00               	movlw	high _configJuego
   670  001468  6E41               	movwf	(ReadShot@gameConfig+1)^0,c
   671  00146A  0E0B               	movlw	low _jugador
   672  00146C  6E42               	movwf	ReadShot@player^0,c
   673  00146E  0E00               	movlw	high _jugador
   674  001470  6E43               	movwf	(ReadShot@player+1)^0,c
   675  001472  0E8E               	movlw	low (_receptores+46)
   676  001474  6E44               	movwf	ReadShot@reception^0,c
   677  001476  0E00               	movlw	high (_receptores+46)
   678  001478  6E45               	movwf	(ReadShot@reception+1)^0,c
   679  00147A  EC3B  F00B         	call	_ReadShot	;wreg free
   680  00147E                     
   681                           ;pechera.c: 478: receptores[2].DatosLRecibidoFlag = 0;
   682  00147E  0E00               	movlw	0
   683  001480  0100               	movlb	0	; () banked
   684  001482  6FA4               	movwf	(_receptores+68)& (0+255),b
   685  001484                     
   686                           ; BSR set to: 0
   687                           ;pechera.c: 481: debug.Datos[0] = 'R';
   688  001484  0E52               	movlw	82
   689  001486  6FA5               	movwf	_debug& (0+255),b
   690  001488                     
   691                           ; BSR set to: 0
   692                           ;pechera.c: 482: debug.Datos[1] = 'e';
   693  001488  0E65               	movlw	101
   694  00148A  6FA6               	movwf	(_debug+1)& (0+255),b
   695  00148C                     
   696                           ; BSR set to: 0
   697                           ;pechera.c: 483: debug.Datos[2] = 'c';
   698  00148C  0E63               	movlw	99
   699  00148E  6FA7               	movwf	(_debug+2)& (0+255),b
   700  001490                     
   701                           ; BSR set to: 0
   702                           ;pechera.c: 484: debug.Datos[3] = '3';
   703  001490  0E33               	movlw	51
   704  001492  6FA8               	movwf	(_debug+3)& (0+255),b
   705  001494                     
   706                           ; BSR set to: 0
   707                           ;pechera.c: 485: debug.CantDatos = 4;
   708  001494  0E04               	movlw	4
   709  001496  6FD8               	movwf	(_debug+51)& (0+255),b
   710                           
   711                           ;pechera.c: 486: EUSARTEnviar2(&TXREG2, &debug);
   712  001498  0E73               	movlw	115
   713  00149A  6E40               	movwf	EUSARTEnviar2@reg^0,c
   714  00149C  0E0F               	movlw	15
   715  00149E  6E41               	movwf	(EUSARTEnviar2@reg+1)^0,c
   716  0014A0  0EA5               	movlw	low _debug
   717  0014A2  6E42               	movwf	EUSARTEnviar2@e^0,c
   718  0014A4  0E00               	movlw	high _debug
   719  0014A6  6E43               	movwf	(EUSARTEnviar2@e+1)^0,c
   720  0014A8  ECAB  F00D         	call	_EUSARTEnviar2	;wreg free
   721  0014AC  EF71  F009         	goto	l2014
   722  0014B0                     l261:
   723                           
   724                           ; BSR set to: 0
   725  0014B0  EF71  F009         	goto	l2014
   726  0014B4  EF2B  F001         	goto	start
   727  0014B8                     __end_of_main:
   728                           	opt callstack 0
   729                           
   730 ;; *************** function _ReadShot *****************
   731 ;; Defined at:
   732 ;;		line 62 in file "LReception.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  gameConfig      2   16[COMRAM] PTR struct gameConfig
   735 ;;		 -> configJuego(6), 
   736 ;;  player          2   18[COMRAM] PTR struct player
   737 ;;		 -> jugador(31), 
   738 ;;  reception       2   20[COMRAM] PTR struct reception
   739 ;;		 -> receptores(69), 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   751 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;Total ram usage:       11 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    3
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text1
   766  001676                     __ptext1:
   767                           	opt callstack 0
   768  001676                     _ReadShot:
   769                           	opt callstack 27
   770  001676                     
   771                           ;LReception.c: 64: if(player->estado == Vivo)
   772  001676  C042  FFD9         	movff	ReadShot@player,fsr2l
   773  00167A  C043  FFDA         	movff	ReadShot@player+1,fsr2h
   774  00167E  50DF               	movf	indf2,w,c
   775  001680  A4D8               	btfss	status,2,c
   776  001682  EF45  F00B         	goto	u771
   777  001686  EF47  F00B         	goto	u770
   778  00168A                     u771:
   779  00168A  EFEA  F00B         	goto	l299
   780  00168E                     u770:
   781  00168E                     
   782                           ;LReception.c: 65: {;LReception.c: 66: if(reception->DatosRecibidosL[1] != player->ID)
   783  00168E  EE20 F005          	lfsr	2,5
   784  001692  5044               	movf	ReadShot@reception^0,w,c
   785  001694  26D9               	addwf	fsr2l,f,c
   786  001696  5045               	movf	(ReadShot@reception+1)^0,w,c
   787  001698  22DA               	addwfc	fsr2h,f,c
   788  00169A  EE10 F002          	lfsr	1,2
   789  00169E  5042               	movf	ReadShot@player^0,w,c
   790  0016A0  26E1               	addwf	fsr1l,f,c
   791  0016A2  5043               	movf	(ReadShot@player+1)^0,w,c
   792  0016A4  22E2               	addwfc	fsr1h,f,c
   793  0016A6  50DE               	movf	postinc2,w,c
   794  0016A8  18E6               	xorwf	postinc1,w,c
   795  0016AA  B4D8               	btfsc	status,2,c
   796  0016AC  EF5A  F00B         	goto	u781
   797  0016B0  EF5C  F00B         	goto	u780
   798  0016B4                     u781:
   799  0016B4  EFEA  F00B         	goto	l299
   800  0016B8                     u780:
   801  0016B8                     
   802                           ;LReception.c: 67: {;LReception.c: 68: if(gameConfig->FriendlyFire || reception->DatosRe
      +                          cibidosL[2] != player->equipo)
   803  0016B8  EE20 F004          	lfsr	2,4
   804  0016BC  5040               	movf	ReadShot@gameConfig^0,w,c
   805  0016BE  26D9               	addwf	fsr2l,f,c
   806  0016C0  5041               	movf	(ReadShot@gameConfig+1)^0,w,c
   807  0016C2  22DA               	addwfc	fsr2h,f,c
   808  0016C4  50DF               	movf	indf2,w,c
   809  0016C6  A4D8               	btfss	status,2,c
   810  0016C8  EF68  F00B         	goto	u791
   811  0016CC  EF6A  F00B         	goto	u790
   812  0016D0                     u791:
   813  0016D0  EF7F  F00B         	goto	l1804
   814  0016D4                     u790:
   815  0016D4  EE20 F006          	lfsr	2,6
   816  0016D8  5044               	movf	ReadShot@reception^0,w,c
   817  0016DA  26D9               	addwf	fsr2l,f,c
   818  0016DC  5045               	movf	(ReadShot@reception+1)^0,w,c
   819  0016DE  22DA               	addwfc	fsr2h,f,c
   820  0016E0  EE10 F001          	lfsr	1,1
   821  0016E4  5042               	movf	ReadShot@player^0,w,c
   822  0016E6  26E1               	addwf	fsr1l,f,c
   823  0016E8  5043               	movf	(ReadShot@player+1)^0,w,c
   824  0016EA  22E2               	addwfc	fsr1h,f,c
   825  0016EC  50DE               	movf	postinc2,w,c
   826  0016EE  18E6               	xorwf	postinc1,w,c
   827  0016F0  B4D8               	btfsc	status,2,c
   828  0016F2  EF7D  F00B         	goto	u801
   829  0016F6  EF7F  F00B         	goto	u800
   830  0016FA                     u801:
   831  0016FA  EFEA  F00B         	goto	l299
   832  0016FE                     u800:
   833  0016FE                     l1804:
   834                           
   835                           ;LReception.c: 69: {;LReception.c: 70: if(player->Vida < reception->DatosRecibidosL[3])
   836  0016FE  EE20 F007          	lfsr	2,7
   837  001702  5044               	movf	ReadShot@reception^0,w,c
   838  001704  26D9               	addwf	fsr2l,f,c
   839  001706  5045               	movf	(ReadShot@reception+1)^0,w,c
   840  001708  22DA               	addwfc	fsr2h,f,c
   841  00170A  EE10 F003          	lfsr	1,3
   842  00170E  5042               	movf	ReadShot@player^0,w,c
   843  001710  26E1               	addwf	fsr1l,f,c
   844  001712  5043               	movf	(ReadShot@player+1)^0,w,c
   845  001714  22E2               	addwfc	fsr1h,f,c
   846  001716  50DE               	movf	postinc2,w,c
   847  001718  5CE6               	subwf	postinc1,w,c
   848  00171A  B0D8               	btfsc	status,0,c
   849  00171C  EF92  F00B         	goto	u811
   850  001720  EF94  F00B         	goto	u810
   851  001724                     u811:
   852  001724  EFDA  F00B         	goto	l1812
   853  001728                     u810:
   854  001728                     
   855                           ;LReception.c: 71: {;LReception.c: 72: player->Vida = 0;
   856  001728  EE20 F003          	lfsr	2,3
   857  00172C  5042               	movf	ReadShot@player^0,w,c
   858  00172E  26D9               	addwf	fsr2l,f,c
   859  001730  5043               	movf	(ReadShot@player+1)^0,w,c
   860  001732  22DA               	addwfc	fsr2h,f,c
   861  001734  0E00               	movlw	0
   862  001736  6EDF               	movwf	indf2,c
   863                           
   864                           ;LReception.c: 73: if(player->Estadisticas.puntos < gameConfig->RestaMuerte )
   865  001738  EE20 F001          	lfsr	2,1
   866  00173C  5040               	movf	ReadShot@gameConfig^0,w,c
   867  00173E  26D9               	addwf	fsr2l,f,c
   868  001740  5041               	movf	(ReadShot@gameConfig+1)^0,w,c
   869  001742  22DA               	addwfc	fsr2h,f,c
   870  001744  50DF               	movf	indf2,w,c
   871  001746  6E46               	movwf	??_ReadShot^0,c
   872  001748  6A47               	clrf	(??_ReadShot+1)^0,c
   873  00174A  EE20 F01D          	lfsr	2,29
   874  00174E  5042               	movf	ReadShot@player^0,w,c
   875  001750  26D9               	addwf	fsr2l,f,c
   876  001752  5043               	movf	(ReadShot@player+1)^0,w,c
   877  001754  22DA               	addwfc	fsr2h,f,c
   878  001756  5046               	movf	??_ReadShot^0,w,c
   879  001758  5CDE               	subwf	postinc2,w,c
   880  00175A  50DE               	movf	postinc2,w,c
   881  00175C  0A80               	xorlw	128
   882  00175E  6E4A               	movwf	(??_ReadShot+4)^0,c
   883  001760  5047               	movf	(??_ReadShot+1)^0,w,c
   884  001762  0A80               	xorlw	128
   885  001764  584A               	subwfb	(??_ReadShot+4)^0,w,c
   886  001766  B0D8               	btfsc	status,0,c
   887  001768  EFB8  F00B         	goto	u821
   888  00176C  EFBA  F00B         	goto	u820
   889  001770                     u821:
   890  001770  EFC6  F00B         	goto	l1810
   891  001774                     u820:
   892  001774                     
   893                           ;LReception.c: 74: {;LReception.c: 75: player->Estadisticas.puntos = 0;
   894  001774  EE20 F01D          	lfsr	2,29
   895  001778  5042               	movf	ReadShot@player^0,w,c
   896  00177A  26D9               	addwf	fsr2l,f,c
   897  00177C  5043               	movf	(ReadShot@player+1)^0,w,c
   898  00177E  22DA               	addwfc	fsr2h,f,c
   899  001780  0E00               	movlw	0
   900  001782  6EDE               	movwf	postinc2,c
   901  001784  0E00               	movlw	0
   902  001786  6EDD               	movwf	postdec2,c
   903                           
   904                           ;LReception.c: 76: }
   905  001788  EFEA  F00B         	goto	l299
   906  00178C                     l1810:
   907                           
   908                           ;LReception.c: 77: else;LReception.c: 78: {;LReception.c: 79: player->Estadisticas.punto
      +                          s -= gameConfig->RestaMuerte;
   909  00178C  EE20 F01D          	lfsr	2,29
   910  001790  5042               	movf	ReadShot@player^0,w,c
   911  001792  26D9               	addwf	fsr2l,f,c
   912  001794  5043               	movf	(ReadShot@player+1)^0,w,c
   913  001796  22DA               	addwfc	fsr2h,f,c
   914  001798  EE10 F001          	lfsr	1,1
   915  00179C  5040               	movf	ReadShot@gameConfig^0,w,c
   916  00179E  26E1               	addwf	fsr1l,f,c
   917  0017A0  5041               	movf	(ReadShot@gameConfig+1)^0,w,c
   918  0017A2  22E2               	addwfc	fsr1h,f,c
   919  0017A4  50E7               	movf	indf1,w,c
   920  0017A6  6E46               	movwf	??_ReadShot^0,c
   921  0017A8  5046               	movf	??_ReadShot^0,w,c
   922  0017AA  5EDE               	subwf	postinc2,f,c
   923  0017AC  0E00               	movlw	0
   924  0017AE  5ADD               	subwfb	postdec2,f,c
   925  0017B0  EFEA  F00B         	goto	l299
   926  0017B4                     l1812:
   927                           
   928                           ;LReception.c: 82: else;LReception.c: 83: player->Vida -= reception->DatosRecibidosL[3];
   929  0017B4  EE20 F007          	lfsr	2,7
   930  0017B8  5044               	movf	ReadShot@reception^0,w,c
   931  0017BA  26D9               	addwf	fsr2l,f,c
   932  0017BC  5045               	movf	(ReadShot@reception+1)^0,w,c
   933  0017BE  22DA               	addwfc	fsr2h,f,c
   934  0017C0  50DF               	movf	indf2,w,c
   935  0017C2  6E46               	movwf	??_ReadShot^0,c
   936  0017C4  EE20 F003          	lfsr	2,3
   937  0017C8  5042               	movf	ReadShot@player^0,w,c
   938  0017CA  26D9               	addwf	fsr2l,f,c
   939  0017CC  5043               	movf	(ReadShot@player+1)^0,w,c
   940  0017CE  22DA               	addwfc	fsr2h,f,c
   941  0017D0  5046               	movf	??_ReadShot^0,w,c
   942  0017D2  5EDF               	subwf	indf2,f,c
   943  0017D4                     l299:
   944  0017D4  0012               	return		;funcret
   945  0017D6                     __end_of_ReadShot:
   946                           	opt callstack 0
   947                           
   948 ;; *************** function _RFIDInit *****************
   949 ;; Defined at:
   950 ;;		line 4 in file "RFID.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  spi             2   16[COMRAM] PTR struct spi
   953 ;;		 -> rfid(52), 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;Total ram usage:        2 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    3
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text2
   980  00190A                     __ptext2:
   981                           	opt callstack 0
   982  00190A                     _RFIDInit:
   983                           	opt callstack 27
   984  00190A                     
   985                           ;RFID.c: 6: spi->Datos[0] = 0x04;
   986  00190A  C040  FFD9         	movff	RFIDInit@spi,fsr2l
   987  00190E  C041  FFDA         	movff	RFIDInit@spi+1,fsr2h
   988  001912  0E04               	movlw	4
   989  001914  6EDF               	movwf	indf2,c
   990  001916                     
   991                           ;RFID.c: 7: spi->Datos[1] = 0x60;
   992  001916  EE20 F001          	lfsr	2,1
   993  00191A  5040               	movf	RFIDInit@spi^0,w,c
   994  00191C  26D9               	addwf	fsr2l,f,c
   995  00191E  5041               	movf	(RFIDInit@spi+1)^0,w,c
   996  001920  22DA               	addwfc	fsr2h,f,c
   997  001922  0E60               	movlw	96
   998  001924  6EDF               	movwf	indf2,c
   999  001926                     
  1000                           ;RFID.c: 9: spi->Datos[2] = 0x06;
  1001  001926  EE20 F002          	lfsr	2,2
  1002  00192A  5040               	movf	RFIDInit@spi^0,w,c
  1003  00192C  26D9               	addwf	fsr2l,f,c
  1004  00192E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1005  001930  22DA               	addwfc	fsr2h,f,c
  1006  001932  0E06               	movlw	6
  1007  001934  6EDF               	movwf	indf2,c
  1008  001936                     
  1009                           ;RFID.c: 10: spi->Datos[3] = 0x80;
  1010  001936  EE20 F003          	lfsr	2,3
  1011  00193A  5040               	movf	RFIDInit@spi^0,w,c
  1012  00193C  26D9               	addwf	fsr2l,f,c
  1013  00193E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1014  001940  22DA               	addwfc	fsr2h,f,c
  1015  001942  0E80               	movlw	128
  1016  001944  6EDF               	movwf	indf2,c
  1017  001946                     
  1018                           ;RFID.c: 12: spi->Datos[4] = 0x22;
  1019  001946  EE20 F004          	lfsr	2,4
  1020  00194A  5040               	movf	RFIDInit@spi^0,w,c
  1021  00194C  26D9               	addwf	fsr2l,f,c
  1022  00194E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1023  001950  22DA               	addwfc	fsr2h,f,c
  1024  001952  0E22               	movlw	34
  1025  001954  6EDF               	movwf	indf2,c
  1026  001956                     
  1027                           ;RFID.c: 13: spi->Datos[5] = 0x83;
  1028  001956  EE20 F005          	lfsr	2,5
  1029  00195A  5040               	movf	RFIDInit@spi^0,w,c
  1030  00195C  26D9               	addwf	fsr2l,f,c
  1031  00195E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1032  001960  22DA               	addwfc	fsr2h,f,c
  1033  001962  0E83               	movlw	131
  1034  001964  6EDF               	movwf	indf2,c
  1035  001966                     
  1036                           ;RFID.c: 15: spi->Datos[6] = 0x24;
  1037  001966  EE20 F006          	lfsr	2,6
  1038  00196A  5040               	movf	RFIDInit@spi^0,w,c
  1039  00196C  26D9               	addwf	fsr2l,f,c
  1040  00196E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1041  001970  22DA               	addwfc	fsr2h,f,c
  1042  001972  0E24               	movlw	36
  1043  001974  6EDF               	movwf	indf2,c
  1044  001976                     
  1045                           ;RFID.c: 16: spi->Datos[7] = 0xB0;
  1046  001976  EE20 F007          	lfsr	2,7
  1047  00197A  5040               	movf	RFIDInit@spi^0,w,c
  1048  00197C  26D9               	addwf	fsr2l,f,c
  1049  00197E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1050  001980  22DA               	addwfc	fsr2h,f,c
  1051  001982  0EB0               	movlw	176
  1052  001984  6EDF               	movwf	indf2,c
  1053  001986                     
  1054                           ;RFID.c: 18: spi->Datos[8] = 0x26;
  1055  001986  EE20 F008          	lfsr	2,8
  1056  00198A  5040               	movf	RFIDInit@spi^0,w,c
  1057  00198C  26D9               	addwf	fsr2l,f,c
  1058  00198E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1059  001990  22DA               	addwfc	fsr2h,f,c
  1060  001992  0E26               	movlw	38
  1061  001994  6EDF               	movwf	indf2,c
  1062  001996                     
  1063                           ;RFID.c: 19: spi->Datos[9] = 0xB0;
  1064  001996  EE20 F009          	lfsr	2,9
  1065  00199A  5040               	movf	RFIDInit@spi^0,w,c
  1066  00199C  26D9               	addwf	fsr2l,f,c
  1067  00199E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1068  0019A0  22DA               	addwfc	fsr2h,f,c
  1069  0019A2  0EB0               	movlw	176
  1070  0019A4  6EDF               	movwf	indf2,c
  1071  0019A6                     
  1072                           ;RFID.c: 21: spi->Datos[10] = 0x4C;
  1073  0019A6  EE20 F00A          	lfsr	2,10
  1074  0019AA  5040               	movf	RFIDInit@spi^0,w,c
  1075  0019AC  26D9               	addwf	fsr2l,f,c
  1076  0019AE  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1077  0019B0  22DA               	addwfc	fsr2h,f,c
  1078  0019B2  0E4C               	movlw	76
  1079  0019B4  6EDF               	movwf	indf2,c
  1080  0019B6                     
  1081                           ;RFID.c: 22: spi->Datos[11] = 0x00;
  1082  0019B6  EE20 F00B          	lfsr	2,11
  1083  0019BA  5040               	movf	RFIDInit@spi^0,w,c
  1084  0019BC  26D9               	addwf	fsr2l,f,c
  1085  0019BE  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1086  0019C0  22DA               	addwfc	fsr2h,f,c
  1087  0019C2  0E00               	movlw	0
  1088  0019C4  6EDF               	movwf	indf2,c
  1089  0019C6                     
  1090                           ;RFID.c: 24: spi->Datos[12] = 0x28;
  1091  0019C6  EE20 F00C          	lfsr	2,12
  1092  0019CA  5040               	movf	RFIDInit@spi^0,w,c
  1093  0019CC  26D9               	addwf	fsr2l,f,c
  1094  0019CE  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1095  0019D0  22DA               	addwfc	fsr2h,f,c
  1096  0019D2  0E28               	movlw	40
  1097  0019D4  6EDF               	movwf	indf2,c
  1098  0019D6                     
  1099                           ;RFID.c: 25: spi->Datos[13] = 0x03;
  1100  0019D6  EE20 F00D          	lfsr	2,13
  1101  0019DA  5040               	movf	RFIDInit@spi^0,w,c
  1102  0019DC  26D9               	addwf	fsr2l,f,c
  1103  0019DE  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1104  0019E0  22DA               	addwfc	fsr2h,f,c
  1105  0019E2  0E03               	movlw	3
  1106  0019E4  6EDF               	movwf	indf2,c
  1107  0019E6                     
  1108                           ;RFID.c: 27: spi->Datos[14] = 0x02;
  1109  0019E6  EE20 F00E          	lfsr	2,14
  1110  0019EA  5040               	movf	RFIDInit@spi^0,w,c
  1111  0019EC  26D9               	addwf	fsr2l,f,c
  1112  0019EE  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1113  0019F0  22DA               	addwfc	fsr2h,f,c
  1114  0019F2  0E02               	movlw	2
  1115  0019F4  6EDF               	movwf	indf2,c
  1116  0019F6                     
  1117                           ;RFID.c: 28: spi->Datos[15] = 0x08;
  1118  0019F6  EE20 F00F          	lfsr	2,15
  1119  0019FA  5040               	movf	RFIDInit@spi^0,w,c
  1120  0019FC  26D9               	addwf	fsr2l,f,c
  1121  0019FE  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1122  001A00  22DA               	addwfc	fsr2h,f,c
  1123  001A02  0E08               	movlw	8
  1124  001A04  6EDF               	movwf	indf2,c
  1125  001A06                     
  1126                           ;RFID.c: 30: spi->cantDatos = 15;
  1127  001A06  EE20 F033          	lfsr	2,51
  1128  001A0A  5040               	movf	RFIDInit@spi^0,w,c
  1129  001A0C  26D9               	addwf	fsr2l,f,c
  1130  001A0E  5041               	movf	(RFIDInit@spi+1)^0,w,c
  1131  001A10  22DA               	addwfc	fsr2h,f,c
  1132  001A12  0E0F               	movlw	15
  1133  001A14  6EDF               	movwf	indf2,c
  1134  001A16                     
  1135                           ;RFID.c: 32: SSP1BUF = spi->Datos[0];
  1136  001A16  C040  FFD9         	movff	RFIDInit@spi,fsr2l
  1137  001A1A  C041  FFDA         	movff	RFIDInit@spi+1,fsr2h
  1138  001A1E  50DF               	movf	indf2,w,c
  1139  001A20  6EC9               	movwf	201,c	;volatile
  1140  001A22  0012               	return		;funcret
  1141  001A24                     __end_of_RFIDInit:
  1142                           	opt callstack 0
  1143                           
  1144 ;; *************** function _InitDebug *****************
  1145 ;; Defined at:
  1146 ;;		line 343 in file "pechera.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  i               1   17[COMRAM] unsigned char 
  1151 ;;  i               1   16[COMRAM] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    3
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text3
  1176  0017D6                     __ptext3:
  1177                           	opt callstack 0
  1178  0017D6                     _InitDebug:
  1179                           	opt callstack 27
  1180  0017D6                     
  1181                           ;pechera.c: 345: configJuego.Estado = Inicializacion;
  1182  0017D6  0E00               	movlw	0
  1183  0017D8  6E2F               	movwf	(_configJuego+5)^0,c
  1184                           
  1185                           ;pechera.c: 346: configJuego.FriendlyFire = 0;
  1186  0017DA  0E00               	movlw	0
  1187  0017DC  6E2E               	movwf	(_configJuego+4)^0,c
  1188                           
  1189                           ;pechera.c: 347: configJuego.RestaKillEquipo = 3;
  1190  0017DE  0E03               	movlw	3
  1191  0017E0  6E2D               	movwf	(_configJuego+3)^0,c
  1192                           
  1193                           ;pechera.c: 348: configJuego.RestaMuerte = 6;
  1194  0017E2  0E06               	movlw	6
  1195  0017E4  6E2B               	movwf	(_configJuego+1)^0,c
  1196                           
  1197                           ;pechera.c: 349: configJuego.SumaAsesinato = 5;
  1198  0017E6  0E05               	movlw	5
  1199  0017E8  6E2A               	movwf	_configJuego^0,c
  1200                           
  1201                           ;pechera.c: 350: configJuego.SumaAsistencia = 1;
  1202  0017EA  0E01               	movlw	1
  1203  0017EC  6E2C               	movwf	(_configJuego+2)^0,c
  1204                           
  1205                           ;pechera.c: 352: jugador.estado = Revivir;
  1206  0017EE  0E02               	movlw	2
  1207  0017F0  6E0B               	movwf	_jugador^0,c
  1208                           
  1209                           ;pechera.c: 353: jugador.equipo = Verde;
  1210  0017F2  0E02               	movlw	2
  1211  0017F4  6E0C               	movwf	(_jugador+1)^0,c
  1212                           
  1213                           ;pechera.c: 354: jugador.ID = 101;
  1214  0017F6  0E65               	movlw	101
  1215  0017F8  6E0D               	movwf	(_jugador+2)^0,c
  1216                           
  1217                           ;pechera.c: 355: jugador.Vida = 100;
  1218  0017FA  0E64               	movlw	100
  1219  0017FC  6E0E               	movwf	(_jugador+3)^0,c
  1220                           
  1221                           ;pechera.c: 356: jugador.Balas = 20;
  1222  0017FE  0E14               	movlw	20
  1223  001800  6E0F               	movwf	(_jugador+4)^0,c
  1224                           
  1225                           ;pechera.c: 357: jugador.BalasMax = 20;
  1226  001802  0E14               	movlw	20
  1227  001804  6E10               	movwf	(_jugador+5)^0,c
  1228                           
  1229                           ;pechera.c: 358: jugador.Cargadores = 1;
  1230  001806  0E01               	movlw	1
  1231  001808  6E11               	movwf	(_jugador+6)^0,c
  1232                           
  1233                           ;pechera.c: 359: jugador.CargadoresMax = 5;
  1234  00180A  0E05               	movlw	5
  1235  00180C  6E12               	movwf	(_jugador+7)^0,c
  1236                           
  1237                           ;pechera.c: 360: for(char i = 0; i < 10; i++)
  1238  00180E  0E00               	movlw	0
  1239  001810  6E40               	movwf	InitDebug@i^0,c
  1240  001812                     l1740:
  1241                           
  1242                           ;pechera.c: 361: jugador.IDHitters[i] = 0;
  1243  001812  0E15               	movlw	low (_jugador+10)
  1244  001814  2440               	addwf	InitDebug@i^0,w,c
  1245  001816  6ED9               	movwf	fsr2l,c
  1246  001818  6ADA               	clrf	fsr2h,c
  1247  00181A  0E00               	movlw	high (_jugador+10)
  1248  00181C  22DA               	addwfc	fsr2h,f,c
  1249  00181E  0E00               	movlw	0
  1250  001820  6EDF               	movwf	indf2,c
  1251  001822  2A40               	incf	InitDebug@i^0,f,c
  1252  001824  0E09               	movlw	9
  1253  001826  6440               	cpfsgt	InitDebug@i^0,c
  1254  001828  EF18  F00C         	goto	u751
  1255  00182C  EF1A  F00C         	goto	u750
  1256  001830                     u751:
  1257  001830  EF09  F00C         	goto	l1740
  1258  001834                     u750:
  1259  001834                     
  1260                           ;pechera.c: 362: jugador.contAssits = 0;
  1261  001834  0E00               	movlw	0
  1262  001836  6E13               	movwf	(_jugador+8)^0,c
  1263                           
  1264                           ;pechera.c: 363: jugador.IDKiller = 0;
  1265  001838  0E00               	movlw	0
  1266  00183A  6E14               	movwf	(_jugador+9)^0,c
  1267                           
  1268                           ;pechera.c: 365: jugador.Arma.damage = 15;
  1269  00183C  0E0F               	movlw	15
  1270  00183E  6E1F               	movwf	(_jugador+20)^0,c
  1271                           
  1272                           ;pechera.c: 366: jugador.Arma.tDisparos = 50;
  1273  001840  0E32               	movlw	50
  1274  001842  6E20               	movwf	(_jugador+21)^0,c
  1275                           
  1276                           ;pechera.c: 367: jugador.Arma.contDisparo = 0;
  1277  001844  0E00               	movlw	0
  1278  001846  6E21               	movwf	(_jugador+22)^0,c
  1279                           
  1280                           ;pechera.c: 368: jugador.Arma.disparando = 0;
  1281  001848  0E00               	movlw	0
  1282  00184A  6E22               	movwf	(_jugador+23)^0,c
  1283                           
  1284                           ;pechera.c: 369: jugador.Arma.habilDisparo = 0;
  1285  00184C  0E00               	movlw	0
  1286  00184E  6E23               	movwf	(_jugador+24)^0,c
  1287                           
  1288                           ;pechera.c: 371: jugador.Estadisticas.puntos = 0;
  1289  001850  0E00               	movlw	0
  1290  001852  6E29               	movwf	(_jugador+30)^0,c
  1291  001854  0E00               	movlw	0
  1292  001856  6E28               	movwf	(_jugador+29)^0,c
  1293                           
  1294                           ;pechera.c: 372: jugador.Estadisticas.Kills = 0;
  1295  001858  0E00               	movlw	0
  1296  00185A  6E24               	movwf	(_jugador+25)^0,c
  1297                           
  1298                           ;pechera.c: 373: jugador.Estadisticas.Deaths = 0;
  1299  00185C  0E00               	movlw	0
  1300  00185E  6E25               	movwf	(_jugador+26)^0,c
  1301                           
  1302                           ;pechera.c: 374: jugador.Estadisticas.Assists = 0;
  1303  001860  0E00               	movlw	0
  1304  001862  6E26               	movwf	(_jugador+27)^0,c
  1305                           
  1306                           ;pechera.c: 375: jugador.Estadisticas.Punteria = 0;
  1307  001864  0E00               	movlw	0
  1308  001866  6E27               	movwf	(_jugador+28)^0,c
  1309                           
  1310                           ;pechera.c: 377: for(char i = 0; i < 3; i++)
  1311  001868  0E00               	movlw	0
  1312  00186A  6E41               	movwf	InitDebug@i_2154^0,c
  1313  00186C                     l1752:
  1314                           
  1315                           ;pechera.c: 378: {;pechera.c: 379: receptores[i].esperandoInicioRL = 1;
  1316  00186C  5041               	movf	InitDebug@i_2154^0,w,c
  1317  00186E  0D17               	mullw	23
  1318  001870  0E62               	movlw	low (_receptores+2)
  1319  001872  24F3               	addwf	243,w,c
  1320  001874  6ED9               	movwf	fsr2l,c
  1321  001876  0E00               	movlw	high (_receptores+2)
  1322  001878  20F4               	addwfc	prodh,w,c
  1323  00187A  6EDA               	movwf	fsr2h,c
  1324  00187C  0E01               	movlw	1
  1325  00187E  6EDF               	movwf	indf2,c
  1326                           
  1327                           ;pechera.c: 380: receptores[i].DatoLaser = 0;
  1328  001880  5041               	movf	InitDebug@i_2154^0,w,c
  1329  001882  0D17               	mullw	23
  1330  001884  0E63               	movlw	low (_receptores+3)
  1331  001886  24F3               	addwf	243,w,c
  1332  001888  6ED9               	movwf	fsr2l,c
  1333  00188A  0E00               	movlw	high (_receptores+3)
  1334  00188C  20F4               	addwfc	prodh,w,c
  1335  00188E  6EDA               	movwf	fsr2h,c
  1336  001890  0E00               	movlw	0
  1337  001892  6EDF               	movwf	indf2,c
  1338                           
  1339                           ;pechera.c: 381: receptores[i].contDatosRecL = 0;
  1340  001894  5041               	movf	InitDebug@i_2154^0,w,c
  1341  001896  0D17               	mullw	23
  1342  001898  0E73               	movlw	low (_receptores+19)
  1343  00189A  24F3               	addwf	243,w,c
  1344  00189C  6ED9               	movwf	fsr2l,c
  1345  00189E  0E00               	movlw	high (_receptores+19)
  1346  0018A0  20F4               	addwfc	prodh,w,c
  1347  0018A2  6EDA               	movwf	fsr2h,c
  1348  0018A4  0E00               	movlw	0
  1349  0018A6  6EDF               	movwf	indf2,c
  1350                           
  1351                           ;pechera.c: 382: receptores[i].cantDatosRecL = 0;
  1352  0018A8  5041               	movf	InitDebug@i_2154^0,w,c
  1353  0018AA  0D17               	mullw	23
  1354  0018AC  0E74               	movlw	low (_receptores+20)
  1355  0018AE  24F3               	addwf	243,w,c
  1356  0018B0  6ED9               	movwf	fsr2l,c
  1357  0018B2  0E00               	movlw	high (_receptores+20)
  1358  0018B4  20F4               	addwfc	prodh,w,c
  1359  0018B6  6EDA               	movwf	fsr2h,c
  1360  0018B8  0E00               	movlw	0
  1361  0018BA  6EDF               	movwf	indf2,c
  1362                           
  1363                           ;pechera.c: 383: receptores[i].nBitR = 0;
  1364  0018BC  5041               	movf	InitDebug@i_2154^0,w,c
  1365  0018BE  0D17               	mullw	23
  1366  0018C0  0E75               	movlw	low (_receptores+21)
  1367  0018C2  24F3               	addwf	243,w,c
  1368  0018C4  6ED9               	movwf	fsr2l,c
  1369  0018C6  0E00               	movlw	high (_receptores+21)
  1370  0018C8  20F4               	addwfc	prodh,w,c
  1371  0018CA  6EDA               	movwf	fsr2h,c
  1372  0018CC  0E00               	movlw	0
  1373  0018CE  6EDF               	movwf	indf2,c
  1374                           
  1375                           ;pechera.c: 384: receptores[i].DatosLRecibidoFlag = 0;
  1376  0018D0  5041               	movf	InitDebug@i_2154^0,w,c
  1377  0018D2  0D17               	mullw	23
  1378  0018D4  0E76               	movlw	low (_receptores+22)
  1379  0018D6  24F3               	addwf	243,w,c
  1380  0018D8  6ED9               	movwf	fsr2l,c
  1381  0018DA  0E00               	movlw	high (_receptores+22)
  1382  0018DC  20F4               	addwfc	prodh,w,c
  1383  0018DE  6EDA               	movwf	fsr2h,c
  1384  0018E0  0E00               	movlw	0
  1385  0018E2  6EDF               	movwf	indf2,c
  1386  0018E4  2A41               	incf	InitDebug@i_2154^0,f,c
  1387  0018E6  0E02               	movlw	2
  1388  0018E8  6441               	cpfsgt	InitDebug@i_2154^0,c
  1389  0018EA  EF79  F00C         	goto	u761
  1390  0018EE  EF7B  F00C         	goto	u760
  1391  0018F2                     u761:
  1392  0018F2  EF36  F00C         	goto	l1752
  1393  0018F6                     u760:
  1394  0018F6                     
  1395                           ;pechera.c: 385: };pechera.c: 387: debug.Transmitiendo = 0;
  1396  0018F6  0E00               	movlw	0
  1397  0018F8  0100               	movlb	0	; () banked
  1398  0018FA  6FD9               	movwf	(_debug+52)& (0+255),b
  1399                           
  1400                           ;pechera.c: 388: debug.CantDatos = 1;
  1401  0018FC  0E01               	movlw	1
  1402  0018FE  6FD8               	movwf	(_debug+51)& (0+255),b
  1403                           
  1404                           ;pechera.c: 389: debug.cont = 0;
  1405  001900  0E00               	movlw	0
  1406  001902  6FD7               	movwf	(_debug+50)& (0+255),b
  1407                           
  1408                           ;pechera.c: 390: debug.Datos[0] = 0;
  1409  001904  0E00               	movlw	0
  1410  001906  6FA5               	movwf	_debug& (0+255),b
  1411  001908                     
  1412                           ; BSR set to: 0
  1413  001908  0012               	return		;funcret
  1414  00190A                     __end_of_InitDebug:
  1415                           	opt callstack 0
  1416                           
  1417 ;; *************** function _EUSARTEnviar2 *****************
  1418 ;; Defined at:
  1419 ;;		line 35 in file "EUSART.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  reg             2   16[COMRAM] PTR unsigned char 
  1422 ;;		 -> TXREG2(1), 
  1423 ;;  e               2   18[COMRAM] PTR struct eusart
  1424 ;;		 -> debug(53), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;Total ram usage:        4 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text4
  1451  001B56                     __ptext4:
  1452                           	opt callstack 0
  1453  001B56                     _EUSARTEnviar2:
  1454                           	opt callstack 27
  1455  001B56                     
  1456                           ;EUSART.c: 37: e->Transmitiendo = 1;
  1457  001B56  EE20 F034          	lfsr	2,52
  1458  001B5A  5042               	movf	EUSARTEnviar2@e^0,w,c
  1459  001B5C  26D9               	addwf	fsr2l,f,c
  1460  001B5E  5043               	movf	(EUSARTEnviar2@e+1)^0,w,c
  1461  001B60  22DA               	addwfc	fsr2h,f,c
  1462  001B62  0E01               	movlw	1
  1463  001B64  6EDF               	movwf	indf2,c
  1464                           
  1465                           ;EUSART.c: 38: e->cont = 1;
  1466  001B66  EE20 F032          	lfsr	2,50
  1467  001B6A  5042               	movf	EUSARTEnviar2@e^0,w,c
  1468  001B6C  26D9               	addwf	fsr2l,f,c
  1469  001B6E  5043               	movf	(EUSARTEnviar2@e+1)^0,w,c
  1470  001B70  22DA               	addwfc	fsr2h,f,c
  1471  001B72  0E01               	movlw	1
  1472  001B74  6EDF               	movwf	indf2,c
  1473  001B76                     
  1474                           ;EUSART.c: 39: *reg = e->Datos[0];
  1475  001B76  C042  FFD9         	movff	EUSARTEnviar2@e,fsr2l
  1476  001B7A  C043  FFDA         	movff	EUSARTEnviar2@e+1,fsr2h
  1477  001B7E  C040  FFE1         	movff	EUSARTEnviar2@reg,fsr1l
  1478  001B82  C041  FFE2         	movff	EUSARTEnviar2@reg+1,fsr1h
  1479  001B86  CFDF FFE7          	movff	indf2,indf1
  1480  001B8A                     
  1481                           ;EUSART.c: 40: PIE3bits.TX2IE = 1;
  1482  001B8A  88A3               	bsf	163,4,c	;volatile
  1483  001B8C  0012               	return		;funcret
  1484  001B8E                     __end_of_EUSARTEnviar2:
  1485                           	opt callstack 0
  1486                           
  1487 ;; *************** function _Config *****************
  1488 ;; Defined at:
  1489 ;;		line 12 in file "config.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    3
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text5
  1518  001A24                     __ptext5:
  1519                           	opt callstack 0
  1520  001A24                     _Config:
  1521                           	opt callstack 27
  1522  001A24                     
  1523                           ;config.c: 15: ANSELA = 1;
  1524  001A24  0E01               	movlw	1
  1525  001A26  010F               	movlb	15	; () banked
  1526  001A28  6F38               	movwf	56,b	;volatile
  1527                           
  1528                           ;config.c: 16: TRISA = 1;
  1529  001A2A  0E01               	movlw	1
  1530  001A2C  6E92               	movwf	146,c	;volatile
  1531                           
  1532                           ;config.c: 17: LATA = 0;
  1533  001A2E  0E00               	movlw	0
  1534  001A30  6E89               	movwf	137,c	;volatile
  1535                           
  1536                           ;config.c: 20: ANSELB = 0;
  1537  001A32  0E00               	movlw	0
  1538  001A34  6F39               	movwf	57,b	;volatile
  1539                           
  1540                           ;config.c: 21: LATB = 0;
  1541  001A36  0E00               	movlw	0
  1542  001A38  6E8A               	movwf	138,c	;volatile
  1543  001A3A                     
  1544                           ; BSR set to: 15
  1545                           ;config.c: 22: TRISB = 255;
  1546  001A3A  6893               	setf	147,c	;volatile
  1547                           
  1548                           ;config.c: 23: WPUB = 0;
  1549  001A3C  0E00               	movlw	0
  1550  001A3E  6E61               	movwf	97,c	;volatile
  1551                           
  1552                           ;config.c: 26: ANSELC = 0;
  1553  001A40  0E00               	movlw	0
  1554  001A42  6F3A               	movwf	58,b	;volatile
  1555  001A44                     
  1556                           ; BSR set to: 15
  1557                           ;config.c: 27: TRISCbits.TRISC0 = 0;
  1558  001A44  9094               	bcf	148,0,c	;volatile
  1559                           
  1560                           ;config.c: 30: ANSELD = 0;
  1561  001A46  0E00               	movlw	0
  1562  001A48  6F3B               	movwf	59,b	;volatile
  1563                           
  1564                           ;config.c: 31: TRISD = 192;
  1565  001A4A  0EC0               	movlw	192
  1566  001A4C  6E95               	movwf	149,c	;volatile
  1567                           
  1568                           ;config.c: 34: TRISE = 0;
  1569  001A4E  0E00               	movlw	0
  1570  001A50  6E96               	movwf	150,c	;volatile
  1571  001A52                     
  1572                           ; BSR set to: 15
  1573                           ;config.c: 37: INTCONbits.INT0IE = 0;
  1574  001A52  98F2               	bcf	242,4,c	;volatile
  1575  001A54                     
  1576                           ; BSR set to: 15
  1577                           ;config.c: 40: INTCON3bits.INT2IP = 1;
  1578  001A54  8EF0               	bsf	240,7,c	;volatile
  1579  001A56                     
  1580                           ; BSR set to: 15
  1581                           ;config.c: 41: INTCON3bits.INT2E = 1;
  1582  001A56  88F0               	bsf	240,4,c	;volatile
  1583  001A58                     
  1584                           ; BSR set to: 15
  1585                           ;config.c: 44: T0CONbits.T08BIT = 0;
  1586  001A58  9CD5               	bcf	213,6,c	;volatile
  1587  001A5A                     
  1588                           ; BSR set to: 15
  1589                           ;config.c: 45: T0CONbits.T0CS = 0;
  1590  001A5A  9AD5               	bcf	213,5,c	;volatile
  1591  001A5C                     
  1592                           ; BSR set to: 15
  1593                           ;config.c: 46: T0CONbits.PSA = 0;
  1594  001A5C  96D5               	bcf	213,3,c	;volatile
  1595                           
  1596                           ;config.c: 47: T0CONbits.T0PS = 2;
  1597  001A5E  50D5               	movf	213,w,c	;volatile
  1598  001A60  0BF8               	andlw	-8
  1599  001A62  0902               	iorlw	2
  1600  001A64  6ED5               	movwf	213,c	;volatile
  1601                           
  1602                           ;config.c: 48: TMR0H = 99;
  1603  001A66  0E63               	movlw	99
  1604  001A68  6ED7               	movwf	215,c	;volatile
  1605                           
  1606                           ;config.c: 49: TMR0L = 191;
  1607  001A6A  0EBF               	movlw	191
  1608  001A6C  6ED6               	movwf	214,c	;volatile
  1609  001A6E                     
  1610                           ; BSR set to: 15
  1611                           ;config.c: 50: INTCON2bits.TMR0IP = 0;
  1612  001A6E  94F1               	bcf	241,2,c	;volatile
  1613  001A70                     
  1614                           ; BSR set to: 15
  1615                           ;config.c: 51: INTCONbits.TMR0IE = 1;
  1616  001A70  8AF2               	bsf	242,5,c	;volatile
  1617                           
  1618                           ;config.c: 54: T4CONbits.T4OUTPS = 10;
  1619  001A72  5151               	movf	81,w,b	;volatile
  1620  001A74  0B87               	andlw	-121
  1621  001A76  0950               	iorlw	80
  1622  001A78  6F51               	movwf	81,b	;volatile
  1623                           
  1624                           ;config.c: 55: T4CONbits.T4CKPS = 0;
  1625  001A7A  0EFC               	movlw	-4
  1626  001A7C  1751               	andwf	81,f,b	;volatile
  1627                           
  1628                           ;config.c: 56: PR4 = 203;
  1629  001A7E  0ECB               	movlw	203
  1630  001A80  6F52               	movwf	82,b	;volatile
  1631  001A82                     
  1632                           ; BSR set to: 15
  1633                           ;config.c: 57: IPR5bits.TMR4IP = 1;
  1634  001A82  807F               	bsf	127,0,c	;volatile
  1635  001A84                     
  1636                           ; BSR set to: 15
  1637                           ;config.c: 58: T4CONbits.TMR4ON = 0;
  1638  001A84  9551               	bcf	81,2,b	;volatile
  1639  001A86                     
  1640                           ; BSR set to: 15
  1641                           ;config.c: 59: PIE5bits.TMR4IE = 1;
  1642  001A86  807D               	bsf	125,0,c	;volatile
  1643  001A88                     
  1644                           ; BSR set to: 15
  1645                           ;config.c: 62: TRISCbits.TRISC2 = 1;
  1646  001A88  8494               	bsf	148,2,c	;volatile
  1647                           
  1648                           ;config.c: 63: CCPTMRS0bits.C1TSEL = 0;
  1649  001A8A  0EFC               	movlw	-4
  1650  001A8C  1749               	andwf	73,f,b	;volatile
  1651                           
  1652                           ;config.c: 64: CCP1CONbits.CCP1M = 5;
  1653  001A8E  50BD               	movf	189,w,c	;volatile
  1654  001A90  0BF0               	andlw	-16
  1655  001A92  0905               	iorlw	5
  1656  001A94  6EBD               	movwf	189,c	;volatile
  1657  001A96                     
  1658                           ; BSR set to: 15
  1659                           ;config.c: 65: T1CONbits.TMR1ON = 1;
  1660  001A96  80CD               	bsf	205,0,c	;volatile
  1661  001A98                     
  1662                           ; BSR set to: 15
  1663                           ;config.c: 66: IPR1bits.CCP1IP = 0;
  1664  001A98  949F               	bcf	159,2,c	;volatile
  1665  001A9A                     
  1666                           ; BSR set to: 15
  1667                           ;config.c: 67: PIE1bits.CCP1IE = 1;
  1668  001A9A  849D               	bsf	157,2,c	;volatile
  1669  001A9C                     
  1670                           ; BSR set to: 15
  1671                           ;config.c: 70: TRISCbits.TRISC1 = 1;
  1672  001A9C  8294               	bsf	148,1,c	;volatile
  1673                           
  1674                           ;config.c: 71: CCPTMRS0bits.C2TSEL = 1;
  1675  001A9E  5149               	movf	73,w,b	;volatile
  1676  001AA0  0BE7               	andlw	-25
  1677  001AA2  0908               	iorlw	8
  1678  001AA4  6F49               	movwf	73,b	;volatile
  1679                           
  1680                           ;config.c: 72: CCP2CONbits.CCP2M = 5;
  1681  001AA6  5066               	movf	102,w,c	;volatile
  1682  001AA8  0BF0               	andlw	-16
  1683  001AAA  0905               	iorlw	5
  1684  001AAC  6E66               	movwf	102,c	;volatile
  1685  001AAE                     
  1686                           ; BSR set to: 15
  1687                           ;config.c: 73: T3CONbits.TMR3ON = 1;
  1688  001AAE  80B1               	bsf	177,0,c	;volatile
  1689  001AB0                     
  1690                           ; BSR set to: 15
  1691                           ;config.c: 74: IPR2bits.CCP2IP = 0;
  1692  001AB0  90A2               	bcf	162,0,c	;volatile
  1693  001AB2                     
  1694                           ; BSR set to: 15
  1695                           ;config.c: 75: PIE2bits.CCP2IE = 1;
  1696  001AB2  80A0               	bsf	160,0,c	;volatile
  1697  001AB4                     
  1698                           ; BSR set to: 15
  1699                           ;config.c: 78: TRISEbits.TRISE0 = 1;
  1700  001AB4  8096               	bsf	150,0,c	;volatile
  1701                           
  1702                           ;config.c: 79: CCPTMRS0bits.C3TSEL = 2;
  1703  001AB6  5149               	movf	73,w,b	;volatile
  1704  001AB8  0B3F               	andlw	-193
  1705  001ABA  0980               	iorlw	128
  1706  001ABC  6F49               	movwf	73,b	;volatile
  1707                           
  1708                           ;config.c: 80: CCP3CONbits.CCP3M = 5;
  1709  001ABE  515D               	movf	93,w,b	;volatile
  1710  001AC0  0BF0               	andlw	-16
  1711  001AC2  0905               	iorlw	5
  1712  001AC4  6F5D               	movwf	93,b	;volatile
  1713  001AC6                     
  1714                           ; BSR set to: 15
  1715                           ;config.c: 81: T5CONbits.TMR5ON = 1;
  1716  001AC6  814E               	bsf	78,0,b	;volatile
  1717  001AC8                     
  1718                           ; BSR set to: 15
  1719                           ;config.c: 82: IPR4bits.CCP3IP = 0;
  1720  001AC8  907C               	bcf	124,0,c	;volatile
  1721  001ACA                     
  1722                           ; BSR set to: 15
  1723                           ;config.c: 83: PIE4bits.CCP3IE = 1;
  1724  001ACA  807A               	bsf	122,0,c	;volatile
  1725  001ACC                     
  1726                           ; BSR set to: 15
  1727                           ;config.c: 86: TRISCbits.TRISC3 = 0;
  1728  001ACC  9694               	bcf	148,3,c	;volatile
  1729  001ACE                     
  1730                           ; BSR set to: 15
  1731                           ;config.c: 87: TRISCbits.TRISC4 = 1;
  1732  001ACE  8894               	bsf	148,4,c	;volatile
  1733  001AD0                     
  1734                           ; BSR set to: 15
  1735                           ;config.c: 88: TRISCbits.TRISC5 = 0;
  1736  001AD0  9A94               	bcf	148,5,c	;volatile
  1737  001AD2                     
  1738                           ; BSR set to: 15
  1739                           ;config.c: 89: SSP1STATbits.SMP = 0;
  1740  001AD2  9EC7               	bcf	199,7,c	;volatile
  1741  001AD4                     
  1742                           ; BSR set to: 15
  1743                           ;config.c: 90: SSP1STATbits.CKE = 1;
  1744  001AD4  8CC7               	bsf	199,6,c	;volatile
  1745  001AD6                     
  1746                           ; BSR set to: 15
  1747                           ;config.c: 91: SSP1CON1bits.CKP = 0;
  1748  001AD6  98C6               	bcf	198,4,c	;volatile
  1749                           
  1750                           ;config.c: 92: SSP1CON1bits.SSPM = 2;
  1751  001AD8  50C6               	movf	198,w,c	;volatile
  1752  001ADA  0BF0               	andlw	-16
  1753  001ADC  0902               	iorlw	2
  1754  001ADE  6EC6               	movwf	198,c	;volatile
  1755  001AE0                     
  1756                           ; BSR set to: 15
  1757                           ;config.c: 93: SSP1CON1bits.SSPEN = 1;
  1758  001AE0  8AC6               	bsf	198,5,c	;volatile
  1759  001AE2                     
  1760                           ; BSR set to: 15
  1761                           ;config.c: 94: IPR1bits.SSP1IP = 0;
  1762  001AE2  969F               	bcf	159,3,c	;volatile
  1763  001AE4                     
  1764                           ; BSR set to: 15
  1765                           ;config.c: 95: PIE1bits.SSP1IE = 1;
  1766  001AE4  869D               	bsf	157,3,c	;volatile
  1767  001AE6                     
  1768                           ; BSR set to: 15
  1769                           ;config.c: 98: BAUDCON2bits.BRG16 = 1;
  1770  001AE6  8670               	bsf	112,3,c	;volatile
  1771  001AE8                     
  1772                           ; BSR set to: 15
  1773                           ;config.c: 99: TXSTA2bits.BRGH = 0;
  1774  001AE8  9472               	bcf	114,2,c	;volatile
  1775  001AEA                     
  1776                           ; BSR set to: 15
  1777                           ;config.c: 100: TXSTA2bits.SYNC = 0;
  1778  001AEA  9872               	bcf	114,4,c	;volatile
  1779                           
  1780                           ;config.c: 101: SPBRG2 = 0xA0;
  1781  001AEC  0EA0               	movlw	160
  1782  001AEE  6E75               	movwf	117,c	;volatile
  1783                           
  1784                           ;config.c: 102: SPBRGH2 = 0x01;
  1785  001AF0  0E01               	movlw	1
  1786  001AF2  6E76               	movwf	118,c	;volatile
  1787  001AF4                     
  1788                           ; BSR set to: 15
  1789                           ;config.c: 103: RCSTA2bits.CREN = 0;
  1790  001AF4  9871               	bcf	113,4,c	;volatile
  1791  001AF6                     
  1792                           ; BSR set to: 15
  1793                           ;config.c: 104: TXSTA2bits.TXEN = 1;
  1794  001AF6  8A72               	bsf	114,5,c	;volatile
  1795  001AF8                     
  1796                           ; BSR set to: 15
  1797                           ;config.c: 105: PIR3bits.TX2IF = 0;
  1798  001AF8  98A4               	bcf	164,4,c	;volatile
  1799  001AFA                     
  1800                           ; BSR set to: 15
  1801                           ;config.c: 106: RCSTA2bits.SPEN = 1;
  1802  001AFA  8E71               	bsf	113,7,c	;volatile
  1803  001AFC                     
  1804                           ; BSR set to: 15
  1805                           ;config.c: 107: IPR3bits.TX2IP = 0;
  1806  001AFC  98A5               	bcf	165,4,c	;volatile
  1807  001AFE                     
  1808                           ; BSR set to: 15
  1809                           ;config.c: 108: PIE3bits.TX2IE = 1;
  1810  001AFE  88A3               	bsf	163,4,c	;volatile
  1811  001B00                     
  1812                           ; BSR set to: 15
  1813                           ;config.c: 110: RCONbits.IPEN = 1;
  1814  001B00  8ED0               	bsf	208,7,c	;volatile
  1815  001B02                     
  1816                           ; BSR set to: 15
  1817                           ;config.c: 111: INTCONbits.GIEH = 1;
  1818  001B02  8EF2               	bsf	242,7,c	;volatile
  1819  001B04                     
  1820                           ; BSR set to: 15
  1821                           ;config.c: 112: INTCONbits.GIEL = 1;
  1822  001B04  8CF2               	bsf	242,6,c	;volatile
  1823  001B06                     
  1824                           ; BSR set to: 15
  1825  001B06  0012               	return		;funcret
  1826  001B08                     __end_of_Config:
  1827                           	opt callstack 0
  1828                           
  1829 ;; *************** function _IRS_Low *****************
  1830 ;; Defined at:
  1831 ;;		line 226 in file "pechera.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  aux             1   15[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;Total ram usage:        8 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    2
  1852 ;; This function calls:
  1853 ;;		_Capture
  1854 ;;		i1_EUSARTEnviar2
  1855 ;; This function is called by:
  1856 ;;		Interrupt level 1
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	intcodelo
  1861  000018                     __pintcodelo:
  1862                           	opt callstack 0
  1863  000018                     _IRS_Low:
  1864                           	opt callstack 27
  1865                           
  1866                           ; BSR set to: 15
  1867                           ;incstack = 0
  1868  000018  804D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1869  00001A  CFD8 F038          	movff	status,??_IRS_Low
  1870  00001E  CFE8 F039          	movff	wreg,??_IRS_Low+1
  1871  000022  CFE0 F03A          	movff	bsr,??_IRS_Low+2
  1872  000026  CFE1 F03B          	movff	fsr1l,??_IRS_Low+3
  1873  00002A  CFE2 F03C          	movff	fsr1h,??_IRS_Low+4
  1874  00002E  CFD9 F03D          	movff	fsr2l,??_IRS_Low+5
  1875  000032  CFDA F03E          	movff	fsr2h,??_IRS_Low+6
  1876  000036                     
  1877                           ;pechera.c: 229: if(PIE1bits.CCP1IE && PIR1bits.CCP1IF)
  1878  000036  A49D               	btfss	157,2,c	;volatile
  1879  000038  EF20  F000         	goto	i1u99_21
  1880  00003C  EF22  F000         	goto	i1u99_20
  1881  000040                     i1u99_21:
  1882  000040  EF38  F000         	goto	i1l1916
  1883  000044                     i1u99_20:
  1884  000044  A49E               	btfss	158,2,c	;volatile
  1885  000046  EF27  F000         	goto	i1u100_21
  1886  00004A  EF29  F000         	goto	i1u100_20
  1887  00004E                     i1u100_21:
  1888  00004E  EF38  F000         	goto	i1l1916
  1889  000052                     i1u100_20:
  1890  000052                     
  1891                           ;pechera.c: 230: {;pechera.c: 231: TMR1L = 0;
  1892  000052  0E00               	movlw	0
  1893  000054  6ECE               	movwf	206,c	;volatile
  1894                           
  1895                           ;pechera.c: 232: TMR1H = 0;
  1896  000056  0E00               	movlw	0
  1897  000058  6ECF               	movwf	207,c	;volatile
  1898  00005A                     
  1899                           ;pechera.c: 234: receptores[0].capturado._8L = CCPR1L;
  1900  00005A  CFBE F060          	movff	4030,_receptores	;volatile
  1901  00005E                     
  1902                           ;pechera.c: 235: receptores[0].capturado._8H = CCPR1H;
  1903  00005E  CFBF F061          	movff	4031,_receptores+1	;volatile
  1904  000062                     
  1905                           ;pechera.c: 237: Capture(&receptores[0]);
  1906  000062  0E60               	movlw	low _receptores
  1907  000064  6E32               	movwf	Capture@reception^0,c
  1908  000066  0E00               	movlw	high _receptores
  1909  000068  6E33               	movwf	(Capture@reception+1)^0,c
  1910  00006A  EC02  F008         	call	_Capture	;wreg free
  1911  00006E                     
  1912                           ;pechera.c: 239: PIR1bits.CCP1IF = 0;
  1913  00006E  949E               	bcf	158,2,c	;volatile
  1914  000070                     i1l1916:
  1915                           
  1916                           ;pechera.c: 240: };pechera.c: 243: if(PIE2bits.CCP2IE && PIR2bits.CCP2IF)
  1917  000070  A0A0               	btfss	160,0,c	;volatile
  1918  000072  EF3D  F000         	goto	i1u101_21
  1919  000076  EF3F  F000         	goto	i1u101_20
  1920  00007A                     i1u101_21:
  1921  00007A  EF55  F000         	goto	i1l1930
  1922  00007E                     i1u101_20:
  1923  00007E  A0A1               	btfss	161,0,c	;volatile
  1924  000080  EF44  F000         	goto	i1u102_21
  1925  000084  EF46  F000         	goto	i1u102_20
  1926  000088                     i1u102_21:
  1927  000088  EF55  F000         	goto	i1l1930
  1928  00008C                     i1u102_20:
  1929  00008C                     
  1930                           ;pechera.c: 244: {;pechera.c: 245: TMR3L = 0;
  1931  00008C  0E00               	movlw	0
  1932  00008E  6EB2               	movwf	178,c	;volatile
  1933                           
  1934                           ;pechera.c: 246: TMR3H = 0;
  1935  000090  0E00               	movlw	0
  1936  000092  6EB3               	movwf	179,c	;volatile
  1937  000094                     
  1938                           ;pechera.c: 249: receptores[1].capturado._8L = CCPR3L;
  1939  000094  CF5E F077          	movff	3934,_receptores+23	;volatile
  1940  000098                     
  1941                           ;pechera.c: 250: receptores[1].capturado._8H = CCPR3H;
  1942  000098  CF5F F078          	movff	3935,_receptores+24	;volatile
  1943  00009C                     
  1944                           ;pechera.c: 252: Capture(&receptores[1]);
  1945  00009C  0E77               	movlw	low (_receptores+23)
  1946  00009E  6E32               	movwf	Capture@reception^0,c
  1947  0000A0  0E00               	movlw	high (_receptores+23)
  1948  0000A2  6E33               	movwf	(Capture@reception+1)^0,c
  1949  0000A4  EC02  F008         	call	_Capture	;wreg free
  1950  0000A8                     
  1951                           ;pechera.c: 254: PIR2bits.CCP2IF = 0;
  1952  0000A8  90A1               	bcf	161,0,c	;volatile
  1953  0000AA                     i1l1930:
  1954                           
  1955                           ;pechera.c: 255: };pechera.c: 258: if(PIE4bits.CCP3IE && PIR4bits.CCP3IF)
  1956  0000AA  A07A               	btfss	122,0,c	;volatile
  1957  0000AC  EF5A  F000         	goto	i1u103_21
  1958  0000B0  EF5C  F000         	goto	i1u103_20
  1959  0000B4                     i1u103_21:
  1960  0000B4  EF73  F000         	goto	i1l1944
  1961  0000B8                     i1u103_20:
  1962  0000B8  A07B               	btfss	123,0,c	;volatile
  1963  0000BA  EF61  F000         	goto	i1u104_21
  1964  0000BE  EF63  F000         	goto	i1u104_20
  1965  0000C2                     i1u104_21:
  1966  0000C2  EF73  F000         	goto	i1l1944
  1967  0000C6                     i1u104_20:
  1968  0000C6                     
  1969                           ;pechera.c: 259: {;pechera.c: 260: TMR5L = 0;
  1970  0000C6  0E00               	movlw	0
  1971  0000C8  010F               	movlb	15	; () banked
  1972  0000CA  6F4F               	movwf	79,b	;volatile
  1973                           
  1974                           ;pechera.c: 261: TMR5H = 0;
  1975  0000CC  0E00               	movlw	0
  1976  0000CE  6F50               	movwf	80,b	;volatile
  1977  0000D0                     
  1978                           ; BSR set to: 15
  1979                           ;pechera.c: 263: receptores[2].capturado._8L = CCPR5L;
  1980  0000D0  CF55 F08E          	movff	3925,_receptores+46	;volatile
  1981  0000D4                     
  1982                           ; BSR set to: 15
  1983                           ;pechera.c: 264: receptores[2].capturado._8H = CCPR5H;
  1984  0000D4  CF56 F08F          	movff	3926,_receptores+47	;volatile
  1985  0000D8                     
  1986                           ; BSR set to: 15
  1987                           ;pechera.c: 266: Capture(&receptores[2]);
  1988  0000D8  0E8E               	movlw	low (_receptores+46)
  1989  0000DA  6E32               	movwf	Capture@reception^0,c
  1990  0000DC  0E00               	movlw	high (_receptores+46)
  1991  0000DE  6E33               	movwf	(Capture@reception+1)^0,c
  1992  0000E0  EC02  F008         	call	_Capture	;wreg free
  1993  0000E4                     
  1994                           ;pechera.c: 268: PIR4bits.CCP3IF = 0;
  1995  0000E4  907B               	bcf	123,0,c	;volatile
  1996  0000E6                     i1l1944:
  1997                           
  1998                           ;pechera.c: 269: };pechera.c: 271: if(INTCONbits.T0IE && INTCONbits.T0IF)
  1999  0000E6  AAF2               	btfss	242,5,c	;volatile
  2000  0000E8  EF78  F000         	goto	i1u105_21
  2001  0000EC  EF7A  F000         	goto	i1u105_20
  2002  0000F0                     i1u105_21:
  2003  0000F0  EFBE  F000         	goto	i1l1970
  2004  0000F4                     i1u105_20:
  2005  0000F4  A4F2               	btfss	242,2,c	;volatile
  2006  0000F6  EF7F  F000         	goto	i1u106_21
  2007  0000FA  EF81  F000         	goto	i1u106_20
  2008  0000FE                     i1u106_21:
  2009  0000FE  EFBE  F000         	goto	i1l1970
  2010  000102                     i1u106_20:
  2011  000102                     
  2012                           ;pechera.c: 272: {;pechera.c: 273: TMR0H = 99;
  2013  000102  0E63               	movlw	99
  2014  000104  6ED7               	movwf	215,c	;volatile
  2015                           
  2016                           ;pechera.c: 274: TMR0L = 191;
  2017  000106  0EBF               	movlw	191
  2018  000108  6ED6               	movwf	214,c	;volatile
  2019  00010A                     
  2020                           ;pechera.c: 276: LA3 ^= 1;
  2021  00010A  7689               	btg	3977,3,c	;volatile
  2022                           
  2023                           ;pechera.c: 277: if(jugador.estado == Vivo)
  2024  00010C  500B               	movf	_jugador^0,w,c
  2025  00010E  A4D8               	btfss	status,2,c
  2026  000110  EF8C  F000         	goto	i1u107_21
  2027  000114  EF8E  F000         	goto	i1u107_20
  2028  000118                     i1u107_21:
  2029  000118  EFA4  F000         	goto	i1l1960
  2030  00011C                     i1u107_20:
  2031  00011C                     
  2032                           ;pechera.c: 278: {;pechera.c: 279: if(jugador.Arma.disparando)
  2033  00011C  5022               	movf	(_jugador+23)^0,w,c
  2034  00011E  B4D8               	btfsc	status,2,c
  2035  000120  EF94  F000         	goto	i1u108_21
  2036  000124  EF96  F000         	goto	i1u108_20
  2037  000128                     i1u108_21:
  2038  000128  EFA4  F000         	goto	i1l1960
  2039  00012C                     i1u108_20:
  2040  00012C                     
  2041                           ;pechera.c: 280: {;pechera.c: 281: jugador.Arma.contDisparo++;
  2042  00012C  2A21               	incf	(_jugador+22)^0,f,c
  2043  00012E                     
  2044                           ;pechera.c: 282: if(jugador.Arma.contDisparo == jugador.Arma.tDisparos)
  2045  00012E  5020               	movf	(_jugador+21)^0,w,c
  2046  000130  1821               	xorwf	(_jugador+22)^0,w,c
  2047  000132  A4D8               	btfss	status,2,c
  2048  000134  EF9E  F000         	goto	i1u109_21
  2049  000138  EFA0  F000         	goto	i1u109_20
  2050  00013C                     i1u109_21:
  2051  00013C  EFA4  F000         	goto	i1l1960
  2052  000140                     i1u109_20:
  2053  000140                     
  2054                           ;pechera.c: 283: {;pechera.c: 284: jugador.Arma.contDisparo = 0;
  2055  000140  0E00               	movlw	0
  2056  000142  6E21               	movwf	(_jugador+22)^0,c
  2057                           
  2058                           ;pechera.c: 285: jugador.Arma.habilDisparo = 1;
  2059  000144  0E01               	movlw	1
  2060  000146  6E23               	movwf	(_jugador+24)^0,c
  2061  000148                     i1l1960:
  2062                           
  2063                           ;pechera.c: 286: };pechera.c: 287: };pechera.c: 288: };pechera.c: 290: debugCont++;
  2064  000148  2A0A               	incf	_debugCont^0,f,c
  2065  00014A                     
  2066                           ;pechera.c: 291: if(debugCont == 50)
  2067  00014A  0E32               	movlw	50
  2068  00014C  180A               	xorwf	_debugCont^0,w,c
  2069  00014E  A4D8               	btfss	status,2,c
  2070  000150  EFAC  F000         	goto	i1u110_21
  2071  000154  EFAE  F000         	goto	i1u110_20
  2072  000158                     i1u110_21:
  2073  000158  EFBD  F000         	goto	i1l1968
  2074  00015C                     i1u110_20:
  2075  00015C                     
  2076                           ;pechera.c: 292: {;pechera.c: 293: debugCont = 0;
  2077  00015C  0E00               	movlw	0
  2078  00015E  6E0A               	movwf	_debugCont^0,c
  2079                           
  2080                           ;pechera.c: 300: debug.CantDatos = 3;
  2081  000160  0E03               	movlw	3
  2082  000162  0100               	movlb	0	; () banked
  2083  000164  6FD8               	movwf	(_debug+51)& (0+255),b
  2084  000166                     
  2085                           ; BSR set to: 0
  2086                           ;pechera.c: 301: EUSARTEnviar2(&TXREG2, &debug);
  2087  000166  0E73               	movlw	115
  2088  000168  6E32               	movwf	i1EUSARTEnviar2@reg^0,c
  2089  00016A  0E0F               	movlw	15
  2090  00016C  6E33               	movwf	(i1EUSARTEnviar2@reg+1)^0,c
  2091  00016E  0EA5               	movlw	low _debug
  2092  000170  6E34               	movwf	i1EUSARTEnviar2@e^0,c
  2093  000172  0E00               	movlw	high _debug
  2094  000174  6E35               	movwf	(i1EUSARTEnviar2@e+1)^0,c
  2095  000176  ECC7  F00D         	call	i1_EUSARTEnviar2	;wreg free
  2096  00017A                     i1l1968:
  2097                           
  2098                           ;pechera.c: 302: };pechera.c: 304: INTCONbits.T0IF = 0;
  2099  00017A  94F2               	bcf	242,2,c	;volatile
  2100  00017C                     i1l1970:
  2101                           
  2102                           ;pechera.c: 305: };pechera.c: 307: if(PIE1bits.SSP1IE && PIR1bits.SSP1IF)
  2103  00017C  A69D               	btfss	157,3,c	;volatile
  2104  00017E  EFC3  F000         	goto	i1u111_21
  2105  000182  EFC5  F000         	goto	i1u111_20
  2106  000186                     i1u111_21:
  2107  000186  EFF3  F000         	goto	i1l1992
  2108  00018A                     i1u111_20:
  2109  00018A  A69E               	btfss	158,3,c	;volatile
  2110  00018C  EFCA  F000         	goto	i1u112_21
  2111  000190  EFCC  F000         	goto	i1u112_20
  2112  000194                     i1u112_21:
  2113  000194  EFF3  F000         	goto	i1l1992
  2114  000198                     i1u112_20:
  2115  000198                     
  2116                           ;pechera.c: 308: {;pechera.c: 309: if(rfid.contDatos < rfid.cantDatos)
  2117  000198  0101               	movlb	1	; () banked
  2118  00019A  5133               	movf	(_rfid+51)& (0+255),w,b
  2119  00019C  5D32               	subwf	(_rfid+50)& (0+255),w,b
  2120  00019E  B0D8               	btfsc	status,0,c
  2121  0001A0  EFD4  F000         	goto	i1u113_21
  2122  0001A4  EFD6  F000         	goto	i1u113_20
  2123  0001A8                     i1u113_21:
  2124  0001A8  EFF0  F000         	goto	i1l1988
  2125  0001AC                     i1u113_20:
  2126  0001AC                     
  2127                           ; BSR set to: 1
  2128                           ;pechera.c: 310: {;pechera.c: 311: char aux = rfid.Datos[rfid.contDatos];
  2129  0001AC  0E00               	movlw	low _rfid
  2130  0001AE  2532               	addwf	(_rfid+50)& (0+255),w,b
  2131  0001B0  6ED9               	movwf	fsr2l,c
  2132  0001B2  6ADA               	clrf	fsr2h,c
  2133  0001B4  0E01               	movlw	high _rfid
  2134  0001B6  22DA               	addwfc	fsr2h,f,c
  2135  0001B8  50DF               	movf	indf2,w,c
  2136  0001BA  6E3F               	movwf	IRS_Low@aux^0,c
  2137                           
  2138                           ;pechera.c: 312: rfid.Datos[rfid.contDatos] = SSP1BUF;
  2139  0001BC  0E00               	movlw	low _rfid
  2140  0001BE  2532               	addwf	(_rfid+50)& (0+255),w,b
  2141  0001C0  6ED9               	movwf	fsr2l,c
  2142  0001C2  6ADA               	clrf	fsr2h,c
  2143  0001C4  0E01               	movlw	high _rfid
  2144  0001C6  22DA               	addwfc	fsr2h,f,c
  2145  0001C8  CFC9 FFDF          	movff	4041,indf2	;volatile
  2146  0001CC                     
  2147                           ; BSR set to: 1
  2148                           ;pechera.c: 313: SSP1BUF = aux;
  2149  0001CC  C03F  FFC9         	movff	IRS_Low@aux,4041	;volatile
  2150  0001D0                     
  2151                           ; BSR set to: 1
  2152                           ;pechera.c: 314: rfid.contDatos++;
  2153  0001D0  2B32               	incf	(_rfid+50)& (0+255),f,b
  2154  0001D2                     
  2155                           ; BSR set to: 1
  2156                           ;pechera.c: 315: debug.Datos[0] = rfid.contDatos;
  2157  0001D2  C132  F0A5         	movff	_rfid+50,_debug
  2158  0001D6                     
  2159                           ; BSR set to: 1
  2160                           ;pechera.c: 316: debug.Datos[1] = rfid.cantDatos;
  2161  0001D6  C133  F0A6         	movff	_rfid+51,_debug+1
  2162  0001DA                     
  2163                           ; BSR set to: 1
  2164                           ;pechera.c: 317: LC0^=1;
  2165  0001DA  708B               	btg	3979,0,c	;volatile
  2166                           
  2167                           ;pechera.c: 318: }
  2168  0001DC  EFF2  F000         	goto	i1l1990
  2169  0001E0                     i1l1988:
  2170                           
  2171                           ; BSR set to: 1
  2172                           ;pechera.c: 319: else;pechera.c: 320: {;pechera.c: 321: rfid.contDatos = 0;
  2173  0001E0  0E00               	movlw	0
  2174  0001E2  6F32               	movwf	(_rfid+50)& (0+255),b
  2175  0001E4                     i1l1990:
  2176                           
  2177                           ; BSR set to: 1
  2178                           ;pechera.c: 322: };pechera.c: 324: PIR1bits.SSP1IF = 0;
  2179  0001E4  969E               	bcf	158,3,c	;volatile
  2180  0001E6                     i1l1992:
  2181                           
  2182                           ;pechera.c: 325: };pechera.c: 327: if(PIE3bits.TX2IE && PIR3bits.TX2IF)
  2183  0001E6  A8A3               	btfss	163,4,c	;volatile
  2184  0001E8  EFF8  F000         	goto	i1u114_21
  2185  0001EC  EFFA  F000         	goto	i1u114_20
  2186  0001F0                     i1u114_21:
  2187  0001F0  EF1B  F001         	goto	i1l248
  2188  0001F4                     i1u114_20:
  2189  0001F4  A8A4               	btfss	164,4,c	;volatile
  2190  0001F6  EFFF  F000         	goto	i1u115_21
  2191  0001FA  EF01  F001         	goto	i1u115_20
  2192  0001FE                     i1u115_21:
  2193  0001FE  EF1B  F001         	goto	i1l248
  2194  000202                     i1u115_20:
  2195  000202                     
  2196                           ;pechera.c: 328: {;pechera.c: 329: if(debug.CantDatos > debug.cont)
  2197  000202  0100               	movlb	0	; () banked
  2198  000204  51D8               	movf	(_debug+51)& (0+255),w,b
  2199  000206  5DD7               	subwf	(_debug+50)& (0+255),w,b
  2200  000208  B0D8               	btfsc	status,0,c
  2201  00020A  EF09  F001         	goto	i1u116_21
  2202  00020E  EF0B  F001         	goto	i1u116_20
  2203  000212                     i1u116_21:
  2204  000212  EF16  F001         	goto	i1l2002
  2205  000216                     i1u116_20:
  2206  000216                     
  2207                           ; BSR set to: 0
  2208                           ;pechera.c: 330: {;pechera.c: 331: TXREG2 = debug.Datos[debug.cont];
  2209  000216  0EA5               	movlw	low _debug
  2210  000218  25D7               	addwf	(_debug+50)& (0+255),w,b
  2211  00021A  6ED9               	movwf	fsr2l,c
  2212  00021C  6ADA               	clrf	fsr2h,c
  2213  00021E  0E00               	movlw	high _debug
  2214  000220  22DA               	addwfc	fsr2h,f,c
  2215  000222  50DF               	movf	indf2,w,c
  2216  000224  6E73               	movwf	115,c	;volatile
  2217  000226                     
  2218                           ; BSR set to: 0
  2219                           ;pechera.c: 332: debug.cont++;
  2220  000226  2BD7               	incf	(_debug+50)& (0+255),f,b
  2221                           
  2222                           ;pechera.c: 333: }
  2223  000228  EF1B  F001         	goto	i1l248
  2224  00022C                     i1l2002:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;pechera.c: 334: else;pechera.c: 335: {;pechera.c: 336: debug.cont = 0;
  2228  00022C  0E00               	movlw	0
  2229  00022E  6FD7               	movwf	(_debug+50)& (0+255),b
  2230                           
  2231                           ;pechera.c: 337: debug.Transmitiendo = 0;
  2232  000230  0E00               	movlw	0
  2233  000232  6FD9               	movwf	(_debug+52)& (0+255),b
  2234  000234                     
  2235                           ; BSR set to: 0
  2236                           ;pechera.c: 338: PIE3bits.TX2IE = 0;
  2237  000234  98A3               	bcf	163,4,c	;volatile
  2238  000236                     i1l248:
  2239  000236  C03E  FFDA         	movff	??_IRS_Low+6,fsr2h
  2240  00023A  C03D  FFD9         	movff	??_IRS_Low+5,fsr2l
  2241  00023E  C03C  FFE2         	movff	??_IRS_Low+4,fsr1h
  2242  000242  C03B  FFE1         	movff	??_IRS_Low+3,fsr1l
  2243  000246  C03A  FFE0         	movff	??_IRS_Low+2,bsr
  2244  00024A  C039  FFE8         	movff	??_IRS_Low+1,wreg
  2245  00024E  C038  FFD8         	movff	??_IRS_Low,status
  2246  000252  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2247  000254  0010               	retfie	
  2248  000256                     __end_of_IRS_Low:
  2249                           	opt callstack 0
  2250                           
  2251 ;; *************** function i1_EUSARTEnviar2 *****************
  2252 ;; Defined at:
  2253 ;;		line 35 in file "EUSART.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  reg             2    2[COMRAM] PTR unsigned char 
  2256 ;;		 -> TXREG2(1), 
  2257 ;;  e               2    4[COMRAM] PTR struct eusart
  2258 ;;		 -> debug(53), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;Total ram usage:        4 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_IRS_Low
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text7
  2285  001B8E                     __ptext7:
  2286                           	opt callstack 0
  2287  001B8E                     i1_EUSARTEnviar2:
  2288                           	opt callstack 27
  2289  001B8E                     
  2290                           ;EUSART.c: 37: e->Transmitiendo = 1;
  2291  001B8E  EE20 F034          	lfsr	2,52
  2292  001B92  5034               	movf	i1EUSARTEnviar2@e^0,w,c
  2293  001B94  26D9               	addwf	fsr2l,f,c
  2294  001B96  5035               	movf	(i1EUSARTEnviar2@e+1)^0,w,c
  2295  001B98  22DA               	addwfc	fsr2h,f,c
  2296  001B9A  0E01               	movlw	1
  2297  001B9C  6EDF               	movwf	indf2,c
  2298                           
  2299                           ;EUSART.c: 38: e->cont = 1;
  2300  001B9E  EE20 F032          	lfsr	2,50
  2301  001BA2  5034               	movf	i1EUSARTEnviar2@e^0,w,c
  2302  001BA4  26D9               	addwf	fsr2l,f,c
  2303  001BA6  5035               	movf	(i1EUSARTEnviar2@e+1)^0,w,c
  2304  001BA8  22DA               	addwfc	fsr2h,f,c
  2305  001BAA  0E01               	movlw	1
  2306  001BAC  6EDF               	movwf	indf2,c
  2307  001BAE                     
  2308                           ;EUSART.c: 39: *reg = e->Datos[0];
  2309  001BAE  C034  FFD9         	movff	i1EUSARTEnviar2@e,fsr2l
  2310  001BB2  C035  FFDA         	movff	i1EUSARTEnviar2@e+1,fsr2h
  2311  001BB6  C032  FFE1         	movff	i1EUSARTEnviar2@reg,fsr1l
  2312  001BBA  C033  FFE2         	movff	i1EUSARTEnviar2@reg+1,fsr1h
  2313  001BBE  CFDF FFE7          	movff	indf2,indf1
  2314  001BC2                     
  2315                           ;EUSART.c: 40: PIE3bits.TX2IE = 1;
  2316  001BC2  88A3               	bsf	163,4,c	;volatile
  2317  001BC4  0012               	return		;funcret
  2318  001BC6                     __end_ofi1_EUSARTEnviar2:
  2319                           	opt callstack 0
  2320                           
  2321 ;; *************** function _Capture *****************
  2322 ;; Defined at:
  2323 ;;		line 9 in file "LReception.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  reception       2    2[COMRAM] PTR struct reception
  2326 ;;		 -> receptores(69), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;Total ram usage:        6 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_IRS_Low
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text8
  2353  001004                     __ptext8:
  2354                           	opt callstack 0
  2355  001004                     _Capture:
  2356                           	opt callstack 27
  2357  001004                     
  2358                           ;LReception.c: 11: if(reception->esperandoInicioRL)
  2359  001004  EE20 F002          	lfsr	2,2
  2360  001008  5032               	movf	Capture@reception^0,w,c
  2361  00100A  26D9               	addwf	fsr2l,f,c
  2362  00100C  5033               	movf	(Capture@reception+1)^0,w,c
  2363  00100E  22DA               	addwfc	fsr2h,f,c
  2364  001010  50DF               	movf	indf2,w,c
  2365  001012  B4D8               	btfsc	status,2,c
  2366  001014  EF0E  F008         	goto	i1u65_21
  2367  001018  EF10  F008         	goto	i1u65_20
  2368  00101C                     i1u65_21:
  2369  00101C  EF38  F008         	goto	i1l1698
  2370  001020                     i1u65_20:
  2371  001020                     
  2372                           ;LReception.c: 12: {;LReception.c: 13: if((reception->capturado._16 >= 2650) && (recepti
      +                          on->capturado._16 <= 2750))
  2373  001020  C032  FFD9         	movff	Capture@reception,fsr2l
  2374  001024  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2375  001028  0E5A               	movlw	90
  2376  00102A  5CDE               	subwf	postinc2,w,c
  2377  00102C  0E0A               	movlw	10
  2378  00102E  58DE               	subwfb	postinc2,w,c
  2379  001030  A0D8               	btfss	status,0,c
  2380  001032  EF1D  F008         	goto	i1u66_21
  2381  001036  EF1F  F008         	goto	i1u66_20
  2382  00103A                     i1u66_21:
  2383  00103A  EF64  F009         	goto	i1l287
  2384  00103E                     i1u66_20:
  2385  00103E  C032  FFD9         	movff	Capture@reception,fsr2l
  2386  001042  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2387  001046  0EBF               	movlw	191
  2388  001048  5CDE               	subwf	postinc2,w,c
  2389  00104A  0E0A               	movlw	10
  2390  00104C  58DE               	subwfb	postinc2,w,c
  2391  00104E  B0D8               	btfsc	status,0,c
  2392  001050  EF2C  F008         	goto	i1u67_21
  2393  001054  EF2E  F008         	goto	i1u67_20
  2394  001058                     i1u67_21:
  2395  001058  EF64  F009         	goto	i1l287
  2396  00105C                     i1u67_20:
  2397  00105C                     
  2398                           ;LReception.c: 14: {;LReception.c: 15: reception->esperandoInicioRL = 0;
  2399  00105C  EE20 F002          	lfsr	2,2
  2400  001060  5032               	movf	Capture@reception^0,w,c
  2401  001062  26D9               	addwf	fsr2l,f,c
  2402  001064  5033               	movf	(Capture@reception+1)^0,w,c
  2403  001066  22DA               	addwfc	fsr2h,f,c
  2404  001068  0E00               	movlw	0
  2405  00106A  6EDF               	movwf	indf2,c
  2406  00106C  EF64  F009         	goto	i1l287
  2407  001070                     i1l1698:
  2408                           
  2409                           ;LReception.c: 18: else;LReception.c: 19: {;LReception.c: 20: if((reception->capturado._
      +                          16 >= 2650) && (reception->capturado._16 <= 2750))
  2410  001070  C032  FFD9         	movff	Capture@reception,fsr2l
  2411  001074  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2412  001078  0E5A               	movlw	90
  2413  00107A  5CDE               	subwf	postinc2,w,c
  2414  00107C  0E0A               	movlw	10
  2415  00107E  58DE               	subwfb	postinc2,w,c
  2416  001080  A0D8               	btfss	status,0,c
  2417  001082  EF45  F008         	goto	i1u68_21
  2418  001086  EF47  F008         	goto	i1u68_20
  2419  00108A                     i1u68_21:
  2420  00108A  EF7F  F008         	goto	i1l1708
  2421  00108E                     i1u68_20:
  2422  00108E  C032  FFD9         	movff	Capture@reception,fsr2l
  2423  001092  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2424  001096  0EBF               	movlw	191
  2425  001098  5CDE               	subwf	postinc2,w,c
  2426  00109A  0E0A               	movlw	10
  2427  00109C  58DE               	subwfb	postinc2,w,c
  2428  00109E  B0D8               	btfsc	status,0,c
  2429  0010A0  EF54  F008         	goto	i1u69_21
  2430  0010A4  EF56  F008         	goto	i1u69_20
  2431  0010A8                     i1u69_21:
  2432  0010A8  EF7F  F008         	goto	i1l1708
  2433  0010AC                     i1u69_20:
  2434  0010AC                     
  2435                           ;LReception.c: 21: {;LReception.c: 22: reception->DatoLaser = reception->DatoLaser >> 1;
  2436  0010AC  EE20 F003          	lfsr	2,3
  2437  0010B0  5032               	movf	Capture@reception^0,w,c
  2438  0010B2  26D9               	addwf	fsr2l,f,c
  2439  0010B4  5033               	movf	(Capture@reception+1)^0,w,c
  2440  0010B6  22DA               	addwfc	fsr2h,f,c
  2441  0010B8  EE10 F003          	lfsr	1,3
  2442  0010BC  5032               	movf	Capture@reception^0,w,c
  2443  0010BE  26E1               	addwf	fsr1l,f,c
  2444  0010C0  5033               	movf	(Capture@reception+1)^0,w,c
  2445  0010C2  22E2               	addwfc	fsr1h,f,c
  2446  0010C4  50E7               	movf	indf1,w,c
  2447  0010C6  6E34               	movwf	??_Capture^0,c
  2448  0010C8  90D8               	bcf	status,0,c
  2449  0010CA  3034               	rrcf	??_Capture^0,w,c
  2450  0010CC  6EDF               	movwf	indf2,c
  2451  0010CE                     
  2452                           ;LReception.c: 23: reception->nBitR++;
  2453  0010CE  EE20 F015          	lfsr	2,21
  2454  0010D2  5032               	movf	Capture@reception^0,w,c
  2455  0010D4  26D9               	addwf	fsr2l,f,c
  2456  0010D6  5033               	movf	(Capture@reception+1)^0,w,c
  2457  0010D8  22DA               	addwfc	fsr2h,f,c
  2458  0010DA  2ADF               	incf	indf2,f,c
  2459  0010DC                     
  2460                           ;LReception.c: 24: reception->DatoLaser = reception->DatoLaser | 128;
  2461  0010DC  EE20 F003          	lfsr	2,3
  2462  0010E0  5032               	movf	Capture@reception^0,w,c
  2463  0010E2  26D9               	addwf	fsr2l,f,c
  2464  0010E4  5033               	movf	(Capture@reception+1)^0,w,c
  2465  0010E6  22DA               	addwfc	fsr2h,f,c
  2466  0010E8  EE10 F003          	lfsr	1,3
  2467  0010EC  5032               	movf	Capture@reception^0,w,c
  2468  0010EE  26E1               	addwf	fsr1l,f,c
  2469  0010F0  5033               	movf	(Capture@reception+1)^0,w,c
  2470  0010F2  22E2               	addwfc	fsr1h,f,c
  2471  0010F4  50E7               	movf	indf1,w,c
  2472  0010F6  0980               	iorlw	128
  2473  0010F8  6EDF               	movwf	indf2,c
  2474                           
  2475                           ;LReception.c: 25: }
  2476  0010FA  EFC7  F008         	goto	i1l280
  2477  0010FE                     i1l1708:
  2478                           
  2479                           ;LReception.c: 26: else if((reception->capturado._16 >= 2220) && (reception->capturado._
      +                          16 <= 2320))
  2480  0010FE  C032  FFD9         	movff	Capture@reception,fsr2l
  2481  001102  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2482  001106  0EAC               	movlw	172
  2483  001108  5CDE               	subwf	postinc2,w,c
  2484  00110A  0E08               	movlw	8
  2485  00110C  58DE               	subwfb	postinc2,w,c
  2486  00110E  A0D8               	btfss	status,0,c
  2487  001110  EF8C  F008         	goto	i1u70_21
  2488  001114  EF8E  F008         	goto	i1u70_20
  2489  001118                     i1u70_21:
  2490  001118  EFB7  F008         	goto	i1l1716
  2491  00111C                     i1u70_20:
  2492  00111C  C032  FFD9         	movff	Capture@reception,fsr2l
  2493  001120  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2494  001124  0E11               	movlw	17
  2495  001126  5CDE               	subwf	postinc2,w,c
  2496  001128  0E09               	movlw	9
  2497  00112A  58DE               	subwfb	postinc2,w,c
  2498  00112C  B0D8               	btfsc	status,0,c
  2499  00112E  EF9B  F008         	goto	i1u71_21
  2500  001132  EF9D  F008         	goto	i1u71_20
  2501  001136                     i1u71_21:
  2502  001136  EFB7  F008         	goto	i1l1716
  2503  00113A                     i1u71_20:
  2504  00113A                     
  2505                           ;LReception.c: 27: {;LReception.c: 28: reception->DatoLaser = reception->DatoLaser >> 1;
  2506  00113A  EE20 F003          	lfsr	2,3
  2507  00113E  5032               	movf	Capture@reception^0,w,c
  2508  001140  26D9               	addwf	fsr2l,f,c
  2509  001142  5033               	movf	(Capture@reception+1)^0,w,c
  2510  001144  22DA               	addwfc	fsr2h,f,c
  2511  001146  EE10 F003          	lfsr	1,3
  2512  00114A  5032               	movf	Capture@reception^0,w,c
  2513  00114C  26E1               	addwf	fsr1l,f,c
  2514  00114E  5033               	movf	(Capture@reception+1)^0,w,c
  2515  001150  22E2               	addwfc	fsr1h,f,c
  2516  001152  50E7               	movf	indf1,w,c
  2517  001154  6E34               	movwf	??_Capture^0,c
  2518  001156  90D8               	bcf	status,0,c
  2519  001158  3034               	rrcf	??_Capture^0,w,c
  2520  00115A  6EDF               	movwf	indf2,c
  2521  00115C                     
  2522                           ;LReception.c: 29: reception->nBitR++;
  2523  00115C  EE20 F015          	lfsr	2,21
  2524  001160  5032               	movf	Capture@reception^0,w,c
  2525  001162  26D9               	addwf	fsr2l,f,c
  2526  001164  5033               	movf	(Capture@reception+1)^0,w,c
  2527  001166  22DA               	addwfc	fsr2h,f,c
  2528  001168  2ADF               	incf	indf2,f,c
  2529                           
  2530                           ;LReception.c: 30: }
  2531  00116A  EFC7  F008         	goto	i1l280
  2532  00116E                     i1l1716:
  2533                           
  2534                           ;LReception.c: 31: else;LReception.c: 32: {;LReception.c: 33: reception->esperandoInicio
      +                          RL = 1;
  2535  00116E  EE20 F002          	lfsr	2,2
  2536  001172  5032               	movf	Capture@reception^0,w,c
  2537  001174  26D9               	addwf	fsr2l,f,c
  2538  001176  5033               	movf	(Capture@reception+1)^0,w,c
  2539  001178  22DA               	addwfc	fsr2h,f,c
  2540  00117A  0E01               	movlw	1
  2541  00117C  6EDF               	movwf	indf2,c
  2542                           
  2543                           ;LReception.c: 34: reception->nBitR = 0;
  2544  00117E  EE20 F015          	lfsr	2,21
  2545  001182  5032               	movf	Capture@reception^0,w,c
  2546  001184  26D9               	addwf	fsr2l,f,c
  2547  001186  5033               	movf	(Capture@reception+1)^0,w,c
  2548  001188  22DA               	addwfc	fsr2h,f,c
  2549  00118A  0E00               	movlw	0
  2550  00118C  6EDF               	movwf	indf2,c
  2551  00118E                     i1l280:
  2552                           
  2553                           ;LReception.c: 35: };LReception.c: 37: if(reception->nBitR == 8)
  2554  00118E  EE20 F015          	lfsr	2,21
  2555  001192  5032               	movf	Capture@reception^0,w,c
  2556  001194  26D9               	addwf	fsr2l,f,c
  2557  001196  5033               	movf	(Capture@reception+1)^0,w,c
  2558  001198  22DA               	addwfc	fsr2h,f,c
  2559  00119A  0E08               	movlw	8
  2560  00119C  18DE               	xorwf	postinc2,w,c
  2561  00119E  A4D8               	btfss	status,2,c
  2562  0011A0  EFD4  F008         	goto	i1u72_21
  2563  0011A4  EFD6  F008         	goto	i1u72_20
  2564  0011A8                     i1u72_21:
  2565  0011A8  EF64  F009         	goto	i1l287
  2566  0011AC                     i1u72_20:
  2567  0011AC                     
  2568                           ;LReception.c: 38: {;LReception.c: 39: reception->nBitR = 0;
  2569  0011AC  EE20 F015          	lfsr	2,21
  2570  0011B0  5032               	movf	Capture@reception^0,w,c
  2571  0011B2  26D9               	addwf	fsr2l,f,c
  2572  0011B4  5033               	movf	(Capture@reception+1)^0,w,c
  2573  0011B6  22DA               	addwfc	fsr2h,f,c
  2574  0011B8  0E00               	movlw	0
  2575  0011BA  6EDF               	movwf	indf2,c
  2576                           
  2577                           ;LReception.c: 40: if(reception->contDatosRecL == 0)
  2578  0011BC  EE20 F013          	lfsr	2,19
  2579  0011C0  5032               	movf	Capture@reception^0,w,c
  2580  0011C2  26D9               	addwf	fsr2l,f,c
  2581  0011C4  5033               	movf	(Capture@reception+1)^0,w,c
  2582  0011C6  22DA               	addwfc	fsr2h,f,c
  2583  0011C8  50DF               	movf	indf2,w,c
  2584  0011CA  A4D8               	btfss	status,2,c
  2585  0011CC  EFEA  F008         	goto	i1u73_21
  2586  0011D0  EFEC  F008         	goto	i1u73_20
  2587  0011D4                     i1u73_21:
  2588  0011D4  EFFC  F008         	goto	i1l1722
  2589  0011D8                     i1u73_20:
  2590  0011D8                     
  2591                           ;LReception.c: 41: {;LReception.c: 42: reception->cantDatosRecL = reception->DatoLaser;
  2592  0011D8  EE20 F003          	lfsr	2,3
  2593  0011DC  5032               	movf	Capture@reception^0,w,c
  2594  0011DE  26D9               	addwf	fsr2l,f,c
  2595  0011E0  5033               	movf	(Capture@reception+1)^0,w,c
  2596  0011E2  22DA               	addwfc	fsr2h,f,c
  2597  0011E4  EE10 F014          	lfsr	1,20
  2598  0011E8  5032               	movf	Capture@reception^0,w,c
  2599  0011EA  26E1               	addwf	fsr1l,f,c
  2600  0011EC  5033               	movf	(Capture@reception+1)^0,w,c
  2601  0011EE  22E2               	addwfc	fsr1h,f,c
  2602  0011F0  CFDF FFE7          	movff	indf2,indf1
  2603                           
  2604                           ;LReception.c: 43: }
  2605  0011F4  EF5D  F009         	goto	i1l285
  2606  0011F8                     i1l1722:
  2607                           
  2608                           ;LReception.c: 44: else;LReception.c: 45: {;LReception.c: 46: reception->DatosRecibidosL
      +                          [reception->contDatosRecL - 1] = reception->DatoLaser;
  2609  0011F8  EE20 F003          	lfsr	2,3
  2610  0011FC  5032               	movf	Capture@reception^0,w,c
  2611  0011FE  26D9               	addwf	fsr2l,f,c
  2612  001200  5033               	movf	(Capture@reception+1)^0,w,c
  2613  001202  22DA               	addwfc	fsr2h,f,c
  2614  001204  EE10 F013          	lfsr	1,19
  2615  001208  5032               	movf	Capture@reception^0,w,c
  2616  00120A  26E1               	addwf	fsr1l,f,c
  2617  00120C  5033               	movf	(Capture@reception+1)^0,w,c
  2618  00120E  22E2               	addwfc	fsr1h,f,c
  2619  001210  50E7               	movf	indf1,w,c
  2620  001212  6E34               	movwf	??_Capture^0,c
  2621  001214  6A35               	clrf	(??_Capture+1)^0,c
  2622  001216  BE34               	btfsc	??_Capture^0,7,c
  2623  001218  0635               	decf	(??_Capture+1)^0,f,c
  2624  00121A  C032  F036         	movff	Capture@reception,??_Capture+2
  2625  00121E  C033  F037         	movff	Capture@reception+1,??_Capture+3
  2626  001222  5034               	movf	??_Capture^0,w,c
  2627  001224  2636               	addwf	(??_Capture+2)^0,f,c
  2628  001226  5035               	movf	(??_Capture+1)^0,w,c
  2629  001228  2237               	addwfc	(??_Capture+3)^0,f,c
  2630  00122A  0E03               	movlw	3
  2631  00122C  2436               	addwf	(??_Capture+2)^0,w,c
  2632  00122E  6EE1               	movwf	fsr1l,c
  2633  001230  0E00               	movlw	0
  2634  001232  2037               	addwfc	(??_Capture+3)^0,w,c
  2635  001234  6EE2               	movwf	fsr1h,c
  2636  001236  CFDF FFE7          	movff	indf2,indf1
  2637  00123A                     
  2638                           ;LReception.c: 48: if(reception->cantDatosRecL == reception->contDatosRecL)
  2639  00123A  EE20 F013          	lfsr	2,19
  2640  00123E  5032               	movf	Capture@reception^0,w,c
  2641  001240  26D9               	addwf	fsr2l,f,c
  2642  001242  5033               	movf	(Capture@reception+1)^0,w,c
  2643  001244  22DA               	addwfc	fsr2h,f,c
  2644  001246  50DF               	movf	indf2,w,c
  2645  001248  6E34               	movwf	??_Capture^0,c
  2646  00124A  6A35               	clrf	(??_Capture+1)^0,c
  2647  00124C  BE34               	btfsc	??_Capture^0,7,c
  2648  00124E  0635               	decf	(??_Capture+1)^0,f,c
  2649  001250  EE20 F014          	lfsr	2,20
  2650  001254  5032               	movf	Capture@reception^0,w,c
  2651  001256  26D9               	addwf	fsr2l,f,c
  2652  001258  5033               	movf	(Capture@reception+1)^0,w,c
  2653  00125A  22DA               	addwfc	fsr2h,f,c
  2654  00125C  50DF               	movf	indf2,w,c
  2655  00125E  6E36               	movwf	(??_Capture+2)^0,c
  2656  001260  6A37               	clrf	(??_Capture+3)^0,c
  2657  001262  5034               	movf	??_Capture^0,w,c
  2658  001264  1836               	xorwf	(??_Capture+2)^0,w,c
  2659  001266  E107               	bnz	i1u74_21
  2660  001268  5035               	movf	(??_Capture+1)^0,w,c
  2661  00126A  1837               	xorwf	(??_Capture+3)^0,w,c
  2662  00126C  A4D8               	btfss	status,2,c
  2663  00126E  EF3B  F009         	goto	i1u74_21
  2664  001272  EF3D  F009         	goto	i1u74_20
  2665  001276                     i1u74_21:
  2666  001276  EF5D  F009         	goto	i1l285
  2667  00127A                     i1u74_20:
  2668  00127A                     
  2669                           ;LReception.c: 49: {;LReception.c: 50: reception->esperandoInicioRL = 1;
  2670  00127A  EE20 F002          	lfsr	2,2
  2671  00127E  5032               	movf	Capture@reception^0,w,c
  2672  001280  26D9               	addwf	fsr2l,f,c
  2673  001282  5033               	movf	(Capture@reception+1)^0,w,c
  2674  001284  22DA               	addwfc	fsr2h,f,c
  2675  001286  0E01               	movlw	1
  2676  001288  6EDF               	movwf	indf2,c
  2677                           
  2678                           ;LReception.c: 51: reception->contDatosRecL = -1;
  2679  00128A  EE20 F013          	lfsr	2,19
  2680  00128E  5032               	movf	Capture@reception^0,w,c
  2681  001290  26D9               	addwf	fsr2l,f,c
  2682  001292  5033               	movf	(Capture@reception+1)^0,w,c
  2683  001294  22DA               	addwfc	fsr2h,f,c
  2684  001296  0EFF               	movlw	255
  2685  001298  6EDF               	movwf	indf2,c
  2686                           
  2687                           ;LReception.c: 52: reception->DatoLaser = 0;
  2688  00129A  EE20 F003          	lfsr	2,3
  2689  00129E  5032               	movf	Capture@reception^0,w,c
  2690  0012A0  26D9               	addwf	fsr2l,f,c
  2691  0012A2  5033               	movf	(Capture@reception+1)^0,w,c
  2692  0012A4  22DA               	addwfc	fsr2h,f,c
  2693  0012A6  0E00               	movlw	0
  2694  0012A8  6EDF               	movwf	indf2,c
  2695                           
  2696                           ;LReception.c: 53: reception->DatosLRecibidoFlag = 1;
  2697  0012AA  EE20 F016          	lfsr	2,22
  2698  0012AE  5032               	movf	Capture@reception^0,w,c
  2699  0012B0  26D9               	addwf	fsr2l,f,c
  2700  0012B2  5033               	movf	(Capture@reception+1)^0,w,c
  2701  0012B4  22DA               	addwfc	fsr2h,f,c
  2702  0012B6  0E01               	movlw	1
  2703  0012B8  6EDF               	movwf	indf2,c
  2704  0012BA                     i1l285:
  2705                           
  2706                           ;LReception.c: 54: };LReception.c: 55: };LReception.c: 57: reception->contDatosRecL++;
  2707  0012BA  EE20 F013          	lfsr	2,19
  2708  0012BE  5032               	movf	Capture@reception^0,w,c
  2709  0012C0  26D9               	addwf	fsr2l,f,c
  2710  0012C2  5033               	movf	(Capture@reception+1)^0,w,c
  2711  0012C4  22DA               	addwfc	fsr2h,f,c
  2712  0012C6  2ADF               	incf	indf2,f,c
  2713  0012C8                     i1l287:
  2714  0012C8  0012               	return		;funcret
  2715  0012CA                     __end_of_Capture:
  2716                           	opt callstack 0
  2717                           
  2718 ;; *************** function _IRS_High *****************
  2719 ;; Defined at:
  2720 ;;		line 112 in file "pechera.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        2 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		Interrupt level 2
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	intcode
  2748  000008                     __pintcode:
  2749                           	opt callstack 0
  2750  000008                     _IRS_High:
  2751                           	opt callstack 27
  2752                           
  2753                           ;incstack = 0
  2754  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2755  00000A  EF5C  F00A         	goto	int_func
  2756                           
  2757                           	psect	intcode_body
  2758  0014B8                     __pintcode_body:
  2759                           	opt callstack 27
  2760  0014B8                     int_func:
  2761                           	opt callstack 27
  2762  0014B8  CFD9 F030          	movff	fsr2l,??_IRS_High
  2763  0014BC  CFDA F031          	movff	fsr2h,??_IRS_High+1
  2764  0014C0                     
  2765                           ;pechera.c: 115: if(INTCONbits.INT0IE && INTCONbits.INT0IF)
  2766  0014C0  A8F2               	btfss	242,4,c	;volatile
  2767  0014C2  EF65  F00A         	goto	i2u83_41
  2768  0014C6  EF67  F00A         	goto	i2u83_40
  2769  0014CA                     i2u83_41:
  2770  0014CA  EF6F  F00A         	goto	i2l208
  2771  0014CE                     i2u83_40:
  2772  0014CE  A2F2               	btfss	242,1,c	;volatile
  2773  0014D0  EF6C  F00A         	goto	i2u84_41
  2774  0014D4  EF6E  F00A         	goto	i2u84_40
  2775  0014D8                     i2u84_41:
  2776  0014D8  EF6F  F00A         	goto	i2l208
  2777  0014DC                     i2u84_40:
  2778  0014DC                     
  2779                           ;pechera.c: 116: {;pechera.c: 119: INTCONbits.INT0IF = 0;
  2780  0014DC  92F2               	bcf	242,1,c	;volatile
  2781  0014DE                     i2l208:
  2782                           
  2783                           ;pechera.c: 120: };pechera.c: 123: if(INTCON3bits.INT2IE && INTCON3bits.INT2IF)
  2784  0014DE  A8F0               	btfss	240,4,c	;volatile
  2785  0014E0  EF74  F00A         	goto	i2u85_41
  2786  0014E4  EF76  F00A         	goto	i2u85_40
  2787  0014E8                     i2u85_41:
  2788  0014E8  EF81  F00A         	goto	i2l1832
  2789  0014EC                     i2u85_40:
  2790  0014EC  A2F0               	btfss	240,1,c	;volatile
  2791  0014EE  EF7B  F00A         	goto	i2u86_41
  2792  0014F2  EF7D  F00A         	goto	i2u86_40
  2793  0014F6                     i2u86_41:
  2794  0014F6  EF81  F00A         	goto	i2l1832
  2795  0014FA                     i2u86_40:
  2796  0014FA                     
  2797                           ;pechera.c: 124: {;pechera.c: 126: debug.Datos[3]^=1;
  2798  0014FA  0E01               	movlw	1
  2799  0014FC  0100               	movlb	0	; () banked
  2800  0014FE  1BA8               	xorwf	(_debug+3)& (0+255),f,b
  2801  001500                     
  2802                           ; BSR set to: 0
  2803                           ;pechera.c: 128: INTCON3bits.INT2IF = 0;
  2804  001500  92F0               	bcf	240,1,c	;volatile
  2805  001502                     i2l1832:
  2806                           
  2807                           ;pechera.c: 129: };pechera.c: 131: if(PIE5bits.TMR4IE && PIR5bits.TMR4IF)
  2808  001502  A07D               	btfss	125,0,c	;volatile
  2809  001504  EF86  F00A         	goto	i2u87_41
  2810  001508  EF88  F00A         	goto	i2u87_40
  2811  00150C                     i2u87_41:
  2812  00150C  EF35  F00B         	goto	i2l229
  2813  001510                     i2u87_40:
  2814  001510  A07E               	btfss	126,0,c	;volatile
  2815  001512  EF8D  F00A         	goto	i2u88_41
  2816  001516  EF8F  F00A         	goto	i2u88_40
  2817  00151A                     i2u88_41:
  2818  00151A  EF35  F00B         	goto	i2l229
  2819  00151E                     i2u88_40:
  2820  00151E                     
  2821                           ;pechera.c: 132: {;pechera.c: 133: if(primerosBitsEL < 15)
  2822  00151E  0E0F               	movlw	15
  2823  001520  6009               	cpfslt	_primerosBitsEL^0,c
  2824  001522  EF95  F00A         	goto	i2u89_41
  2825  001526  EF97  F00A         	goto	i2u89_40
  2826  00152A                     i2u89_41:
  2827  00152A  EFB0  F00A         	goto	i2l1848
  2828  00152E                     i2u89_40:
  2829  00152E                     
  2830                           ;pechera.c: 134: {;pechera.c: 135: if(flancoEL)
  2831  00152E  504C               	movf	_flancoEL^0,w,c
  2832  001530  B4D8               	btfsc	status,2,c
  2833  001532  EF9D  F00A         	goto	i2u90_41
  2834  001536  EF9F  F00A         	goto	i2u90_40
  2835  00153A                     i2u90_41:
  2836  00153A  EFA7  F00A         	goto	i2l212
  2837  00153E                     i2u90_40:
  2838  00153E                     
  2839                           ;pechera.c: 136: {;pechera.c: 137: LA2 = 1;
  2840  00153E  8489               	bsf	3977,2,c	;volatile
  2841  001540                     
  2842                           ;pechera.c: 139: PR4 = 137;
  2843  001540  0E89               	movlw	137
  2844  001542  010F               	movlb	15	; () banked
  2845  001544  6F52               	movwf	82,b	;volatile
  2846                           
  2847                           ;pechera.c: 141: flancoEL = 0;
  2848  001546  0E00               	movlw	0
  2849  001548  6E4C               	movwf	_flancoEL^0,c
  2850                           
  2851                           ;pechera.c: 142: }
  2852  00154A  EF34  F00B         	goto	i2l1900
  2853  00154E                     i2l212:
  2854                           
  2855                           ;pechera.c: 143: else;pechera.c: 144: {;pechera.c: 145: LA2 = 0;
  2856  00154E  9489               	bcf	3977,2,c	;volatile
  2857  001550                     
  2858                           ;pechera.c: 146: PR4 = 70;
  2859  001550  0E46               	movlw	70
  2860  001552  010F               	movlb	15	; () banked
  2861  001554  6F52               	movwf	82,b	;volatile
  2862                           
  2863                           ;pechera.c: 147: flancoEL = 1;
  2864  001556  0E01               	movlw	1
  2865  001558  6E4C               	movwf	_flancoEL^0,c
  2866  00155A                     i2l1846:
  2867                           
  2868                           ; BSR set to: 15
  2869                           ;pechera.c: 148: primerosBitsEL++;
  2870  00155A  2A09               	incf	_primerosBitsEL^0,f,c
  2871  00155C  EF34  F00B         	goto	i2l1900
  2872  001560                     i2l1848:
  2873                           
  2874                           ;pechera.c: 152: else if(primerosBitsEL == 15)
  2875  001560  0E0F               	movlw	15
  2876  001562  1809               	xorwf	_primerosBitsEL^0,w,c
  2877  001564  A4D8               	btfss	status,2,c
  2878  001566  EFB7  F00A         	goto	i2u91_41
  2879  00156A  EFB9  F00A         	goto	i2u91_40
  2880  00156E                     i2u91_41:
  2881  00156E  EFCB  F00A         	goto	i2l1860
  2882  001572                     i2u91_40:
  2883  001572                     
  2884                           ;pechera.c: 153: {;pechera.c: 154: if(flancoEL)
  2885  001572  504C               	movf	_flancoEL^0,w,c
  2886  001574  B4D8               	btfsc	status,2,c
  2887  001576  EFBF  F00A         	goto	i2u92_41
  2888  00157A  EFC1  F00A         	goto	i2u92_40
  2889  00157E                     i2u92_41:
  2890  00157E  EFA7  F00A         	goto	i2l212
  2891  001582                     i2u92_40:
  2892  001582                     
  2893                           ;pechera.c: 155: {;pechera.c: 156: LA2 = 1;
  2894  001582  8489               	bsf	3977,2,c	;volatile
  2895  001584                     
  2896                           ;pechera.c: 158: PR4 = 177;
  2897  001584  0EB1               	movlw	177
  2898  001586  010F               	movlb	15	; () banked
  2899  001588  6F52               	movwf	82,b	;volatile
  2900                           
  2901                           ;pechera.c: 160: flancoEL = 0;
  2902  00158A  0E00               	movlw	0
  2903  00158C  6E4C               	movwf	_flancoEL^0,c
  2904                           
  2905                           ;pechera.c: 161: }
  2906  00158E  EF34  F00B         	goto	i2l1900
  2907  001592                     i2l217:
  2908                           
  2909                           ; BSR set to: 15
  2910                           ;pechera.c: 168: };pechera.c: 169: }
  2911  001592  EF34  F00B         	goto	i2l1900
  2912  001596                     i2l1860:
  2913                           
  2914                           ;pechera.c: 170: else if(primerosBitsEL == 16)
  2915  001596  0E10               	movlw	16
  2916  001598  1809               	xorwf	_primerosBitsEL^0,w,c
  2917  00159A  A4D8               	btfss	status,2,c
  2918  00159C  EFD2  F00A         	goto	i2u93_41
  2919  0015A0  EFD4  F00A         	goto	i2u93_40
  2920  0015A4                     i2u93_41:
  2921  0015A4  EF18  F00B         	goto	i2l1886
  2922  0015A8                     i2u93_40:
  2923  0015A8                     
  2924                           ;pechera.c: 171: {;pechera.c: 172: if(flancoEL)
  2925  0015A8  504C               	movf	_flancoEL^0,w,c
  2926  0015AA  B4D8               	btfsc	status,2,c
  2927  0015AC  EFDA  F00A         	goto	i2u94_41
  2928  0015B0  EFDC  F00A         	goto	i2u94_40
  2929  0015B4                     i2u94_41:
  2930  0015B4  EFF9  F00A         	goto	i2l220
  2931  0015B8                     i2u94_40:
  2932  0015B8                     
  2933                           ;pechera.c: 173: {;pechera.c: 174: LA2 = 1;
  2934  0015B8  8489               	bsf	3977,2,c	;volatile
  2935  0015BA                     
  2936                           ;pechera.c: 176: if(DatosEL[contByteEL] & contBitEL)
  2937  0015BA  0E01               	movlw	low _DatosEL
  2938  0015BC  2408               	addwf	_contByteEL^0,w,c
  2939  0015BE  6ED9               	movwf	fsr2l,c
  2940  0015C0  6ADA               	clrf	fsr2h,c
  2941  0015C2  0E00               	movlw	high _DatosEL
  2942  0015C4  22DA               	addwfc	fsr2h,f,c
  2943  0015C6  50DF               	movf	indf2,w,c
  2944  0015C8  144B               	andwf	_contBitEL^0,w,c
  2945  0015CA  0900               	iorlw	0
  2946  0015CC  B4D8               	btfsc	status,2,c
  2947  0015CE  EFEB  F00A         	goto	i2u95_41
  2948  0015D2  EFED  F00A         	goto	i2u95_40
  2949  0015D6                     i2u95_41:
  2950  0015D6  EFF2  F00A         	goto	i2l1870
  2951  0015DA                     i2u95_40:
  2952  0015DA                     
  2953                           ;pechera.c: 177: PR4 = 177;
  2954  0015DA  0EB1               	movlw	177
  2955  0015DC  010F               	movlb	15	; () banked
  2956  0015DE  6F52               	movwf	82,b	;volatile
  2957  0015E0  EFF5  F00A         	goto	i2l222
  2958  0015E4                     i2l1870:
  2959                           
  2960                           ;pechera.c: 178: else;pechera.c: 179: PR4 = 137;
  2961  0015E4  0E89               	movlw	137
  2962  0015E6  010F               	movlb	15	; () banked
  2963  0015E8  6F52               	movwf	82,b	;volatile
  2964  0015EA                     i2l222:
  2965                           
  2966                           ; BSR set to: 15
  2967                           ;pechera.c: 181: flancoEL = 0;
  2968  0015EA  0E00               	movlw	0
  2969  0015EC  6E4C               	movwf	_flancoEL^0,c
  2970                           
  2971                           ;pechera.c: 182: }
  2972  0015EE  EF34  F00B         	goto	i2l1900
  2973  0015F2                     i2l220:
  2974                           
  2975                           ;pechera.c: 183: else;pechera.c: 184: {;pechera.c: 185: LA2 = 0;
  2976  0015F2  9489               	bcf	3977,2,c	;volatile
  2977  0015F4                     
  2978                           ;pechera.c: 186: PR4 = 70;
  2979  0015F4  0E46               	movlw	70
  2980  0015F6  010F               	movlb	15	; () banked
  2981  0015F8  6F52               	movwf	82,b	;volatile
  2982                           
  2983                           ;pechera.c: 187: flancoEL = 1;
  2984  0015FA  0E01               	movlw	1
  2985  0015FC  6E4C               	movwf	_flancoEL^0,c
  2986  0015FE                     
  2987                           ; BSR set to: 15
  2988                           ;pechera.c: 188: contBitEL = contBitEL << 1;
  2989  0015FE  504B               	movf	_contBitEL^0,w,c
  2990  001600  244B               	addwf	_contBitEL^0,w,c
  2991  001602  6E4B               	movwf	_contBitEL^0,c
  2992  001604                     
  2993                           ; BSR set to: 15
  2994                           ;pechera.c: 190: if(contBitEL == 0)
  2995  001604  504B               	movf	_contBitEL^0,w,c
  2996  001606  A4D8               	btfss	status,2,c
  2997  001608  EF08  F00B         	goto	i2u96_41
  2998  00160C  EF0A  F00B         	goto	i2u96_40
  2999  001610                     i2u96_41:
  3000  001610  EF34  F00B         	goto	i2l1900
  3001  001614                     i2u96_40:
  3002  001614                     
  3003                           ; BSR set to: 15
  3004                           ;pechera.c: 191: {;pechera.c: 192: contBitEL = 1;
  3005  001614  0E01               	movlw	1
  3006  001616  6E4B               	movwf	_contBitEL^0,c
  3007  001618                     
  3008                           ; BSR set to: 15
  3009                           ;pechera.c: 193: contByteEL++;
  3010  001618  2A08               	incf	_contByteEL^0,f,c
  3011  00161A                     
  3012                           ; BSR set to: 15
  3013                           ;pechera.c: 195: if(contByteEL == cantBytesEL)
  3014  00161A  5007               	movf	_cantBytesEL^0,w,c
  3015  00161C  1808               	xorwf	_contByteEL^0,w,c
  3016  00161E  A4D8               	btfss	status,2,c
  3017  001620  EF14  F00B         	goto	i2u97_41
  3018  001624  EF16  F00B         	goto	i2u97_40
  3019  001628                     i2u97_41:
  3020  001628  EFC9  F00A         	goto	i2l217
  3021  00162C                     i2u97_40:
  3022  00162C  EFAD  F00A         	goto	i2l1846
  3023  001630                     i2l1886:
  3024                           
  3025                           ;pechera.c: 202: else;pechera.c: 203: {;pechera.c: 204: if(flancoEL)
  3026  001630  504C               	movf	_flancoEL^0,w,c
  3027  001632  B4D8               	btfsc	status,2,c
  3028  001634  EF1E  F00B         	goto	i2u98_41
  3029  001638  EF20  F00B         	goto	i2u98_40
  3030  00163C                     i2u98_41:
  3031  00163C  EF28  F00B         	goto	i2l1892
  3032  001640                     i2u98_40:
  3033  001640                     
  3034                           ;pechera.c: 205: {;pechera.c: 206: LA2 = 1;
  3035  001640  8489               	bsf	3977,2,c	;volatile
  3036  001642                     
  3037                           ;pechera.c: 207: flancoEL = 0;
  3038  001642  0E00               	movlw	0
  3039  001644  6E4C               	movwf	_flancoEL^0,c
  3040                           
  3041                           ;pechera.c: 208: PR4 = 50;
  3042  001646  0E32               	movlw	50
  3043  001648  010F               	movlb	15	; () banked
  3044  00164A  6F52               	movwf	82,b	;volatile
  3045                           
  3046                           ;pechera.c: 209: }
  3047  00164C  EF34  F00B         	goto	i2l1900
  3048  001650                     i2l1892:
  3049                           
  3050                           ;pechera.c: 210: else;pechera.c: 211: {;pechera.c: 212: primerosBitsEL = 0;
  3051  001650  0E00               	movlw	0
  3052  001652  6E09               	movwf	_primerosBitsEL^0,c
  3053                           
  3054                           ;pechera.c: 213: flancoEL = 1;
  3055  001654  0E01               	movlw	1
  3056  001656  6E4C               	movwf	_flancoEL^0,c
  3057                           
  3058                           ;pechera.c: 214: contBitEL = 1;
  3059  001658  0E01               	movlw	1
  3060  00165A  6E4B               	movwf	_contBitEL^0,c
  3061                           
  3062                           ;pechera.c: 215: contByteEL = 0;
  3063  00165C  0E00               	movlw	0
  3064  00165E  6E08               	movwf	_contByteEL^0,c
  3065  001660                     
  3066                           ;pechera.c: 216: T4CONbits.TMR4ON = 0;
  3067  001660  010F               	movlb	15	; () banked
  3068  001662  9551               	bcf	81,2,b	;volatile
  3069  001664                     
  3070                           ; BSR set to: 15
  3071                           ;pechera.c: 217: PIE5bits.TMR4IE = 0;
  3072  001664  907D               	bcf	125,0,c	;volatile
  3073  001666                     
  3074                           ; BSR set to: 15
  3075                           ;pechera.c: 218: LA2 = 0;
  3076  001666  9489               	bcf	3977,2,c	;volatile
  3077  001668                     i2l1900:
  3078                           
  3079                           ; BSR set to: 15
  3080                           ;pechera.c: 219: };pechera.c: 220: };pechera.c: 222: PIR5bits.TMR4IF = 0;
  3081  001668  907E               	bcf	126,0,c	;volatile
  3082  00166A                     i2l229:
  3083  00166A  C031  FFDA         	movff	??_IRS_High+1,fsr2h
  3084  00166E  C030  FFD9         	movff	??_IRS_High,fsr2l
  3085  001672  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3086  001674  0011               	retfie		f
  3087  001676                     __end_of_IRS_High:
  3088                           	opt callstack 0
  3089                           
  3090                           	psect	rparam
  3091  0000                     
  3092                           	psect	temp
  3093  00004D                     btemp:
  3094                           	opt callstack 0
  3095  00004D                     	ds	1
  3096  0000                     int$flags	set	btemp
  3097  0000                     wtemp8	set	btemp+1
  3098  0000                     ttemp5	set	btemp+1
  3099  0000                     ttemp6	set	btemp+4
  3100  0000                     ttemp7	set	btemp+8
  3101                           tosu	equ	0xFFF
  3102                           tosh	equ	0xFFE
  3103                           tosl	equ	0xFFD
  3104                           stkptr	equ	0xFFC
  3105                           pclatu	equ	0xFFB
  3106                           pclath	equ	0xFFA
  3107                           pcl	equ	0xFF9
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           indf0	equ	0xFEF
  3115                           postinc0	equ	0xFEE
  3116                           postdec0	equ	0xFED
  3117                           preinc0	equ	0xFEC
  3118                           plusw0	equ	0xFEB
  3119                           fsr0h	equ	0xFEA
  3120                           fsr0l	equ	0xFE9
  3121                           wreg	equ	0xFE8
  3122                           indf1	equ	0xFE7
  3123                           postinc1	equ	0xFE6
  3124                           postdec1	equ	0xFE5
  3125                           preinc1	equ	0xFE4
  3126                           plusw1	equ	0xFE3
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           bsr	equ	0xFE0
  3130                           indf2	equ	0xFDF
  3131                           postinc2	equ	0xFDE
  3132                           postdec2	equ	0xFDD
  3133                           preinc2	equ	0xFDC
  3134                           plusw2	equ	0xFDB
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        2
    BSS         221
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      76
    BANK0           160      0     122
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSARTEnviar2@reg	PTR unsigned char  size(2) Largest target is 1
		 -> TXREG2(SFR_1[1]), 

    EUSARTEnviar2@e	PTR struct eusart size(2) Largest target is 53
		 -> debug(BANK0[53]), 

    RFIDInit@spi	PTR struct spi size(2) Largest target is 52
		 -> rfid(BANK1[52]), 

    ReadShot@gameConfig	PTR struct gameConfig size(2) Largest target is 6
		 -> configJuego(COMRAM[6]), 

    ReadShot@reception	PTR struct reception size(2) Largest target is 69
		 -> receptores(BANK0[69]), 

    ReadShot@player	PTR struct player size(2) Largest target is 31
		 -> jugador(COMRAM[31]), 

    Capture@reception	PTR struct reception size(2) Largest target is 69
		 -> receptores(BANK0[69]), 


Critical Paths under _main in COMRAM

    _main->_ReadShot

Critical Paths under _IRS_Low in COMRAM

    _IRS_Low->_Capture

Critical Paths under _IRS_High in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _IRS_Low in BANK0

    None.

Critical Paths under _IRS_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRS_Low in BANK1

    None.

Critical Paths under _IRS_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRS_Low in BANK2

    None.

Critical Paths under _IRS_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRS_Low in BANK3

    None.

Critical Paths under _IRS_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IRS_Low in BANK4

    None.

Critical Paths under _IRS_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IRS_Low in BANK5

    None.

Critical Paths under _IRS_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IRS_Low in BANK6

    None.

Critical Paths under _IRS_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IRS_Low in BANK7

    None.

Critical Paths under _IRS_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IRS_Low in BANK8

    None.

Critical Paths under _IRS_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IRS_Low in BANK9

    None.

Critical Paths under _IRS_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IRS_Low in BANK10

    None.

Critical Paths under _IRS_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IRS_Low in BANK11

    None.

Critical Paths under _IRS_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IRS_Low in BANK12

    None.

Critical Paths under _IRS_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IRS_Low in BANK13

    None.

Critical Paths under _IRS_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IRS_Low in BANK14

    None.

Critical Paths under _IRS_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IRS_Low in BANK15

    None.

Critical Paths under _IRS_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2632
                             _Config
                      _EUSARTEnviar2
                          _InitDebug
                           _RFIDInit
                           _ReadShot
 ---------------------------------------------------------------------------------
 (1) _ReadShot                                            11     5      6    1153
                                             16 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _RFIDInit                                             2     0      2     485
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitDebug                                            2     2      0     246
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSARTEnviar2                                        4     0      4     748
                                             16 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _IRS_Low                                              8     8      0    1156
                                              8 COMRAM     8     8      0
                            _Capture
                    i1_EUSARTEnviar2
 ---------------------------------------------------------------------------------
 (3) i1_EUSARTEnviar2                                      4     0      4     140
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _Capture                                              6     4      2     993
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _IRS_High                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config
   _EUSARTEnviar2
   _InitDebug
   _RFIDInit
   _ReadShot

 _IRS_Low (ROOT)
   _Capture
   i1_EUSARTEnviar2

 _IRS_High (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7A       5       76.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1B      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA      12        0.0%
DATA                 0      0      FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul 22 22:45:13 2020

                      l97 1B06                        bsr 000FE0              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
             __CFG_LVP$ON 000000                       l304 1A22                       l261 14B0  
                     l255 1908                       l328 1B8C                       l265 1372  
                     l266 1398                       l299 17D4                       _LA2 007C4A  
                     _LA3 007C4B                       _LC0 007C58              __CFG_CPB$OFF 000000  
                     _PR4 000F52              __CFG_CPD$OFF 000000                       u800 16FE  
                     u801 16FA                       u810 1728                       u811 1724  
                     u820 1774                       u821 1770                       u750 1834  
                     u751 1830                       u760 18F6                       u761 18F2  
                     u770 168E                       u771 168A                       u780 16B8  
                     u781 16B4                       u790 16D4                       u791 16D0  
          ReadShot@player 0042                       prod 000FF3                       wreg 000FE8  
              _TXSTA2bits 000F72                InitDebug@i 0040                      l2010 12DA  
                    l2020 130A                      l2012 12DE                      l2030 1340  
                    l2022 130E                      l2014 12E2                      l2006 12CA  
                    l2040 1390                      l2032 1350                      l2024 1312  
                    l2016 12F4                      l2008 12CE                      l2050 13D4  
                    l2042 13AA                      l2034 1366                      l2018 1306  
                    l2026 1322                      l2060 1422                      l2052 13D8  
                    l2044 13C6                      l2036 1368                      l2028 1332  
                    l2070 1438                      l2062 1428                      l2054 13DC  
                    l2046 13CC                      l2038 1380                      l1600 1A44  
                    l2080 1488                      l2064 142C                      l2072 1450  
                    l2048 13D0                      l2056 13F4                      l1610 1A5A  
                    l1602 1A52                      l2082 148C                      l2074 1462  
                    l2066 1430                      l2058 1406                      l1620 1A84  
                    l1612 1A5C                      l1604 1A54                      l2084 1490  
                    l2076 147E                      l2068 1434                      l1630 1A9A  
                    l1622 1A86                      l1614 1A6E                      l1606 1A56  
                    l2086 1494                      l2078 1484                      l1640 1AB4  
                    l1632 1A9C                      l1624 1A88                      l1616 1A70  
                    l1608 1A58                      l1800 16B8                      l1650 1ACE  
                    l1642 1AC6                      l1634 1AAE                      l1626 1A96  
                    l1618 1A82                      l1730 1B76                      l1810 178C  
                    l1802 16D4                      l1660 1AE0                      l1652 1AD0  
                    l1644 1AC8                      l1636 1AB0                      l1628 1A98  
                    l1732 1B8A                      l1740 1812                      l1812 17B4  
                    l1804 16FE                      l1670 1AEA                      l1662 1AE2  
                    l1654 1AD2                      l1646 1ACA                      l1638 1AB2  
                    l1742 1822                      l1734 17D6                      l1806 1728  
                    l1680 1AFC                      l1672 1AF4                      l1664 1AE4  
                    l1656 1AD4                      l1648 1ACC                      l1728 1B56  
                    l1752 186C                      l1744 1824                      l1760 190A  
                    l1808 1774                      l1682 1AFE                      l1674 1AF6  
                    l1666 1AE6                      l1658 1AD6                      l1754 18E4  
                    l1746 1834                      l1770 1956                      l1762 1916  
                    l1684 1B00                      l1676 1AF8                      l1668 1AE8  
                    l1596 1A24                      l1756 18E6                      l1780 19A6  
                    l1772 1966                      l1764 1926                      l1686 1B02  
                    l1678 1AFA                      l1598 1A3A                      l1758 18F6  
                    l1790 19F6                      l1782 19B6                      l1774 1976  
                    l1766 1936                      l1688 1B04                      l1792 1A06  
                    l1784 19C6                      l1776 1986                      l1768 1946  
                    l1794 1A16                      l1786 19D6                      l1778 1996  
                    l1788 19E6                      l1796 1676                      l1798 168E  
                    u1200 1340                      u1201 133C                      u1210 1350  
                    u1211 134C                      u1220 1380                      u1221 137C  
                    u1230 1390                      u1231 138C                      u1240 13AA  
                    u1241 13A6                      u1250 1406                      u1170 12F4  
                    u1251 1402                      u1171 12F0                      u1260 1462  
                    u1180 1306                      u1261 145E                      u1181 1302  
                    _LATA 000F89                      u1190 1332                      _LATB 000F8A  
                    u1191 132E             __CFG_DEBUG$ON 000000                      _TMR4 000F53  
                    _WPUB 000F61           __end_of_IRS_Low 0256                      _main 12CA  
                    _rfid 0100                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf1 000FE7                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 004D             __CFG_BORV$190 000000  
                    prodl 000FF3                      start 0256             __CFG_IESO$OFF 000000  
         __end_of_Capture 12CA              ___param_bank 000000              _BAUDCON2bits 000F70  
           _EUSARTEnviar2 1B56                     ?_main 0030                     i1l280 118E  
                   i1l328 1BC4                     i1l248 0236                     i2l220 15F2  
                   i2l212 154E          __end_of_RFIDInit 1A24                     i1l285 12BA  
                   i2l222 15EA                     i1l287 12C8                     i2l208 14DE  
                   i2l217 1592                     i2l229 166A                     _TMR0H 000FD7  
                   _TMR1H 000FCF                     _TMR0L 000FD6                     _TMR1L 000FCE  
                   _TMR3H 000FB3                     _TMR3L 000FB2                     _TMR5H 000F50  
                   _TMR5L 000F4F                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISD 000F95                     _TRISE 000F96          __end_of_IRS_High 1676  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _debug 00A5        __CFG_MCLRE$EXTMCLR 000000  
                   tablat 000FF5          Capture@reception 0032                     ttemp5 004E  
                   ttemp6 0051                     ttemp7 0055                     status 000FD8  
                   wtemp8 004E            __CFG_HFOFST$ON 000000            __CFG_FOSC$HSMP 000000  
         InitDebug@i_2154 0041           __initialization 1B08              __end_of_main 14B8  
        __end_of_ReadShot 17D6            ?_EUSARTEnviar2 0040                    ??_main 004B  
           __activetblptr 000001            __CFG_PLLCFG$ON 000000                 ??_IRS_Low 0038  
        i1EUSARTEnviar2@e 0034                    _CCPR1H 000FBF                    _CCPR1L 000FBE  
                  _CCPR3H 000F5F                    _CCPR3L 000F5E                    _CCPR5H 000F56  
                  _CCPR5L 000F55                    _ANSELA 000F38                    _ANSELB 000F39  
                  _ANSELC 000F3A                    _ANSELD 000F3B         ReadShot@reception 0044  
                  i1l2000 0226                    i1l2002 022C                    i1l2004 0234  
                  i1l1700 108E                    i1l1710 111C                    i1l1702 10AC  
                  i1l1720 11D8                    i1l1712 113A                    i1l1704 10CE  
                  i1l1722 11F8                    i1l1714 115C                    i1l1706 10DC  
                  i1l1724 123A                    i1l1716 116E                    i1l1708 10FE  
                  i1l1726 127A                    i1l1718 11AC                    i1l1814 1B8E  
                  i1l1910 005E                    i1l1902 0036                    i1l1816 1BAE  
                  i1l1920 008C                    i1l1912 0062                    i1l1904 0044  
                  i1l1690 1004                    i1l1818 1BC2                    i1l1922 0094  
                  i1l1930 00AA                    i1l1914 006E                    i1l1906 0052  
                  i1l1692 1020                    i1l1940 00D8                    i1l1932 00B8  
                  i1l1924 0098                    i1l1908 005A                    i1l1916 0070  
                  i1l1694 103E                    i1l1950 010A                    i1l1942 00E4  
                  i1l1934 00C6                    i1l1926 009C                    i1l1918 007E  
                  i1l1696 105C                    i1l1952 011C                    i1l1960 0148  
                  i1l1936 00D0                    i1l1944 00E6                    i1l1928 00A8  
                  i1l1698 1070                    i1l1962 014A                    i1l1954 012C  
                  i1l1946 00F4                    i1l1970 017C                    i1l1938 00D4  
                  i1l1980 01D0                    i1l1972 018A                    i1l1964 015C  
                  i1l1956 012E                    i1l1948 0102                    i1l1990 01E4  
                  i1l1982 01D2                    i1l1974 0198                    i1l1966 0166  
                  i1l1958 0140                    i1l1984 01D6                    i1l1976 01AC  
                  i1l1992 01E6                    i1l1968 017A                    i1l1994 01F4  
                  i1l1986 01DA                    i1l1978 01CC                    i1l1996 0202  
                  i1l1988 01E0                    i1l1998 0216                    i2l1900 1668  
                  i2l1820 14C0                    i2l1830 1500                    i2l1822 14CE  
          __CFG_WDTEN$OFF 000000                    i2l1840 153E                    i2l1832 1502  
                  i2l1824 14DC                    i2l1850 1572                    i2l1842 1540  
                  i2l1834 1510                    i2l1826 14EC                    i2l1852 1582  
                  i2l1860 1596                    i2l1844 1550                    i2l1836 151E  
                  i2l1828 14FA                    i2l1870 15E4                    i2l1862 15A8  
                  i2l1854 1584                    i2l1846 155A                    i2l1838 152E  
                  i2l1880 1618                    i2l1872 15F4                    i2l1864 15B8  
                  i2l1848 1560                    i2l1890 1642                    i2l1882 161A  
                  i2l1874 15FE                    i2l1866 15BA                    i2l1892 1650  
                  i2l1876 1604                    i2l1868 15DA                    i2l1894 1660  
                  i2l1878 1614                    i2l1886 1630                    i2l1896 1664  
                  i2l1888 1640                    i2l1898 1666        __size_of_InitDebug 0134  
               ??_Capture 0034                    _SPBRG2 000F75                    _TXREG2 000F73  
                  _Config 1A24            __CFG_XINST$OFF 000000              _CCPTMRS0bits 000F49  
          __CFG_STVREN$ON 000000                    clear_0 1B26                    clear_1 1B32  
                  clear_2 1B3E              __pdataCOMRAM 004B              __mediumconst 0000  
         i1_EUSARTEnviar2 1B8E                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8        ReadShot@gameConfig 0040               RFIDInit@spi 0040  
              __accesstop 0060   __end_of__initialization 1B44           __CFG_PBADEN$OFF 000000  
           ___rparam_used 000001                 ?_RFIDInit 0040                 ?_IRS_High 0030  
          __pcstackCOMRAM 0030           ??_EUSARTEnviar2 0044         __end_of_InitDebug 190A  
              __pbssBANK0 0060                __pbssBANK1 0100                 ?_ReadShot 0040  
                 ?_Config 0030                ??_RFIDInit 0042        __CFG_CCP2MX$PORTC1 000000  
              ??_IRS_High 0030        __CFG_CCP3MX$PORTE0 000000   __end_ofi1_EUSARTEnviar2 1BC6  
              _contByteEL 0008                   i1u70_20 111C                   i1u70_21 1118  
                 i1u71_20 113A                   i1u71_21 1136                   i1u72_20 11AC  
                 i1u72_21 11A8                   i1u73_20 11D8                   i1u65_20 1020  
                 i1u73_21 11D4                   i1u65_21 101C                   i1u74_20 127A  
                 i1u66_20 103E                   i1u74_21 1276                   i1u66_21 103A  
                 i1u67_20 105C                   i1u67_21 1058                   i1u68_20 108E  
                 i1u68_21 108A                   i1u69_20 10AC                   i1u69_21 10A8  
                 _IRS_Low 0018                   i2u90_40 153E                   i2u90_41 153A  
                 i1u99_20 0044                   i1u99_21 0040                   i2u91_40 1572  
                 i2u83_40 14CE                   i2u91_41 156E                   i2u83_41 14CA  
                 _SPBRGH2 000F76                   i2u92_40 1582                   i2u84_40 14DC  
                 i2u92_41 157E                   i2u84_41 14D8                   i2u93_40 15A8  
                 i2u85_40 14EC                   i2u93_41 15A4                   i2u85_41 14E8  
                 i2u94_40 15B8                   i2u86_40 14FA                   i2u94_41 15B4  
                 i2u86_41 14F6                   i2u95_40 15DA                   i2u87_40 1510  
                 i2u95_41 15D6                   i2u87_41 150C                   i2u96_40 1614  
                 i2u88_40 151E                   i2u96_41 1610                   i2u88_41 151A  
                 i2u97_40 162C                   i2u89_40 152E                   i2u97_41 1628  
                 i2u89_41 152A                   i2u98_40 1640                   i2u98_41 163C  
                 _SSP1BUF 000FC9                   _DatosEL 0001                   _Capture 1004  
              ??_ReadShot 0046           __CFG_PWRTEN$OFF 000000           __size_of_Config 00E4  
                 __Hparam 0000                   __Lparam 0000              __psmallconst 1000  
                 __pcinit 1B08                   __ramtop 1000                   __ptext0 12CA  
                 __ptext1 1676                   __ptext2 190A                   __ptext3 17D6  
                 __ptext4 1B56                   __ptext5 1A24                   __ptext7 1B8E  
                 __ptext8 1004                 _T0CONbits 000FD5                 _T1CONbits 000FCD  
               _T3CONbits 000FB1                   _jugador 000B                 _T4CONbits 000F51  
               _T5CONbits 000F4E                _receptores 0060            __pintcode_body 14B8  
    end_of_initialization 1B44                   int_func 14B8         __end_of_preambulo 1002  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE          ?i1_EUSARTEnviar2 0032                 _PORTBbits 000F81  
        EUSARTEnviar2@reg 0040                 _TRISCbits 000F94                 _TRISEbits 000F96  
             _CCP1CONbits 000FBD               _CCP2CONbits 000F66               _CCP3CONbits 000F5D  
          __end_of_Config 1B08         __size_of_RFIDInit 011A         __size_of_IRS_High 166E  
           __pidataCOMRAM 1BC6       start_initialization 1B08                 _InitDebug 17D6  
                ??_Config 0040         __size_of_ReadShot 0160     __end_of_EUSARTEnviar2 1B8E  
             _cantBytesEL 0007               __pbssCOMRAM 0001                ?_InitDebug 0030  
                ?_IRS_Low 0030                  ?_Capture 0032                 _debugCont 000A  
               __pintcode 0008                IRS_Low@aux 003F        i1EUSARTEnviar2@reg 0032  
               _contBitEL 004B               __pintcodelo 0018          __CFG_PRICLKEN$ON 000000  
             __smallconst 1000                  _IPR1bits 000F9F                  _IPR2bits 000FA2  
                _PIE1bits 000F9D                  _IPR3bits 000FA5                  _PIE2bits 000FA0  
                _IPR4bits 000F7C                  _IPR5bits 000F7F                  _PIE3bits 000FA3  
                _PIE4bits 000F7A                  _PIE5bits 000F7D               _configJuego 002A  
                i1u100_20 0052                  i1u100_21 004E                  i1u101_20 007E  
                i1u101_21 007A                  i1u110_20 015C                  i1u102_20 008C  
                i1u110_21 0158                  i1u102_21 0088                  i1u111_20 018A  
                i1u103_20 00B8                  i1u111_21 0186                  i1u103_21 00B4  
                i1u112_20 0198                  i1u104_20 00C6                  i1u112_21 0194  
                i1u104_21 00C2                  i1u113_20 01AC                  i1u105_20 00F4  
                i1u113_21 01A8                  i1u105_21 00F0                  i1u114_20 01F4  
                i1u106_20 0102                  i1u114_21 01F0                  i1u106_21 00FE  
                i1u115_20 0202                  i1u107_20 011C                  i1u115_21 01FE  
                i1u107_21 0118                  i1u116_20 0216                  i1u108_20 012C  
                i1u116_21 0212                  i1u108_21 0128                  i1u109_20 0140  
                i1u109_21 013C                  _RFIDInit 190A                  _PIR1bits 000F9E  
                _PIR2bits 000FA1                  _PIR3bits 000FA4                  _PIR4bits 000F7B  
                _PIR5bits 000F7E                 _preambulo 1001                  _IRS_High 0008  
                _RCONbits 000FD0          __CFG_WDTPS$32768 000000               ??_InitDebug 0040  
        __size_of_IRS_Low 023E               _INTCON2bits 000FF1               _INTCON3bits 000FF0  
                _ReadShot 1676          __size_of_Capture 02C6                  __Hrparam 0000  
                __Lrparam 0000            _primerosBitsEL 0009              __Lsmallconst 1000  
      __CFG_BOREN$SBORDIS 000000         __CFG_P2BMX$PORTD2 000000  __size_ofi1_EUSARTEnviar2 0038  
                _flancoEL 004C              _SSP1CON1bits 000FC6             __size_of_main 01EE  
          EUSARTEnviar2@e 0042                  int$flags 004D              _SSP1STATbits 000FC7  
              _INTCONbits 000FF2                  intlevel1 0000                  intlevel2 0000  
              _RCSTA2bits 000F71         __CFG_T3CMX$PORTC0 000000    __size_of_EUSARTEnviar2 0038  
       ??i1_EUSARTEnviar2 0036  

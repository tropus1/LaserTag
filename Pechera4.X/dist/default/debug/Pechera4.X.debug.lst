

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul 22 16:43:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F46K22 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  001BF2                     __pidataCOMRAM:
    66                           	opt callstack 0
    67                           
    68                           ;initializer for _contBitEL
    69  001BF2  01                 	db	1
    70                           
    71                           ;initializer for _flancoEL
    72  001BF3  01                 	db	1
    73                           
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt callstack 0
    77  001000  00                 	db	0
    78  001001                     _preambulo:
    79                           	opt callstack 0
    80  001001  7F                 	db	127
    81  001002                     __end_of_preambulo:
    82                           	opt callstack 0
    83  0000                     _TMR4	set	3923
    84  0000                     _CCPR5H	set	3926
    85  0000                     _CCPR5L	set	3925
    86  0000                     _TMR5H	set	3920
    87  0000                     _TMR5L	set	3919
    88  0000                     _CCPR3H	set	3935
    89  0000                     _CCPR3L	set	3934
    90  0000                     _T5CONbits	set	3918
    91  0000                     _CCP3CONbits	set	3933
    92  0000                     _CCPTMRS0bits	set	3913
    93  0000                     _PR4	set	3922
    94  0000                     _T4CONbits	set	3921
    95  0000                     _ANSELD	set	3899
    96  0000                     _ANSELC	set	3898
    97  0000                     _ANSELB	set	3897
    98  0000                     _ANSELA	set	3896
    99  0000                     _PORTBbits	set	3969
   100  0000                     _SSP1BUF	set	4041
   101  0000                     _PIR4bits	set	3963
   102  0000                     _TMR3H	set	4019
   103  0000                     _TMR3L	set	4018
   104  0000                     _PIR2bits	set	4001
   105  0000                     _CCPR1H	set	4031
   106  0000                     _CCPR1L	set	4030
   107  0000                     _TMR1H	set	4047
   108  0000                     _TMR1L	set	4046
   109  0000                     _PIR1bits	set	3998
   110  0000                     _PIR5bits	set	3966
   111  0000                     _RCONbits	set	4048
   112  0000                     _PIE3bits	set	4003
   113  0000                     _IPR3bits	set	4005
   114  0000                     _PIR3bits	set	4004
   115  0000                     _RCSTA2bits	set	3953
   116  0000                     _SPBRGH2	set	3958
   117  0000                     _SPBRG2	set	3957
   118  0000                     _TXSTA2bits	set	3954
   119  0000                     _BAUDCON2bits	set	3952
   120  0000                     _SSP1CON1bits	set	4038
   121  0000                     _SSP1STATbits	set	4039
   122  0000                     _PIE4bits	set	3962
   123  0000                     _IPR4bits	set	3964
   124  0000                     _TRISEbits	set	3990
   125  0000                     _PIE2bits	set	4000
   126  0000                     _IPR2bits	set	4002
   127  0000                     _T3CONbits	set	4017
   128  0000                     _CCP2CONbits	set	3942
   129  0000                     _PIE1bits	set	3997
   130  0000                     _IPR1bits	set	3999
   131  0000                     _T1CONbits	set	4045
   132  0000                     _CCP1CONbits	set	4029
   133  0000                     _PIE5bits	set	3965
   134  0000                     _IPR5bits	set	3967
   135  0000                     _INTCON2bits	set	4081
   136  0000                     _TMR0L	set	4054
   137  0000                     _TMR0H	set	4055
   138  0000                     _T0CONbits	set	4053
   139  0000                     _INTCON3bits	set	4080
   140  0000                     _INTCONbits	set	4082
   141  0000                     _TRISE	set	3990
   142  0000                     _TRISD	set	3989
   143  0000                     _TRISCbits	set	3988
   144  0000                     _WPUB	set	3937
   145  0000                     _TRISB	set	3987
   146  0000                     _LATB	set	3978
   147  0000                     _LATA	set	3977
   148  0000                     _TRISA	set	3986
   149  0000                     _TXREG2	set	3955
   150  0000                     _LA3	set	31819
   151  0000                     _LA2	set	31818
   152  0000                     _LE2	set	31850
   153                           
   154                           ; #config settings
   155  001002  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           	psect	cinit
   158  001AFA                     __pcinit:
   159                           	opt callstack 0
   160  001AFA                     start_initialization:
   161                           	opt callstack 0
   162  001AFA                     __initialization:
   163                           	opt callstack 0
   164                           
   165                           ; Initialize objects allocated to COMRAM (2 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  001AFA  0EF2               	movlw	low __pidataCOMRAM
   168  001AFC  6EF6               	movwf	tblptrl,c
   169  001AFE  0E1B               	movlw	high __pidataCOMRAM
   170  001B00  6EF7               	movwf	tblptrh,c
   171  001B02  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  001B04  6EF8               	movwf	tblptru,c
   173  001B06  0009               	tblrd		*+	;fetch initializer
   174  001B08  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   175  001B0C  0009               	tblrd		*+	;fetch initializer
   176  001B0E  CFF5 F04D          	movff	tablat,__pdataCOMRAM+1
   177                           
   178                           ; Clear objects allocated to BANK1 (52 bytes)
   179  001B12  EE01  F000         	lfsr	0,__pbssBANK1
   180  001B16  0E34               	movlw	52
   181  001B18                     clear_0:
   182  001B18  6AEE               	clrf	postinc0,c
   183  001B1A  06E8               	decf	wreg,f,c
   184  001B1C  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to BANK0 (122 bytes)
   187  001B1E  EE00  F060         	lfsr	0,__pbssBANK0
   188  001B22  0E7A               	movlw	122
   189  001B24                     clear_1:
   190  001B24  6AEE               	clrf	postinc0,c
   191  001B26  06E8               	decf	wreg,f,c
   192  001B28  E1FD               	bnz	clear_1
   193                           
   194                           ; Clear objects allocated to COMRAM (47 bytes)
   195  001B2A  EE00  F001         	lfsr	0,__pbssCOMRAM
   196  001B2E  0E2F               	movlw	47
   197  001B30                     clear_2:
   198  001B30  6AEE               	clrf	postinc0,c
   199  001B32  06E8               	decf	wreg,f,c
   200  001B34  E1FD               	bnz	clear_2
   201  001B36                     end_of_initialization:
   202                           	opt callstack 0
   203  001B36                     __end_of__initialization:
   204                           	opt callstack 0
   205  001B36  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   206  001B38  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   207  001B3A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   208  001B3C  6EF8               	movwf	tblptru,c
   209  001B3E  0E10               	movlw	high __Lsmallconst
   210  001B40  6EF7               	movwf	tblptrh,c
   211  001B42  0100               	movlb	0
   212  001B44  EF65  F009         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMRAM
   215  000001                     __pbssCOMRAM:
   216                           	opt callstack 0
   217  000001                     _DatosEL:
   218                           	opt callstack 0
   219  000001                     	ds	6
   220  000007                     _cantBytesEL:
   221                           	opt callstack 0
   222  000007                     	ds	1
   223  000008                     _contByteEL:
   224                           	opt callstack 0
   225  000008                     	ds	1
   226  000009                     _primerosBitsEL:
   227                           	opt callstack 0
   228  000009                     	ds	1
   229  00000A                     _debugCont:
   230                           	opt callstack 0
   231  00000A                     	ds	1
   232  00000B                     _jugador:
   233                           	opt callstack 0
   234  00000B                     	ds	31
   235  00002A                     _configJuego:
   236                           	opt callstack 0
   237  00002A                     	ds	6
   238                           
   239                           	psect	dataCOMRAM
   240  00004C                     __pdataCOMRAM:
   241                           	opt callstack 0
   242  00004C                     _contBitEL:
   243                           	opt callstack 0
   244  00004C                     	ds	1
   245  00004D                     _flancoEL:
   246                           	opt callstack 0
   247  00004D                     	ds	1
   248                           
   249                           	psect	bssBANK0
   250  000060                     __pbssBANK0:
   251                           	opt callstack 0
   252  000060                     _receptores:
   253                           	opt callstack 0
   254  000060                     	ds	69
   255  0000A5                     _debug:
   256                           	opt callstack 0
   257  0000A5                     	ds	53
   258                           
   259                           	psect	bssBANK1
   260  000100                     __pbssBANK1:
   261                           	opt callstack 0
   262  000100                     _rfid:
   263                           	opt callstack 0
   264  000100                     	ds	52
   265                           
   266                           	psect	cstackCOMRAM
   267  000030                     __pcstackCOMRAM:
   268                           	opt callstack 0
   269  000030                     ??_IRS_High:
   270  000030                     
   271                           ; 1 bytes @ 0x0
   272  000030                     	ds	2
   273  000032                     Capture@reception:
   274                           	opt callstack 0
   275  000032                     i1EUSARTEnviar2@reg:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x2
   279  000032                     	ds	2
   280  000034                     ??_Capture:
   281  000034                     i1EUSARTEnviar2@e:
   282                           	opt callstack 0
   283                           
   284                           ; 2 bytes @ 0x4
   285  000034                     	ds	2
   286  000036                     
   287                           ; 1 bytes @ 0x6
   288  000036                     	ds	2
   289  000038                     ??_IRS_Low:
   290                           
   291                           ; 1 bytes @ 0x8
   292  000038                     	ds	7
   293  00003F                     IRS_Low@aux:
   294                           	opt callstack 0
   295                           
   296                           ; 1 bytes @ 0xF
   297  00003F                     	ds	1
   298  000040                     IRS_Low@i:
   299                           	opt callstack 0
   300                           
   301                           ; 1 bytes @ 0x10
   302  000040                     	ds	1
   303  000041                     InitDebug@i:
   304                           	opt callstack 0
   305  000041                     ReadShot@gameConfig:
   306                           	opt callstack 0
   307  000041                     RFIDInit@spi:
   308                           	opt callstack 0
   309  000041                     RFIDRecive@spi:
   310                           	opt callstack 0
   311  000041                     EUSARTEnviar2@reg:
   312                           	opt callstack 0
   313                           
   314                           ; 2 bytes @ 0x11
   315  000041                     	ds	1
   316  000042                     InitDebug@i_2160:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x12
   320  000042                     	ds	1
   321  000043                     ReadShot@player:
   322                           	opt callstack 0
   323  000043                     EUSARTEnviar2@e:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x13
   327  000043                     	ds	2
   328  000045                     ReadShot@reception:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0x15
   332  000045                     	ds	2
   333  000047                     ??_ReadShot:
   334                           
   335                           ; 1 bytes @ 0x17
   336  000047                     	ds	5
   337  00004C                     
   338                           ; 1 bytes @ 0x1C
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 387 in file "pechera.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels required when called:    4
   364 ;; This function calls:
   365 ;;		_Config
   366 ;;		_EUSARTEnviar2
   367 ;;		_InitDebug
   368 ;;		_RFIDInit
   369 ;;		_RFIDRecive
   370 ;;		_ReadShot
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377  0012CA                     __ptext0:
   378                           	opt callstack 0
   379  0012CA                     _main:
   380                           	opt callstack 27
   381  0012CA                     
   382                           ;pechera.c: 389: Config();
   383  0012CA  EC9E  F00C         	call	_Config	;wreg free
   384  0012CE                     
   385                           ;pechera.c: 390: RFIDInit(&rfid);
   386  0012CE  0E00               	movlw	low _rfid
   387  0012D0  6E41               	movwf	RFIDInit@spi^0,c
   388  0012D2  0E01               	movlw	high _rfid
   389  0012D4  6E42               	movwf	(RFIDInit@spi+1)^0,c
   390  0012D6  EC10  F00D         	call	_RFIDInit	;wreg free
   391  0012DA                     
   392                           ;pechera.c: 391: RFIDRecive(&rfid);
   393  0012DA  0E00               	movlw	low _rfid
   394  0012DC  6E41               	movwf	RFIDRecive@spi^0,c
   395  0012DE  0E01               	movlw	high _rfid
   396  0012E0  6E42               	movwf	(RFIDRecive@spi+1)^0,c
   397  0012E2  ECA4  F00D         	call	_RFIDRecive	;wreg free
   398  0012E6                     
   399                           ;pechera.c: 392: InitDebug();
   400  0012E6  EC04  F00C         	call	_InitDebug	;wreg free
   401  0012EA                     
   402                           ;pechera.c: 394: configJuego.Estado = EnJuego;
   403  0012EA  0E06               	movlw	6
   404  0012EC  6E2F               	movwf	(_configJuego+5)^0,c
   405  0012EE                     l1948:
   406                           
   407                           ;pechera.c: 402: {;pechera.c: 403: if(configJuego.Estado == EnJuego)
   408  0012EE  0E06               	movlw	6
   409  0012F0  182F               	xorwf	(_configJuego+5)^0,w,c
   410  0012F2  A4D8               	btfss	status,2,c
   411  0012F4  EF7E  F009         	goto	u1031
   412  0012F8  EF80  F009         	goto	u1030
   413  0012FC                     u1031:
   414  0012FC  EF77  F009         	goto	l1948
   415  001300                     u1030:
   416  001300                     
   417                           ;pechera.c: 404: {;pechera.c: 405: if(jugador.estado == Revivir)
   418  001300  0E02               	movlw	2
   419  001302  180B               	xorwf	_jugador^0,w,c
   420  001304  A4D8               	btfss	status,2,c
   421  001306  EF87  F009         	goto	u1041
   422  00130A  EF89  F009         	goto	u1040
   423  00130E                     u1041:
   424  00130E  EF97  F009         	goto	l1960
   425  001312                     u1040:
   426  001312                     
   427                           ;pechera.c: 406: {;pechera.c: 407: DatosEL[0] = 3;
   428  001312  0E03               	movlw	3
   429  001314  6E01               	movwf	_DatosEL^0,c
   430  001316                     
   431                           ;pechera.c: 408: DatosEL[1] = jugador.ID;
   432  001316  C00D  F002         	movff	_jugador+2,_DatosEL+1
   433  00131A                     
   434                           ;pechera.c: 409: DatosEL[2] = jugador.equipo;
   435  00131A  C00C  F003         	movff	_jugador+1,_DatosEL+2
   436  00131E                     
   437                           ;pechera.c: 410: DatosEL[3] = jugador.Arma.damage;
   438  00131E  C01F  F004         	movff	_jugador+20,_DatosEL+3
   439                           
   440                           ;pechera.c: 412: cantBytesEL = 4;
   441  001322  0E04               	movlw	4
   442  001324  6E07               	movwf	_cantBytesEL^0,c
   443                           
   444                           ;pechera.c: 413: jugador.estado = Vivo;
   445  001326  0E00               	movlw	0
   446  001328  6E0B               	movwf	_jugador^0,c
   447                           
   448                           ;pechera.c: 414: }
   449  00132A  EF77  F009         	goto	l1948
   450  00132E                     l1960:
   451                           
   452                           ;pechera.c: 415: else if(jugador.estado == Vivo)
   453  00132E  500B               	movf	_jugador^0,w,c
   454  001330  A4D8               	btfss	status,2,c
   455  001332  EF9D  F009         	goto	u1051
   456  001336  EF9F  F009         	goto	u1050
   457  00133A                     u1051:
   458  00133A  EF77  F009         	goto	l1948
   459  00133E                     u1050:
   460  00133E                     
   461                           ;pechera.c: 416: {;pechera.c: 418: if(PORTBbits.RB0 && !jugador.Arma.disparando)
   462  00133E  A081               	btfss	129,0,c	;volatile
   463  001340  EFA4  F009         	goto	u1061
   464  001344  EFA6  F009         	goto	u1060
   465  001348                     u1061:
   466  001348  EFD4  F009         	goto	l269
   467  00134C                     u1060:
   468  00134C  5022               	movf	(_jugador+23)^0,w,c
   469  00134E  A4D8               	btfss	status,2,c
   470  001350  EFAC  F009         	goto	u1071
   471  001354  EFAE  F009         	goto	u1070
   472  001358                     u1071:
   473  001358  EFD4  F009         	goto	l269
   474  00135C                     u1070:
   475  00135C                     
   476                           ;pechera.c: 419: {;pechera.c: 420: TMR4 = 0;
   477  00135C  0E00               	movlw	0
   478  00135E  010F               	movlb	15	; () banked
   479  001360  6F53               	movwf	83,b	;volatile
   480                           
   481                           ;pechera.c: 421: PR4 = 20;
   482  001362  0E14               	movlw	20
   483  001364  6F52               	movwf	82,b	;volatile
   484                           
   485                           ;pechera.c: 422: T4CONbits.T4OUTPS = 10;
   486  001366  5151               	movf	81,w,b	;volatile
   487  001368  0B87               	andlw	-121
   488  00136A  0950               	iorlw	80
   489  00136C  6F51               	movwf	81,b	;volatile
   490                           
   491                           ;pechera.c: 423: T4CONbits.T4CKPS = 0;
   492  00136E  0EFC               	movlw	-4
   493  001370  1751               	andwf	81,f,b	;volatile
   494  001372                     
   495                           ; BSR set to: 15
   496                           ;pechera.c: 424: T4CONbits.TMR4ON = 1;
   497  001372  8551               	bsf	81,2,b	;volatile
   498  001374                     
   499                           ; BSR set to: 15
   500                           ;pechera.c: 425: PIE5bits.TMR4IE = 1;
   501  001374  807D               	bsf	125,0,c	;volatile
   502                           
   503                           ;pechera.c: 427: jugador.Arma.disparando = 1;
   504  001376  0E01               	movlw	1
   505  001378  6E22               	movwf	(_jugador+23)^0,c
   506                           
   507                           ;pechera.c: 430: debug.Datos[0] = 'D';
   508  00137A  0E44               	movlw	68
   509  00137C  0100               	movlb	0	; () banked
   510  00137E  6FA5               	movwf	_debug& (0+255),b
   511                           
   512                           ;pechera.c: 431: debug.Datos[1] = 'i';
   513  001380  0E69               	movlw	105
   514  001382  6FA6               	movwf	(_debug+1)& (0+255),b
   515                           
   516                           ;pechera.c: 432: debug.Datos[2] = 's';
   517  001384  0E73               	movlw	115
   518  001386  6FA7               	movwf	(_debug+2)& (0+255),b
   519                           
   520                           ;pechera.c: 433: debug.Datos[3] = 'p';
   521  001388  0E70               	movlw	112
   522  00138A  6FA8               	movwf	(_debug+3)& (0+255),b
   523                           
   524                           ;pechera.c: 434: debug.CantDatos = 4;
   525  00138C  0E04               	movlw	4
   526  00138E  6FD8               	movwf	(_debug+51)& (0+255),b
   527  001390                     
   528                           ; BSR set to: 0
   529                           ;pechera.c: 435: EUSARTEnviar2(&TXREG2, &debug);
   530  001390  0E73               	movlw	115
   531  001392  6E41               	movwf	EUSARTEnviar2@reg^0,c
   532  001394  0E0F               	movlw	15
   533  001396  6E42               	movwf	(EUSARTEnviar2@reg+1)^0,c
   534  001398  0EA5               	movlw	low _debug
   535  00139A  6E43               	movwf	EUSARTEnviar2@e^0,c
   536  00139C  0E00               	movlw	high _debug
   537  00139E  6E44               	movwf	(EUSARTEnviar2@e+1)^0,c
   538  0013A0  ECC1  F00D         	call	_EUSARTEnviar2	;wreg free
   539                           
   540                           ;pechera.c: 436: }
   541  0013A4  EFE7  F009         	goto	l270
   542  0013A8                     l269:
   543                           
   544                           ;pechera.c: 437: else if(!PORTBbits.RB0 && jugador.Arma.habilDisparo)
   545  0013A8  B081               	btfsc	129,0,c	;volatile
   546  0013AA  EFD9  F009         	goto	u1081
   547  0013AE  EFDB  F009         	goto	u1080
   548  0013B2                     u1081:
   549  0013B2  EFE7  F009         	goto	l270
   550  0013B6                     u1080:
   551  0013B6  5023               	movf	(_jugador+24)^0,w,c
   552  0013B8  B4D8               	btfsc	status,2,c
   553  0013BA  EFE1  F009         	goto	u1091
   554  0013BE  EFE3  F009         	goto	u1090
   555  0013C2                     u1091:
   556  0013C2  EFE7  F009         	goto	l270
   557  0013C6                     u1090:
   558  0013C6                     
   559                           ;pechera.c: 438: {;pechera.c: 439: jugador.Arma.habilDisparo = 0;
   560  0013C6  0E00               	movlw	0
   561  0013C8  6E23               	movwf	(_jugador+24)^0,c
   562                           
   563                           ;pechera.c: 440: jugador.Arma.disparando = 0;
   564  0013CA  0E00               	movlw	0
   565  0013CC  6E22               	movwf	(_jugador+23)^0,c
   566  0013CE                     l270:
   567                           
   568                           ;pechera.c: 441: };pechera.c: 443: if(receptores[0].DatosLRecibidoFlag)
   569  0013CE  0100               	movlb	0	; () banked
   570  0013D0  5176               	movf	(_receptores+22)& (0+255),w,b
   571  0013D2  B4D8               	btfsc	status,2,c
   572  0013D4  EFEE  F009         	goto	u1101
   573  0013D8  EFF0  F009         	goto	u1100
   574  0013DC                     u1101:
   575  0013DC  EF15  F00A         	goto	l1992
   576  0013E0                     u1100:
   577  0013E0                     
   578                           ; BSR set to: 0
   579                           ;pechera.c: 444: {;pechera.c: 445: ReadShot(&configJuego, &jugador, &receptores[0]);
   580  0013E0  0E2A               	movlw	low _configJuego
   581  0013E2  6E41               	movwf	ReadShot@gameConfig^0,c
   582  0013E4  0E00               	movlw	high _configJuego
   583  0013E6  6E42               	movwf	(ReadShot@gameConfig+1)^0,c
   584  0013E8  0E0B               	movlw	low _jugador
   585  0013EA  6E43               	movwf	ReadShot@player^0,c
   586  0013EC  0E00               	movlw	high _jugador
   587  0013EE  6E44               	movwf	(ReadShot@player+1)^0,c
   588  0013F0  0E60               	movlw	low _receptores
   589  0013F2  6E45               	movwf	ReadShot@reception^0,c
   590  0013F4  0E00               	movlw	high _receptores
   591  0013F6  6E46               	movwf	(ReadShot@reception+1)^0,c
   592  0013F8  EC54  F00B         	call	_ReadShot	;wreg free
   593  0013FC                     
   594                           ;pechera.c: 447: receptores[0].DatosLRecibidoFlag = 0;
   595  0013FC  0E00               	movlw	0
   596  0013FE  0100               	movlb	0	; () banked
   597  001400  6F76               	movwf	(_receptores+22)& (0+255),b
   598  001402                     
   599                           ; BSR set to: 0
   600                           ;pechera.c: 450: debug.Datos[0] = 'R';
   601  001402  0E52               	movlw	82
   602  001404  6FA5               	movwf	_debug& (0+255),b
   603  001406                     
   604                           ; BSR set to: 0
   605                           ;pechera.c: 451: debug.Datos[1] = 'e';
   606  001406  0E65               	movlw	101
   607  001408  6FA6               	movwf	(_debug+1)& (0+255),b
   608  00140A                     
   609                           ; BSR set to: 0
   610                           ;pechera.c: 452: debug.Datos[2] = 'c';
   611  00140A  0E63               	movlw	99
   612  00140C  6FA7               	movwf	(_debug+2)& (0+255),b
   613  00140E                     
   614                           ; BSR set to: 0
   615                           ;pechera.c: 453: debug.Datos[3] = '1';
   616  00140E  0E31               	movlw	49
   617  001410  6FA8               	movwf	(_debug+3)& (0+255),b
   618  001412                     
   619                           ; BSR set to: 0
   620                           ;pechera.c: 454: debug.CantDatos = 4;
   621  001412  0E04               	movlw	4
   622  001414  6FD8               	movwf	(_debug+51)& (0+255),b
   623                           
   624                           ;pechera.c: 455: EUSARTEnviar2(&TXREG2, &debug);
   625  001416  0E73               	movlw	115
   626  001418  6E41               	movwf	EUSARTEnviar2@reg^0,c
   627  00141A  0E0F               	movlw	15
   628  00141C  6E42               	movwf	(EUSARTEnviar2@reg+1)^0,c
   629  00141E  0EA5               	movlw	low _debug
   630  001420  6E43               	movwf	EUSARTEnviar2@e^0,c
   631  001422  0E00               	movlw	high _debug
   632  001424  6E44               	movwf	(EUSARTEnviar2@e+1)^0,c
   633  001426  ECC1  F00D         	call	_EUSARTEnviar2	;wreg free
   634  00142A                     l1992:
   635                           
   636                           ;pechera.c: 456: };pechera.c: 458: if(receptores[1].DatosLRecibidoFlag)
   637  00142A  0100               	movlb	0	; () banked
   638  00142C  518D               	movf	(_receptores+45)& (0+255),w,b
   639  00142E  B4D8               	btfsc	status,2,c
   640  001430  EF1C  F00A         	goto	u1111
   641  001434  EF1E  F00A         	goto	u1110
   642  001438                     u1111:
   643  001438  EF43  F00A         	goto	l2008
   644  00143C                     u1110:
   645  00143C                     
   646                           ; BSR set to: 0
   647                           ;pechera.c: 459: {;pechera.c: 460: ReadShot(&configJuego, &jugador, &receptores[1]);
   648  00143C  0E2A               	movlw	low _configJuego
   649  00143E  6E41               	movwf	ReadShot@gameConfig^0,c
   650  001440  0E00               	movlw	high _configJuego
   651  001442  6E42               	movwf	(ReadShot@gameConfig+1)^0,c
   652  001444  0E0B               	movlw	low _jugador
   653  001446  6E43               	movwf	ReadShot@player^0,c
   654  001448  0E00               	movlw	high _jugador
   655  00144A  6E44               	movwf	(ReadShot@player+1)^0,c
   656  00144C  0E77               	movlw	low (_receptores+23)
   657  00144E  6E45               	movwf	ReadShot@reception^0,c
   658  001450  0E00               	movlw	high (_receptores+23)
   659  001452  6E46               	movwf	(ReadShot@reception+1)^0,c
   660  001454  EC54  F00B         	call	_ReadShot	;wreg free
   661  001458                     
   662                           ;pechera.c: 462: receptores[1].DatosLRecibidoFlag = 0;
   663  001458  0E00               	movlw	0
   664  00145A  0100               	movlb	0	; () banked
   665  00145C  6F8D               	movwf	(_receptores+45)& (0+255),b
   666  00145E                     
   667                           ; BSR set to: 0
   668                           ;pechera.c: 465: debug.Datos[0] = 'R';
   669  00145E  0E52               	movlw	82
   670  001460  6FA5               	movwf	_debug& (0+255),b
   671  001462                     
   672                           ; BSR set to: 0
   673                           ;pechera.c: 466: debug.Datos[1] = 'e';
   674  001462  0E65               	movlw	101
   675  001464  6FA6               	movwf	(_debug+1)& (0+255),b
   676  001466                     
   677                           ; BSR set to: 0
   678                           ;pechera.c: 467: debug.Datos[2] = 'c';
   679  001466  0E63               	movlw	99
   680  001468  6FA7               	movwf	(_debug+2)& (0+255),b
   681  00146A                     
   682                           ; BSR set to: 0
   683                           ;pechera.c: 468: debug.Datos[3] = '2';
   684  00146A  0E32               	movlw	50
   685  00146C  6FA8               	movwf	(_debug+3)& (0+255),b
   686  00146E                     
   687                           ; BSR set to: 0
   688                           ;pechera.c: 469: debug.CantDatos = 4;
   689  00146E  0E04               	movlw	4
   690  001470  6FD8               	movwf	(_debug+51)& (0+255),b
   691                           
   692                           ;pechera.c: 470: EUSARTEnviar2(&TXREG2, &debug);
   693  001472  0E73               	movlw	115
   694  001474  6E41               	movwf	EUSARTEnviar2@reg^0,c
   695  001476  0E0F               	movlw	15
   696  001478  6E42               	movwf	(EUSARTEnviar2@reg+1)^0,c
   697  00147A  0EA5               	movlw	low _debug
   698  00147C  6E43               	movwf	EUSARTEnviar2@e^0,c
   699  00147E  0E00               	movlw	high _debug
   700  001480  6E44               	movwf	(EUSARTEnviar2@e+1)^0,c
   701  001482  ECC1  F00D         	call	_EUSARTEnviar2	;wreg free
   702  001486                     l2008:
   703                           
   704                           ;pechera.c: 471: };pechera.c: 473: if(receptores[2].DatosLRecibidoFlag)
   705  001486  0100               	movlb	0	; () banked
   706  001488  51A4               	movf	(_receptores+68)& (0+255),w,b
   707  00148A  B4D8               	btfsc	status,2,c
   708  00148C  EF4A  F00A         	goto	u1121
   709  001490  EF4C  F00A         	goto	u1120
   710  001494                     u1121:
   711  001494  EF73  F00A         	goto	l265
   712  001498                     u1120:
   713  001498                     
   714                           ; BSR set to: 0
   715                           ;pechera.c: 474: {;pechera.c: 475: ReadShot(&configJuego, &jugador, &receptores[2]);
   716  001498  0E2A               	movlw	low _configJuego
   717  00149A  6E41               	movwf	ReadShot@gameConfig^0,c
   718  00149C  0E00               	movlw	high _configJuego
   719  00149E  6E42               	movwf	(ReadShot@gameConfig+1)^0,c
   720  0014A0  0E0B               	movlw	low _jugador
   721  0014A2  6E43               	movwf	ReadShot@player^0,c
   722  0014A4  0E00               	movlw	high _jugador
   723  0014A6  6E44               	movwf	(ReadShot@player+1)^0,c
   724  0014A8  0E8E               	movlw	low (_receptores+46)
   725  0014AA  6E45               	movwf	ReadShot@reception^0,c
   726  0014AC  0E00               	movlw	high (_receptores+46)
   727  0014AE  6E46               	movwf	(ReadShot@reception+1)^0,c
   728  0014B0  EC54  F00B         	call	_ReadShot	;wreg free
   729  0014B4                     
   730                           ;pechera.c: 477: receptores[2].DatosLRecibidoFlag = 0;
   731  0014B4  0E00               	movlw	0
   732  0014B6  0100               	movlb	0	; () banked
   733  0014B8  6FA4               	movwf	(_receptores+68)& (0+255),b
   734  0014BA                     
   735                           ; BSR set to: 0
   736                           ;pechera.c: 480: debug.Datos[0] = 'R';
   737  0014BA  0E52               	movlw	82
   738  0014BC  6FA5               	movwf	_debug& (0+255),b
   739  0014BE                     
   740                           ; BSR set to: 0
   741                           ;pechera.c: 481: debug.Datos[1] = 'e';
   742  0014BE  0E65               	movlw	101
   743  0014C0  6FA6               	movwf	(_debug+1)& (0+255),b
   744  0014C2                     
   745                           ; BSR set to: 0
   746                           ;pechera.c: 482: debug.Datos[2] = 'c';
   747  0014C2  0E63               	movlw	99
   748  0014C4  6FA7               	movwf	(_debug+2)& (0+255),b
   749  0014C6                     
   750                           ; BSR set to: 0
   751                           ;pechera.c: 483: debug.Datos[3] = '3';
   752  0014C6  0E33               	movlw	51
   753  0014C8  6FA8               	movwf	(_debug+3)& (0+255),b
   754  0014CA                     
   755                           ; BSR set to: 0
   756                           ;pechera.c: 484: debug.CantDatos = 4;
   757  0014CA  0E04               	movlw	4
   758  0014CC  6FD8               	movwf	(_debug+51)& (0+255),b
   759                           
   760                           ;pechera.c: 485: EUSARTEnviar2(&TXREG2, &debug);
   761  0014CE  0E73               	movlw	115
   762  0014D0  6E41               	movwf	EUSARTEnviar2@reg^0,c
   763  0014D2  0E0F               	movlw	15
   764  0014D4  6E42               	movwf	(EUSARTEnviar2@reg+1)^0,c
   765  0014D6  0EA5               	movlw	low _debug
   766  0014D8  6E43               	movwf	EUSARTEnviar2@e^0,c
   767  0014DA  0E00               	movlw	high _debug
   768  0014DC  6E44               	movwf	(EUSARTEnviar2@e+1)^0,c
   769  0014DE  ECC1  F00D         	call	_EUSARTEnviar2	;wreg free
   770  0014E2  EF77  F009         	goto	l1948
   771  0014E6                     l265:
   772                           
   773                           ; BSR set to: 0
   774  0014E6  EF77  F009         	goto	l1948
   775  0014EA  EF37  F001         	goto	start
   776  0014EE                     __end_of_main:
   777                           	opt callstack 0
   778                           
   779 ;; *************** function _ReadShot *****************
   780 ;; Defined at:
   781 ;;		line 62 in file "LReception.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  gameConfig      2   17[COMRAM] PTR struct gameConfig
   784 ;;		 -> configJuego(6), 
   785 ;;  player          2   19[COMRAM] PTR struct player
   786 ;;		 -> jugador(31), 
   787 ;;  reception       2   21[COMRAM] PTR struct reception
   788 ;;		 -> receptores(69), 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   800 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;Total ram usage:       11 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    3
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text1
   815  0016A8                     __ptext1:
   816                           	opt callstack 0
   817  0016A8                     _ReadShot:
   818                           	opt callstack 27
   819  0016A8                     
   820                           ;LReception.c: 64: if(player->estado == Vivo)
   821  0016A8  C043  FFD9         	movff	ReadShot@player,fsr2l
   822  0016AC  C044  FFDA         	movff	ReadShot@player+1,fsr2h
   823  0016B0  50DF               	movf	indf2,w,c
   824  0016B2  A4D8               	btfss	status,2,c
   825  0016B4  EF5E  F00B         	goto	u781
   826  0016B8  EF60  F00B         	goto	u780
   827  0016BC                     u781:
   828  0016BC  EF03  F00C         	goto	l303
   829  0016C0                     u780:
   830  0016C0                     
   831                           ;LReception.c: 65: {;LReception.c: 66: if(reception->DatosRecibidosL[1] != player->ID)
   832  0016C0  EE20 F005          	lfsr	2,5
   833  0016C4  5045               	movf	ReadShot@reception^0,w,c
   834  0016C6  26D9               	addwf	fsr2l,f,c
   835  0016C8  5046               	movf	(ReadShot@reception+1)^0,w,c
   836  0016CA  22DA               	addwfc	fsr2h,f,c
   837  0016CC  EE10 F002          	lfsr	1,2
   838  0016D0  5043               	movf	ReadShot@player^0,w,c
   839  0016D2  26E1               	addwf	fsr1l,f,c
   840  0016D4  5044               	movf	(ReadShot@player+1)^0,w,c
   841  0016D6  22E2               	addwfc	fsr1h,f,c
   842  0016D8  50DE               	movf	postinc2,w,c
   843  0016DA  18E6               	xorwf	postinc1,w,c
   844  0016DC  B4D8               	btfsc	status,2,c
   845  0016DE  EF73  F00B         	goto	u791
   846  0016E2  EF75  F00B         	goto	u790
   847  0016E6                     u791:
   848  0016E6  EF03  F00C         	goto	l303
   849  0016EA                     u790:
   850  0016EA                     
   851                           ;LReception.c: 67: {;LReception.c: 68: if(gameConfig->FriendlyFire || reception->DatosRe
      +                          cibidosL[2] != player->equipo)
   852  0016EA  EE20 F004          	lfsr	2,4
   853  0016EE  5041               	movf	ReadShot@gameConfig^0,w,c
   854  0016F0  26D9               	addwf	fsr2l,f,c
   855  0016F2  5042               	movf	(ReadShot@gameConfig+1)^0,w,c
   856  0016F4  22DA               	addwfc	fsr2h,f,c
   857  0016F6  50DF               	movf	indf2,w,c
   858  0016F8  A4D8               	btfss	status,2,c
   859  0016FA  EF81  F00B         	goto	u801
   860  0016FE  EF83  F00B         	goto	u800
   861  001702                     u801:
   862  001702  EF98  F00B         	goto	l1812
   863  001706                     u800:
   864  001706  EE20 F006          	lfsr	2,6
   865  00170A  5045               	movf	ReadShot@reception^0,w,c
   866  00170C  26D9               	addwf	fsr2l,f,c
   867  00170E  5046               	movf	(ReadShot@reception+1)^0,w,c
   868  001710  22DA               	addwfc	fsr2h,f,c
   869  001712  EE10 F001          	lfsr	1,1
   870  001716  5043               	movf	ReadShot@player^0,w,c
   871  001718  26E1               	addwf	fsr1l,f,c
   872  00171A  5044               	movf	(ReadShot@player+1)^0,w,c
   873  00171C  22E2               	addwfc	fsr1h,f,c
   874  00171E  50DE               	movf	postinc2,w,c
   875  001720  18E6               	xorwf	postinc1,w,c
   876  001722  B4D8               	btfsc	status,2,c
   877  001724  EF96  F00B         	goto	u811
   878  001728  EF98  F00B         	goto	u810
   879  00172C                     u811:
   880  00172C  EF03  F00C         	goto	l303
   881  001730                     u810:
   882  001730                     l1812:
   883                           
   884                           ;LReception.c: 69: {;LReception.c: 70: if(player->Vida < reception->DatosRecibidosL[3])
   885  001730  EE20 F007          	lfsr	2,7
   886  001734  5045               	movf	ReadShot@reception^0,w,c
   887  001736  26D9               	addwf	fsr2l,f,c
   888  001738  5046               	movf	(ReadShot@reception+1)^0,w,c
   889  00173A  22DA               	addwfc	fsr2h,f,c
   890  00173C  EE10 F003          	lfsr	1,3
   891  001740  5043               	movf	ReadShot@player^0,w,c
   892  001742  26E1               	addwf	fsr1l,f,c
   893  001744  5044               	movf	(ReadShot@player+1)^0,w,c
   894  001746  22E2               	addwfc	fsr1h,f,c
   895  001748  50DE               	movf	postinc2,w,c
   896  00174A  5CE6               	subwf	postinc1,w,c
   897  00174C  B0D8               	btfsc	status,0,c
   898  00174E  EFAB  F00B         	goto	u821
   899  001752  EFAD  F00B         	goto	u820
   900  001756                     u821:
   901  001756  EFF3  F00B         	goto	l1820
   902  00175A                     u820:
   903  00175A                     
   904                           ;LReception.c: 71: {;LReception.c: 72: player->Vida = 0;
   905  00175A  EE20 F003          	lfsr	2,3
   906  00175E  5043               	movf	ReadShot@player^0,w,c
   907  001760  26D9               	addwf	fsr2l,f,c
   908  001762  5044               	movf	(ReadShot@player+1)^0,w,c
   909  001764  22DA               	addwfc	fsr2h,f,c
   910  001766  0E00               	movlw	0
   911  001768  6EDF               	movwf	indf2,c
   912                           
   913                           ;LReception.c: 73: if(player->Estadisticas.puntos < gameConfig->RestaMuerte )
   914  00176A  EE20 F001          	lfsr	2,1
   915  00176E  5041               	movf	ReadShot@gameConfig^0,w,c
   916  001770  26D9               	addwf	fsr2l,f,c
   917  001772  5042               	movf	(ReadShot@gameConfig+1)^0,w,c
   918  001774  22DA               	addwfc	fsr2h,f,c
   919  001776  50DF               	movf	indf2,w,c
   920  001778  6E47               	movwf	??_ReadShot^0,c
   921  00177A  6A48               	clrf	(??_ReadShot+1)^0,c
   922  00177C  EE20 F01D          	lfsr	2,29
   923  001780  5043               	movf	ReadShot@player^0,w,c
   924  001782  26D9               	addwf	fsr2l,f,c
   925  001784  5044               	movf	(ReadShot@player+1)^0,w,c
   926  001786  22DA               	addwfc	fsr2h,f,c
   927  001788  5047               	movf	??_ReadShot^0,w,c
   928  00178A  5CDE               	subwf	postinc2,w,c
   929  00178C  50DE               	movf	postinc2,w,c
   930  00178E  0A80               	xorlw	128
   931  001790  6E4B               	movwf	(??_ReadShot+4)^0,c
   932  001792  5048               	movf	(??_ReadShot+1)^0,w,c
   933  001794  0A80               	xorlw	128
   934  001796  584B               	subwfb	(??_ReadShot+4)^0,w,c
   935  001798  B0D8               	btfsc	status,0,c
   936  00179A  EFD1  F00B         	goto	u831
   937  00179E  EFD3  F00B         	goto	u830
   938  0017A2                     u831:
   939  0017A2  EFDF  F00B         	goto	l1818
   940  0017A6                     u830:
   941  0017A6                     
   942                           ;LReception.c: 74: {;LReception.c: 75: player->Estadisticas.puntos = 0;
   943  0017A6  EE20 F01D          	lfsr	2,29
   944  0017AA  5043               	movf	ReadShot@player^0,w,c
   945  0017AC  26D9               	addwf	fsr2l,f,c
   946  0017AE  5044               	movf	(ReadShot@player+1)^0,w,c
   947  0017B0  22DA               	addwfc	fsr2h,f,c
   948  0017B2  0E00               	movlw	0
   949  0017B4  6EDE               	movwf	postinc2,c
   950  0017B6  0E00               	movlw	0
   951  0017B8  6EDD               	movwf	postdec2,c
   952                           
   953                           ;LReception.c: 76: }
   954  0017BA  EF03  F00C         	goto	l303
   955  0017BE                     l1818:
   956                           
   957                           ;LReception.c: 77: else;LReception.c: 78: {;LReception.c: 79: player->Estadisticas.punto
      +                          s -= gameConfig->RestaMuerte;
   958  0017BE  EE20 F01D          	lfsr	2,29
   959  0017C2  5043               	movf	ReadShot@player^0,w,c
   960  0017C4  26D9               	addwf	fsr2l,f,c
   961  0017C6  5044               	movf	(ReadShot@player+1)^0,w,c
   962  0017C8  22DA               	addwfc	fsr2h,f,c
   963  0017CA  EE10 F001          	lfsr	1,1
   964  0017CE  5041               	movf	ReadShot@gameConfig^0,w,c
   965  0017D0  26E1               	addwf	fsr1l,f,c
   966  0017D2  5042               	movf	(ReadShot@gameConfig+1)^0,w,c
   967  0017D4  22E2               	addwfc	fsr1h,f,c
   968  0017D6  50E7               	movf	indf1,w,c
   969  0017D8  6E47               	movwf	??_ReadShot^0,c
   970  0017DA  5047               	movf	??_ReadShot^0,w,c
   971  0017DC  5EDE               	subwf	postinc2,f,c
   972  0017DE  0E00               	movlw	0
   973  0017E0  5ADD               	subwfb	postdec2,f,c
   974  0017E2  EF03  F00C         	goto	l303
   975  0017E6                     l1820:
   976                           
   977                           ;LReception.c: 82: else;LReception.c: 83: player->Vida -= reception->DatosRecibidosL[3];
   978  0017E6  EE20 F007          	lfsr	2,7
   979  0017EA  5045               	movf	ReadShot@reception^0,w,c
   980  0017EC  26D9               	addwf	fsr2l,f,c
   981  0017EE  5046               	movf	(ReadShot@reception+1)^0,w,c
   982  0017F0  22DA               	addwfc	fsr2h,f,c
   983  0017F2  50DF               	movf	indf2,w,c
   984  0017F4  6E47               	movwf	??_ReadShot^0,c
   985  0017F6  EE20 F003          	lfsr	2,3
   986  0017FA  5043               	movf	ReadShot@player^0,w,c
   987  0017FC  26D9               	addwf	fsr2l,f,c
   988  0017FE  5044               	movf	(ReadShot@player+1)^0,w,c
   989  001800  22DA               	addwfc	fsr2h,f,c
   990  001802  5047               	movf	??_ReadShot^0,w,c
   991  001804  5EDF               	subwf	indf2,f,c
   992  001806                     l303:
   993  001806  0012               	return		;funcret
   994  001808                     __end_of_ReadShot:
   995                           	opt callstack 0
   996                           
   997 ;; *************** function _RFIDRecive *****************
   998 ;; Defined at:
   999 ;;		line 29 in file "RFID.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  spi             2   17[COMRAM] PTR struct spi
  1002 ;;		 -> rfid(52), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        2 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    3
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029  001B48                     __ptext2:
  1030                           	opt callstack 0
  1031  001B48                     _RFIDRecive:
  1032                           	opt callstack 27
  1033  001B48                     
  1034                           ;RFID.c: 31: spi->Datos[0] = 0x02;
  1035  001B48  C041  FFD9         	movff	RFIDRecive@spi,fsr2l
  1036  001B4C  C042  FFDA         	movff	RFIDRecive@spi+1,fsr2h
  1037  001B50  0E02               	movlw	2
  1038  001B52  6EDF               	movwf	indf2,c
  1039  001B54                     
  1040                           ;RFID.c: 32: spi->Datos[1] = 0x08;
  1041  001B54  EE20 F001          	lfsr	2,1
  1042  001B58  5041               	movf	RFIDRecive@spi^0,w,c
  1043  001B5A  26D9               	addwf	fsr2l,f,c
  1044  001B5C  5042               	movf	(RFIDRecive@spi+1)^0,w,c
  1045  001B5E  22DA               	addwfc	fsr2h,f,c
  1046  001B60  0E08               	movlw	8
  1047  001B62  6EDF               	movwf	indf2,c
  1048  001B64                     
  1049                           ;RFID.c: 34: spi->cantDatos = 1;
  1050  001B64  EE20 F033          	lfsr	2,51
  1051  001B68  5041               	movf	RFIDRecive@spi^0,w,c
  1052  001B6A  26D9               	addwf	fsr2l,f,c
  1053  001B6C  5042               	movf	(RFIDRecive@spi+1)^0,w,c
  1054  001B6E  22DA               	addwfc	fsr2h,f,c
  1055  001B70  0E01               	movlw	1
  1056  001B72  6EDF               	movwf	indf2,c
  1057  001B74                     
  1058                           ;RFID.c: 35: SSP1BUF = spi->Datos[0];
  1059  001B74  C041  FFD9         	movff	RFIDRecive@spi,fsr2l
  1060  001B78  C042  FFDA         	movff	RFIDRecive@spi+1,fsr2h
  1061  001B7C  50DF               	movf	indf2,w,c
  1062  001B7E  6EC9               	movwf	201,c	;volatile
  1063  001B80  0012               	return		;funcret
  1064  001B82                     __end_of_RFIDRecive:
  1065                           	opt callstack 0
  1066                           
  1067 ;; *************** function _RFIDInit *****************
  1068 ;; Defined at:
  1069 ;;		line 4 in file "RFID.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  spi             2   17[COMRAM] PTR struct spi
  1072 ;;		 -> rfid(52), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;Total ram usage:        2 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    3
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text3
  1099  001A20                     __ptext3:
  1100                           	opt callstack 0
  1101  001A20                     _RFIDInit:
  1102                           	opt callstack 27
  1103  001A20                     
  1104                           ;RFID.c: 6: spi->Datos[0] = 0x04;
  1105  001A20  C041  FFD9         	movff	RFIDInit@spi,fsr2l
  1106  001A24  C042  FFDA         	movff	RFIDInit@spi+1,fsr2h
  1107  001A28  0E04               	movlw	4
  1108  001A2A  6EDF               	movwf	indf2,c
  1109  001A2C                     
  1110                           ;RFID.c: 7: spi->Datos[1] = 0x60;
  1111  001A2C  EE20 F001          	lfsr	2,1
  1112  001A30  5041               	movf	RFIDInit@spi^0,w,c
  1113  001A32  26D9               	addwf	fsr2l,f,c
  1114  001A34  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1115  001A36  22DA               	addwfc	fsr2h,f,c
  1116  001A38  0E60               	movlw	96
  1117  001A3A  6EDF               	movwf	indf2,c
  1118  001A3C                     
  1119                           ;RFID.c: 9: spi->Datos[2] = 0x06;
  1120  001A3C  EE20 F002          	lfsr	2,2
  1121  001A40  5041               	movf	RFIDInit@spi^0,w,c
  1122  001A42  26D9               	addwf	fsr2l,f,c
  1123  001A44  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1124  001A46  22DA               	addwfc	fsr2h,f,c
  1125  001A48  0E06               	movlw	6
  1126  001A4A  6EDF               	movwf	indf2,c
  1127  001A4C                     
  1128                           ;RFID.c: 10: spi->Datos[3] = 0x80;
  1129  001A4C  EE20 F003          	lfsr	2,3
  1130  001A50  5041               	movf	RFIDInit@spi^0,w,c
  1131  001A52  26D9               	addwf	fsr2l,f,c
  1132  001A54  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1133  001A56  22DA               	addwfc	fsr2h,f,c
  1134  001A58  0E80               	movlw	128
  1135  001A5A  6EDF               	movwf	indf2,c
  1136  001A5C                     
  1137                           ;RFID.c: 12: spi->Datos[4] = 0x22;
  1138  001A5C  EE20 F004          	lfsr	2,4
  1139  001A60  5041               	movf	RFIDInit@spi^0,w,c
  1140  001A62  26D9               	addwf	fsr2l,f,c
  1141  001A64  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1142  001A66  22DA               	addwfc	fsr2h,f,c
  1143  001A68  0E22               	movlw	34
  1144  001A6A  6EDF               	movwf	indf2,c
  1145  001A6C                     
  1146                           ;RFID.c: 13: spi->Datos[5] = 0x83;
  1147  001A6C  EE20 F005          	lfsr	2,5
  1148  001A70  5041               	movf	RFIDInit@spi^0,w,c
  1149  001A72  26D9               	addwf	fsr2l,f,c
  1150  001A74  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1151  001A76  22DA               	addwfc	fsr2h,f,c
  1152  001A78  0E83               	movlw	131
  1153  001A7A  6EDF               	movwf	indf2,c
  1154  001A7C                     
  1155                           ;RFID.c: 15: spi->Datos[6] = 0x24;
  1156  001A7C  EE20 F006          	lfsr	2,6
  1157  001A80  5041               	movf	RFIDInit@spi^0,w,c
  1158  001A82  26D9               	addwf	fsr2l,f,c
  1159  001A84  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1160  001A86  22DA               	addwfc	fsr2h,f,c
  1161  001A88  0E24               	movlw	36
  1162  001A8A  6EDF               	movwf	indf2,c
  1163  001A8C                     
  1164                           ;RFID.c: 16: spi->Datos[7] = 0xB0;
  1165  001A8C  EE20 F007          	lfsr	2,7
  1166  001A90  5041               	movf	RFIDInit@spi^0,w,c
  1167  001A92  26D9               	addwf	fsr2l,f,c
  1168  001A94  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1169  001A96  22DA               	addwfc	fsr2h,f,c
  1170  001A98  0EB0               	movlw	176
  1171  001A9A  6EDF               	movwf	indf2,c
  1172  001A9C                     
  1173                           ;RFID.c: 18: spi->Datos[8] = 0x26;
  1174  001A9C  EE20 F008          	lfsr	2,8
  1175  001AA0  5041               	movf	RFIDInit@spi^0,w,c
  1176  001AA2  26D9               	addwf	fsr2l,f,c
  1177  001AA4  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1178  001AA6  22DA               	addwfc	fsr2h,f,c
  1179  001AA8  0E26               	movlw	38
  1180  001AAA  6EDF               	movwf	indf2,c
  1181  001AAC                     
  1182                           ;RFID.c: 19: spi->Datos[9] = 0xB0;
  1183  001AAC  EE20 F009          	lfsr	2,9
  1184  001AB0  5041               	movf	RFIDInit@spi^0,w,c
  1185  001AB2  26D9               	addwf	fsr2l,f,c
  1186  001AB4  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1187  001AB6  22DA               	addwfc	fsr2h,f,c
  1188  001AB8  0EB0               	movlw	176
  1189  001ABA  6EDF               	movwf	indf2,c
  1190  001ABC                     
  1191                           ;RFID.c: 21: spi->Datos[10] = 0x4C;
  1192  001ABC  EE20 F00A          	lfsr	2,10
  1193  001AC0  5041               	movf	RFIDInit@spi^0,w,c
  1194  001AC2  26D9               	addwf	fsr2l,f,c
  1195  001AC4  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1196  001AC6  22DA               	addwfc	fsr2h,f,c
  1197  001AC8  0E4C               	movlw	76
  1198  001ACA  6EDF               	movwf	indf2,c
  1199  001ACC                     
  1200                           ;RFID.c: 22: spi->Datos[11] = 0x00;
  1201  001ACC  EE20 F00B          	lfsr	2,11
  1202  001AD0  5041               	movf	RFIDInit@spi^0,w,c
  1203  001AD2  26D9               	addwf	fsr2l,f,c
  1204  001AD4  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1205  001AD6  22DA               	addwfc	fsr2h,f,c
  1206  001AD8  0E00               	movlw	0
  1207  001ADA  6EDF               	movwf	indf2,c
  1208  001ADC                     
  1209                           ;RFID.c: 24: SSP1BUF = spi->Datos[0];
  1210  001ADC  C041  FFD9         	movff	RFIDInit@spi,fsr2l
  1211  001AE0  C042  FFDA         	movff	RFIDInit@spi+1,fsr2h
  1212  001AE4  50DF               	movf	indf2,w,c
  1213  001AE6  6EC9               	movwf	201,c	;volatile
  1214  001AE8                     
  1215                           ;RFID.c: 25: spi->cantDatos = 11;
  1216  001AE8  EE20 F033          	lfsr	2,51
  1217  001AEC  5041               	movf	RFIDInit@spi^0,w,c
  1218  001AEE  26D9               	addwf	fsr2l,f,c
  1219  001AF0  5042               	movf	(RFIDInit@spi+1)^0,w,c
  1220  001AF2  22DA               	addwfc	fsr2h,f,c
  1221  001AF4  0E0B               	movlw	11
  1222  001AF6  6EDF               	movwf	indf2,c
  1223  001AF8  0012               	return		;funcret
  1224  001AFA                     __end_of_RFIDInit:
  1225                           	opt callstack 0
  1226                           
  1227 ;; *************** function _InitDebug *****************
  1228 ;; Defined at:
  1229 ;;		line 337 in file "pechera.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  i               1   18[COMRAM] unsigned char 
  1234 ;;  i               1   17[COMRAM] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;Total ram usage:        2 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    3
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text4
  1259  001808                     __ptext4:
  1260                           	opt callstack 0
  1261  001808                     _InitDebug:
  1262                           	opt callstack 27
  1263  001808                     
  1264                           ;pechera.c: 339: configJuego.Estado = Inicializacion;
  1265  001808  0E00               	movlw	0
  1266  00180A  6E2F               	movwf	(_configJuego+5)^0,c
  1267                           
  1268                           ;pechera.c: 340: configJuego.FriendlyFire = 0;
  1269  00180C  0E00               	movlw	0
  1270  00180E  6E2E               	movwf	(_configJuego+4)^0,c
  1271                           
  1272                           ;pechera.c: 341: configJuego.RestaKillEquipo = 3;
  1273  001810  0E03               	movlw	3
  1274  001812  6E2D               	movwf	(_configJuego+3)^0,c
  1275                           
  1276                           ;pechera.c: 342: configJuego.RestaMuerte = 6;
  1277  001814  0E06               	movlw	6
  1278  001816  6E2B               	movwf	(_configJuego+1)^0,c
  1279                           
  1280                           ;pechera.c: 343: configJuego.SumaAsesinato = 5;
  1281  001818  0E05               	movlw	5
  1282  00181A  6E2A               	movwf	_configJuego^0,c
  1283                           
  1284                           ;pechera.c: 344: configJuego.SumaAsistencia = 1;
  1285  00181C  0E01               	movlw	1
  1286  00181E  6E2C               	movwf	(_configJuego+2)^0,c
  1287                           
  1288                           ;pechera.c: 346: jugador.estado = Revivir;
  1289  001820  0E02               	movlw	2
  1290  001822  6E0B               	movwf	_jugador^0,c
  1291                           
  1292                           ;pechera.c: 347: jugador.equipo = Verde;
  1293  001824  0E02               	movlw	2
  1294  001826  6E0C               	movwf	(_jugador+1)^0,c
  1295                           
  1296                           ;pechera.c: 348: jugador.ID = 101;
  1297  001828  0E65               	movlw	101
  1298  00182A  6E0D               	movwf	(_jugador+2)^0,c
  1299                           
  1300                           ;pechera.c: 349: jugador.Vida = 100;
  1301  00182C  0E64               	movlw	100
  1302  00182E  6E0E               	movwf	(_jugador+3)^0,c
  1303                           
  1304                           ;pechera.c: 350: jugador.Balas = 20;
  1305  001830  0E14               	movlw	20
  1306  001832  6E0F               	movwf	(_jugador+4)^0,c
  1307                           
  1308                           ;pechera.c: 351: jugador.BalasMax = 20;
  1309  001834  0E14               	movlw	20
  1310  001836  6E10               	movwf	(_jugador+5)^0,c
  1311                           
  1312                           ;pechera.c: 352: jugador.Cargadores = 1;
  1313  001838  0E01               	movlw	1
  1314  00183A  6E11               	movwf	(_jugador+6)^0,c
  1315                           
  1316                           ;pechera.c: 353: jugador.CargadoresMax = 5;
  1317  00183C  0E05               	movlw	5
  1318  00183E  6E12               	movwf	(_jugador+7)^0,c
  1319                           
  1320                           ;pechera.c: 354: for(char i = 0; i < 10; i++)
  1321  001840  0E00               	movlw	0
  1322  001842  6E41               	movwf	InitDebug@i^0,c
  1323  001844                     l1748:
  1324                           
  1325                           ;pechera.c: 355: jugador.IDHitters[i] = 0;
  1326  001844  0E15               	movlw	low (_jugador+10)
  1327  001846  2441               	addwf	InitDebug@i^0,w,c
  1328  001848  6ED9               	movwf	fsr2l,c
  1329  00184A  6ADA               	clrf	fsr2h,c
  1330  00184C  0E00               	movlw	high (_jugador+10)
  1331  00184E  22DA               	addwfc	fsr2h,f,c
  1332  001850  0E00               	movlw	0
  1333  001852  6EDF               	movwf	indf2,c
  1334  001854  2A41               	incf	InitDebug@i^0,f,c
  1335  001856  0E09               	movlw	9
  1336  001858  6441               	cpfsgt	InitDebug@i^0,c
  1337  00185A  EF31  F00C         	goto	u761
  1338  00185E  EF33  F00C         	goto	u760
  1339  001862                     u761:
  1340  001862  EF22  F00C         	goto	l1748
  1341  001866                     u760:
  1342  001866                     
  1343                           ;pechera.c: 356: jugador.contAssits = 0;
  1344  001866  0E00               	movlw	0
  1345  001868  6E13               	movwf	(_jugador+8)^0,c
  1346                           
  1347                           ;pechera.c: 357: jugador.IDKiller = 0;
  1348  00186A  0E00               	movlw	0
  1349  00186C  6E14               	movwf	(_jugador+9)^0,c
  1350                           
  1351                           ;pechera.c: 359: jugador.Arma.damage = 15;
  1352  00186E  0E0F               	movlw	15
  1353  001870  6E1F               	movwf	(_jugador+20)^0,c
  1354                           
  1355                           ;pechera.c: 360: jugador.Arma.tDisparos = 50;
  1356  001872  0E32               	movlw	50
  1357  001874  6E20               	movwf	(_jugador+21)^0,c
  1358                           
  1359                           ;pechera.c: 361: jugador.Arma.contDisparo = 0;
  1360  001876  0E00               	movlw	0
  1361  001878  6E21               	movwf	(_jugador+22)^0,c
  1362                           
  1363                           ;pechera.c: 362: jugador.Arma.disparando = 0;
  1364  00187A  0E00               	movlw	0
  1365  00187C  6E22               	movwf	(_jugador+23)^0,c
  1366                           
  1367                           ;pechera.c: 363: jugador.Arma.habilDisparo = 0;
  1368  00187E  0E00               	movlw	0
  1369  001880  6E23               	movwf	(_jugador+24)^0,c
  1370                           
  1371                           ;pechera.c: 365: jugador.Estadisticas.puntos = 0;
  1372  001882  0E00               	movlw	0
  1373  001884  6E29               	movwf	(_jugador+30)^0,c
  1374  001886  0E00               	movlw	0
  1375  001888  6E28               	movwf	(_jugador+29)^0,c
  1376                           
  1377                           ;pechera.c: 366: jugador.Estadisticas.Kills = 0;
  1378  00188A  0E00               	movlw	0
  1379  00188C  6E24               	movwf	(_jugador+25)^0,c
  1380                           
  1381                           ;pechera.c: 367: jugador.Estadisticas.Deaths = 0;
  1382  00188E  0E00               	movlw	0
  1383  001890  6E25               	movwf	(_jugador+26)^0,c
  1384                           
  1385                           ;pechera.c: 368: jugador.Estadisticas.Assists = 0;
  1386  001892  0E00               	movlw	0
  1387  001894  6E26               	movwf	(_jugador+27)^0,c
  1388                           
  1389                           ;pechera.c: 369: jugador.Estadisticas.Punteria = 0;
  1390  001896  0E00               	movlw	0
  1391  001898  6E27               	movwf	(_jugador+28)^0,c
  1392                           
  1393                           ;pechera.c: 371: for(char i = 0; i < 3; i++)
  1394  00189A  0E00               	movlw	0
  1395  00189C  6E42               	movwf	InitDebug@i_2160^0,c
  1396  00189E                     l1760:
  1397                           
  1398                           ;pechera.c: 372: {;pechera.c: 373: receptores[i].esperandoInicioRL = 1;
  1399  00189E  5042               	movf	InitDebug@i_2160^0,w,c
  1400  0018A0  0D17               	mullw	23
  1401  0018A2  0E62               	movlw	low (_receptores+2)
  1402  0018A4  24F3               	addwf	243,w,c
  1403  0018A6  6ED9               	movwf	fsr2l,c
  1404  0018A8  0E00               	movlw	high (_receptores+2)
  1405  0018AA  20F4               	addwfc	prodh,w,c
  1406  0018AC  6EDA               	movwf	fsr2h,c
  1407  0018AE  0E01               	movlw	1
  1408  0018B0  6EDF               	movwf	indf2,c
  1409                           
  1410                           ;pechera.c: 374: receptores[i].DatoLaser = 0;
  1411  0018B2  5042               	movf	InitDebug@i_2160^0,w,c
  1412  0018B4  0D17               	mullw	23
  1413  0018B6  0E63               	movlw	low (_receptores+3)
  1414  0018B8  24F3               	addwf	243,w,c
  1415  0018BA  6ED9               	movwf	fsr2l,c
  1416  0018BC  0E00               	movlw	high (_receptores+3)
  1417  0018BE  20F4               	addwfc	prodh,w,c
  1418  0018C0  6EDA               	movwf	fsr2h,c
  1419  0018C2  0E00               	movlw	0
  1420  0018C4  6EDF               	movwf	indf2,c
  1421                           
  1422                           ;pechera.c: 375: receptores[i].contDatosRecL = 0;
  1423  0018C6  5042               	movf	InitDebug@i_2160^0,w,c
  1424  0018C8  0D17               	mullw	23
  1425  0018CA  0E73               	movlw	low (_receptores+19)
  1426  0018CC  24F3               	addwf	243,w,c
  1427  0018CE  6ED9               	movwf	fsr2l,c
  1428  0018D0  0E00               	movlw	high (_receptores+19)
  1429  0018D2  20F4               	addwfc	prodh,w,c
  1430  0018D4  6EDA               	movwf	fsr2h,c
  1431  0018D6  0E00               	movlw	0
  1432  0018D8  6EDF               	movwf	indf2,c
  1433                           
  1434                           ;pechera.c: 376: receptores[i].cantDatosRecL = 0;
  1435  0018DA  5042               	movf	InitDebug@i_2160^0,w,c
  1436  0018DC  0D17               	mullw	23
  1437  0018DE  0E74               	movlw	low (_receptores+20)
  1438  0018E0  24F3               	addwf	243,w,c
  1439  0018E2  6ED9               	movwf	fsr2l,c
  1440  0018E4  0E00               	movlw	high (_receptores+20)
  1441  0018E6  20F4               	addwfc	prodh,w,c
  1442  0018E8  6EDA               	movwf	fsr2h,c
  1443  0018EA  0E00               	movlw	0
  1444  0018EC  6EDF               	movwf	indf2,c
  1445                           
  1446                           ;pechera.c: 377: receptores[i].nBitR = 0;
  1447  0018EE  5042               	movf	InitDebug@i_2160^0,w,c
  1448  0018F0  0D17               	mullw	23
  1449  0018F2  0E75               	movlw	low (_receptores+21)
  1450  0018F4  24F3               	addwf	243,w,c
  1451  0018F6  6ED9               	movwf	fsr2l,c
  1452  0018F8  0E00               	movlw	high (_receptores+21)
  1453  0018FA  20F4               	addwfc	prodh,w,c
  1454  0018FC  6EDA               	movwf	fsr2h,c
  1455  0018FE  0E00               	movlw	0
  1456  001900  6EDF               	movwf	indf2,c
  1457                           
  1458                           ;pechera.c: 378: receptores[i].DatosLRecibidoFlag = 0;
  1459  001902  5042               	movf	InitDebug@i_2160^0,w,c
  1460  001904  0D17               	mullw	23
  1461  001906  0E76               	movlw	low (_receptores+22)
  1462  001908  24F3               	addwf	243,w,c
  1463  00190A  6ED9               	movwf	fsr2l,c
  1464  00190C  0E00               	movlw	high (_receptores+22)
  1465  00190E  20F4               	addwfc	prodh,w,c
  1466  001910  6EDA               	movwf	fsr2h,c
  1467  001912  0E00               	movlw	0
  1468  001914  6EDF               	movwf	indf2,c
  1469  001916  2A42               	incf	InitDebug@i_2160^0,f,c
  1470  001918  0E02               	movlw	2
  1471  00191A  6442               	cpfsgt	InitDebug@i_2160^0,c
  1472  00191C  EF92  F00C         	goto	u771
  1473  001920  EF94  F00C         	goto	u770
  1474  001924                     u771:
  1475  001924  EF4F  F00C         	goto	l1760
  1476  001928                     u770:
  1477  001928                     
  1478                           ;pechera.c: 379: };pechera.c: 381: debug.Transmitiendo = 0;
  1479  001928  0E00               	movlw	0
  1480  00192A  0100               	movlb	0	; () banked
  1481  00192C  6FD9               	movwf	(_debug+52)& (0+255),b
  1482                           
  1483                           ;pechera.c: 382: debug.CantDatos = 1;
  1484  00192E  0E01               	movlw	1
  1485  001930  6FD8               	movwf	(_debug+51)& (0+255),b
  1486                           
  1487                           ;pechera.c: 383: debug.cont = 0;
  1488  001932  0E00               	movlw	0
  1489  001934  6FD7               	movwf	(_debug+50)& (0+255),b
  1490                           
  1491                           ;pechera.c: 384: debug.Datos[0] = 0;
  1492  001936  0E00               	movlw	0
  1493  001938  6FA5               	movwf	_debug& (0+255),b
  1494  00193A                     
  1495                           ; BSR set to: 0
  1496  00193A  0012               	return		;funcret
  1497  00193C                     __end_of_InitDebug:
  1498                           	opt callstack 0
  1499                           
  1500 ;; *************** function _EUSARTEnviar2 *****************
  1501 ;; Defined at:
  1502 ;;		line 35 in file "EUSART.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  reg             2   17[COMRAM] PTR unsigned char 
  1505 ;;		 -> TXREG2(1), 
  1506 ;;  e               2   19[COMRAM] PTR struct eusart
  1507 ;;		 -> debug(53), 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;Total ram usage:        4 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    3
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text5
  1534  001B82                     __ptext5:
  1535                           	opt callstack 0
  1536  001B82                     _EUSARTEnviar2:
  1537                           	opt callstack 27
  1538  001B82                     
  1539                           ;EUSART.c: 37: e->Transmitiendo = 1;
  1540  001B82  EE20 F034          	lfsr	2,52
  1541  001B86  5043               	movf	EUSARTEnviar2@e^0,w,c
  1542  001B88  26D9               	addwf	fsr2l,f,c
  1543  001B8A  5044               	movf	(EUSARTEnviar2@e+1)^0,w,c
  1544  001B8C  22DA               	addwfc	fsr2h,f,c
  1545  001B8E  0E01               	movlw	1
  1546  001B90  6EDF               	movwf	indf2,c
  1547                           
  1548                           ;EUSART.c: 38: e->cont = 1;
  1549  001B92  EE20 F032          	lfsr	2,50
  1550  001B96  5043               	movf	EUSARTEnviar2@e^0,w,c
  1551  001B98  26D9               	addwf	fsr2l,f,c
  1552  001B9A  5044               	movf	(EUSARTEnviar2@e+1)^0,w,c
  1553  001B9C  22DA               	addwfc	fsr2h,f,c
  1554  001B9E  0E01               	movlw	1
  1555  001BA0  6EDF               	movwf	indf2,c
  1556  001BA2                     
  1557                           ;EUSART.c: 39: *reg = e->Datos[0];
  1558  001BA2  C043  FFD9         	movff	EUSARTEnviar2@e,fsr2l
  1559  001BA6  C044  FFDA         	movff	EUSARTEnviar2@e+1,fsr2h
  1560  001BAA  C041  FFE1         	movff	EUSARTEnviar2@reg,fsr1l
  1561  001BAE  C042  FFE2         	movff	EUSARTEnviar2@reg+1,fsr1h
  1562  001BB2  CFDF FFE7          	movff	indf2,indf1
  1563  001BB6                     
  1564                           ;EUSART.c: 40: PIE3bits.TX2IE = 1;
  1565  001BB6  88A3               	bsf	163,4,c	;volatile
  1566  001BB8  0012               	return		;funcret
  1567  001BBA                     __end_of_EUSARTEnviar2:
  1568                           	opt callstack 0
  1569                           
  1570 ;; *************** function _Config *****************
  1571 ;; Defined at:
  1572 ;;		line 12 in file "config.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text6
  1601  00193C                     __ptext6:
  1602                           	opt callstack 0
  1603  00193C                     _Config:
  1604                           	opt callstack 27
  1605  00193C                     
  1606                           ;config.c: 15: ANSELA = 1;
  1607  00193C  0E01               	movlw	1
  1608  00193E  010F               	movlb	15	; () banked
  1609  001940  6F38               	movwf	56,b	;volatile
  1610                           
  1611                           ;config.c: 16: TRISA = 1;
  1612  001942  0E01               	movlw	1
  1613  001944  6E92               	movwf	146,c	;volatile
  1614                           
  1615                           ;config.c: 17: LATA = 0;
  1616  001946  0E00               	movlw	0
  1617  001948  6E89               	movwf	137,c	;volatile
  1618                           
  1619                           ;config.c: 20: ANSELB = 0;
  1620  00194A  0E00               	movlw	0
  1621  00194C  6F39               	movwf	57,b	;volatile
  1622                           
  1623                           ;config.c: 21: LATB = 0;
  1624  00194E  0E00               	movlw	0
  1625  001950  6E8A               	movwf	138,c	;volatile
  1626  001952                     
  1627                           ; BSR set to: 15
  1628                           ;config.c: 22: TRISB = 255;
  1629  001952  6893               	setf	147,c	;volatile
  1630                           
  1631                           ;config.c: 23: WPUB = 0;
  1632  001954  0E00               	movlw	0
  1633  001956  6E61               	movwf	97,c	;volatile
  1634                           
  1635                           ;config.c: 26: ANSELC = 0;
  1636  001958  0E00               	movlw	0
  1637  00195A  6F3A               	movwf	58,b	;volatile
  1638  00195C                     
  1639                           ; BSR set to: 15
  1640                           ;config.c: 27: TRISCbits.TRISC0 = 0;
  1641  00195C  9094               	bcf	148,0,c	;volatile
  1642                           
  1643                           ;config.c: 30: ANSELD = 0;
  1644  00195E  0E00               	movlw	0
  1645  001960  6F3B               	movwf	59,b	;volatile
  1646                           
  1647                           ;config.c: 31: TRISD = 192;
  1648  001962  0EC0               	movlw	192
  1649  001964  6E95               	movwf	149,c	;volatile
  1650                           
  1651                           ;config.c: 34: TRISE = 0;
  1652  001966  0E00               	movlw	0
  1653  001968  6E96               	movwf	150,c	;volatile
  1654  00196A                     
  1655                           ; BSR set to: 15
  1656                           ;config.c: 37: INTCONbits.INT0IE = 0;
  1657  00196A  98F2               	bcf	242,4,c	;volatile
  1658  00196C                     
  1659                           ; BSR set to: 15
  1660                           ;config.c: 40: INTCON3bits.INT2IP = 1;
  1661  00196C  8EF0               	bsf	240,7,c	;volatile
  1662  00196E                     
  1663                           ; BSR set to: 15
  1664                           ;config.c: 41: INTCON3bits.INT2E = 1;
  1665  00196E  88F0               	bsf	240,4,c	;volatile
  1666  001970                     
  1667                           ; BSR set to: 15
  1668                           ;config.c: 44: T0CONbits.T08BIT = 0;
  1669  001970  9CD5               	bcf	213,6,c	;volatile
  1670  001972                     
  1671                           ; BSR set to: 15
  1672                           ;config.c: 45: T0CONbits.T0CS = 0;
  1673  001972  9AD5               	bcf	213,5,c	;volatile
  1674  001974                     
  1675                           ; BSR set to: 15
  1676                           ;config.c: 46: T0CONbits.PSA = 0;
  1677  001974  96D5               	bcf	213,3,c	;volatile
  1678                           
  1679                           ;config.c: 47: T0CONbits.T0PS = 2;
  1680  001976  50D5               	movf	213,w,c	;volatile
  1681  001978  0BF8               	andlw	-8
  1682  00197A  0902               	iorlw	2
  1683  00197C  6ED5               	movwf	213,c	;volatile
  1684                           
  1685                           ;config.c: 48: TMR0H = 99;
  1686  00197E  0E63               	movlw	99
  1687  001980  6ED7               	movwf	215,c	;volatile
  1688                           
  1689                           ;config.c: 49: TMR0L = 191;
  1690  001982  0EBF               	movlw	191
  1691  001984  6ED6               	movwf	214,c	;volatile
  1692  001986                     
  1693                           ; BSR set to: 15
  1694                           ;config.c: 50: INTCON2bits.TMR0IP = 0;
  1695  001986  94F1               	bcf	241,2,c	;volatile
  1696  001988                     
  1697                           ; BSR set to: 15
  1698                           ;config.c: 51: INTCONbits.TMR0IE = 1;
  1699  001988  8AF2               	bsf	242,5,c	;volatile
  1700                           
  1701                           ;config.c: 54: T4CONbits.T4OUTPS = 10;
  1702  00198A  5151               	movf	81,w,b	;volatile
  1703  00198C  0B87               	andlw	-121
  1704  00198E  0950               	iorlw	80
  1705  001990  6F51               	movwf	81,b	;volatile
  1706                           
  1707                           ;config.c: 55: T4CONbits.T4CKPS = 0;
  1708  001992  0EFC               	movlw	-4
  1709  001994  1751               	andwf	81,f,b	;volatile
  1710                           
  1711                           ;config.c: 56: PR4 = 203;
  1712  001996  0ECB               	movlw	203
  1713  001998  6F52               	movwf	82,b	;volatile
  1714  00199A                     
  1715                           ; BSR set to: 15
  1716                           ;config.c: 57: IPR5bits.TMR4IP = 1;
  1717  00199A  807F               	bsf	127,0,c	;volatile
  1718  00199C                     
  1719                           ; BSR set to: 15
  1720                           ;config.c: 58: T4CONbits.TMR4ON = 0;
  1721  00199C  9551               	bcf	81,2,b	;volatile
  1722  00199E                     
  1723                           ; BSR set to: 15
  1724                           ;config.c: 59: PIE5bits.TMR4IE = 1;
  1725  00199E  807D               	bsf	125,0,c	;volatile
  1726  0019A0                     
  1727                           ; BSR set to: 15
  1728                           ;config.c: 62: TRISCbits.TRISC2 = 1;
  1729  0019A0  8494               	bsf	148,2,c	;volatile
  1730                           
  1731                           ;config.c: 63: CCPTMRS0bits.C1TSEL = 0;
  1732  0019A2  0EFC               	movlw	-4
  1733  0019A4  1749               	andwf	73,f,b	;volatile
  1734                           
  1735                           ;config.c: 64: CCP1CONbits.CCP1M = 5;
  1736  0019A6  50BD               	movf	189,w,c	;volatile
  1737  0019A8  0BF0               	andlw	-16
  1738  0019AA  0905               	iorlw	5
  1739  0019AC  6EBD               	movwf	189,c	;volatile
  1740  0019AE                     
  1741                           ; BSR set to: 15
  1742                           ;config.c: 65: T1CONbits.TMR1ON = 1;
  1743  0019AE  80CD               	bsf	205,0,c	;volatile
  1744  0019B0                     
  1745                           ; BSR set to: 15
  1746                           ;config.c: 66: IPR1bits.CCP1IP = 0;
  1747  0019B0  949F               	bcf	159,2,c	;volatile
  1748  0019B2                     
  1749                           ; BSR set to: 15
  1750                           ;config.c: 67: PIE1bits.CCP1IE = 1;
  1751  0019B2  849D               	bsf	157,2,c	;volatile
  1752  0019B4                     
  1753                           ; BSR set to: 15
  1754                           ;config.c: 70: TRISCbits.TRISC1 = 1;
  1755  0019B4  8294               	bsf	148,1,c	;volatile
  1756                           
  1757                           ;config.c: 71: CCPTMRS0bits.C2TSEL = 1;
  1758  0019B6  5149               	movf	73,w,b	;volatile
  1759  0019B8  0BE7               	andlw	-25
  1760  0019BA  0908               	iorlw	8
  1761  0019BC  6F49               	movwf	73,b	;volatile
  1762                           
  1763                           ;config.c: 72: CCP2CONbits.CCP2M = 5;
  1764  0019BE  5066               	movf	102,w,c	;volatile
  1765  0019C0  0BF0               	andlw	-16
  1766  0019C2  0905               	iorlw	5
  1767  0019C4  6E66               	movwf	102,c	;volatile
  1768  0019C6                     
  1769                           ; BSR set to: 15
  1770                           ;config.c: 73: T3CONbits.TMR3ON = 1;
  1771  0019C6  80B1               	bsf	177,0,c	;volatile
  1772  0019C8                     
  1773                           ; BSR set to: 15
  1774                           ;config.c: 74: IPR2bits.CCP2IP = 0;
  1775  0019C8  90A2               	bcf	162,0,c	;volatile
  1776  0019CA                     
  1777                           ; BSR set to: 15
  1778                           ;config.c: 75: PIE2bits.CCP2IE = 1;
  1779  0019CA  80A0               	bsf	160,0,c	;volatile
  1780  0019CC                     
  1781                           ; BSR set to: 15
  1782                           ;config.c: 78: TRISEbits.TRISE0 = 1;
  1783  0019CC  8096               	bsf	150,0,c	;volatile
  1784                           
  1785                           ;config.c: 79: CCPTMRS0bits.C3TSEL = 2;
  1786  0019CE  5149               	movf	73,w,b	;volatile
  1787  0019D0  0B3F               	andlw	-193
  1788  0019D2  0980               	iorlw	128
  1789  0019D4  6F49               	movwf	73,b	;volatile
  1790                           
  1791                           ;config.c: 80: CCP3CONbits.CCP3M = 5;
  1792  0019D6  515D               	movf	93,w,b	;volatile
  1793  0019D8  0BF0               	andlw	-16
  1794  0019DA  0905               	iorlw	5
  1795  0019DC  6F5D               	movwf	93,b	;volatile
  1796  0019DE                     
  1797                           ; BSR set to: 15
  1798                           ;config.c: 81: T5CONbits.TMR5ON = 1;
  1799  0019DE  814E               	bsf	78,0,b	;volatile
  1800  0019E0                     
  1801                           ; BSR set to: 15
  1802                           ;config.c: 82: IPR4bits.CCP3IP = 0;
  1803  0019E0  907C               	bcf	124,0,c	;volatile
  1804  0019E2                     
  1805                           ; BSR set to: 15
  1806                           ;config.c: 83: PIE4bits.CCP3IE = 1;
  1807  0019E2  807A               	bsf	122,0,c	;volatile
  1808  0019E4                     
  1809                           ; BSR set to: 15
  1810                           ;config.c: 86: TRISCbits.TRISC3 = 0;
  1811  0019E4  9694               	bcf	148,3,c	;volatile
  1812  0019E6                     
  1813                           ; BSR set to: 15
  1814                           ;config.c: 87: TRISCbits.TRISC4 = 1;
  1815  0019E6  8894               	bsf	148,4,c	;volatile
  1816  0019E8                     
  1817                           ; BSR set to: 15
  1818                           ;config.c: 88: TRISCbits.TRISC5 = 0;
  1819  0019E8  9A94               	bcf	148,5,c	;volatile
  1820  0019EA                     
  1821                           ; BSR set to: 15
  1822                           ;config.c: 89: SSP1STATbits.SMP = 0;
  1823  0019EA  9EC7               	bcf	199,7,c	;volatile
  1824  0019EC                     
  1825                           ; BSR set to: 15
  1826                           ;config.c: 90: SSP1STATbits.CKE = 1;
  1827  0019EC  8CC7               	bsf	199,6,c	;volatile
  1828  0019EE                     
  1829                           ; BSR set to: 15
  1830                           ;config.c: 91: SSP1CON1bits.CKP = 0;
  1831  0019EE  98C6               	bcf	198,4,c	;volatile
  1832                           
  1833                           ;config.c: 92: SSP1CON1bits.SSPM = 2;
  1834  0019F0  50C6               	movf	198,w,c	;volatile
  1835  0019F2  0BF0               	andlw	-16
  1836  0019F4  0902               	iorlw	2
  1837  0019F6  6EC6               	movwf	198,c	;volatile
  1838  0019F8                     
  1839                           ; BSR set to: 15
  1840                           ;config.c: 93: SSP1CON1bits.SSPEN = 1;
  1841  0019F8  8AC6               	bsf	198,5,c	;volatile
  1842  0019FA                     
  1843                           ; BSR set to: 15
  1844                           ;config.c: 94: IPR1bits.SSP1IP = 0;
  1845  0019FA  969F               	bcf	159,3,c	;volatile
  1846  0019FC                     
  1847                           ; BSR set to: 15
  1848                           ;config.c: 95: PIE1bits.SSP1IE = 1;
  1849  0019FC  869D               	bsf	157,3,c	;volatile
  1850  0019FE                     
  1851                           ; BSR set to: 15
  1852                           ;config.c: 98: BAUDCON2bits.BRG16 = 1;
  1853  0019FE  8670               	bsf	112,3,c	;volatile
  1854  001A00                     
  1855                           ; BSR set to: 15
  1856                           ;config.c: 99: TXSTA2bits.BRGH = 0;
  1857  001A00  9472               	bcf	114,2,c	;volatile
  1858  001A02                     
  1859                           ; BSR set to: 15
  1860                           ;config.c: 100: TXSTA2bits.SYNC = 0;
  1861  001A02  9872               	bcf	114,4,c	;volatile
  1862                           
  1863                           ;config.c: 101: SPBRG2 = 0xA0;
  1864  001A04  0EA0               	movlw	160
  1865  001A06  6E75               	movwf	117,c	;volatile
  1866                           
  1867                           ;config.c: 102: SPBRGH2 = 0x01;
  1868  001A08  0E01               	movlw	1
  1869  001A0A  6E76               	movwf	118,c	;volatile
  1870  001A0C                     
  1871                           ; BSR set to: 15
  1872                           ;config.c: 103: RCSTA2bits.CREN = 0;
  1873  001A0C  9871               	bcf	113,4,c	;volatile
  1874  001A0E                     
  1875                           ; BSR set to: 15
  1876                           ;config.c: 104: TXSTA2bits.TXEN = 1;
  1877  001A0E  8A72               	bsf	114,5,c	;volatile
  1878  001A10                     
  1879                           ; BSR set to: 15
  1880                           ;config.c: 105: PIR3bits.TX2IF = 0;
  1881  001A10  98A4               	bcf	164,4,c	;volatile
  1882  001A12                     
  1883                           ; BSR set to: 15
  1884                           ;config.c: 106: RCSTA2bits.SPEN = 1;
  1885  001A12  8E71               	bsf	113,7,c	;volatile
  1886  001A14                     
  1887                           ; BSR set to: 15
  1888                           ;config.c: 107: IPR3bits.TX2IP = 0;
  1889  001A14  98A5               	bcf	165,4,c	;volatile
  1890  001A16                     
  1891                           ; BSR set to: 15
  1892                           ;config.c: 108: PIE3bits.TX2IE = 1;
  1893  001A16  88A3               	bsf	163,4,c	;volatile
  1894  001A18                     
  1895                           ; BSR set to: 15
  1896                           ;config.c: 110: RCONbits.IPEN = 1;
  1897  001A18  8ED0               	bsf	208,7,c	;volatile
  1898  001A1A                     
  1899                           ; BSR set to: 15
  1900                           ;config.c: 111: INTCONbits.GIEH = 1;
  1901  001A1A  8EF2               	bsf	242,7,c	;volatile
  1902  001A1C                     
  1903                           ; BSR set to: 15
  1904                           ;config.c: 112: INTCONbits.GIEL = 1;
  1905  001A1C  8CF2               	bsf	242,6,c	;volatile
  1906  001A1E                     
  1907                           ; BSR set to: 15
  1908  001A1E  0012               	return		;funcret
  1909  001A20                     __end_of_Config:
  1910                           	opt callstack 0
  1911                           
  1912 ;; *************** function _IRS_Low *****************
  1913 ;; Defined at:
  1914 ;;		line 226 in file "pechera.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  i               1   16[COMRAM] unsigned char 
  1919 ;;  aux             1   15[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;Total ram usage:        9 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    2
  1936 ;; This function calls:
  1937 ;;		_Capture
  1938 ;;		i1_EUSARTEnviar2
  1939 ;; This function is called by:
  1940 ;;		Interrupt level 1
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	intcodelo
  1945  000018                     __pintcodelo:
  1946                           	opt callstack 0
  1947  000018                     _IRS_Low:
  1948                           	opt callstack 27
  1949                           
  1950                           ; BSR set to: 15
  1951                           ;incstack = 0
  1952  000018  804E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1953  00001A  CFD8 F038          	movff	status,??_IRS_Low
  1954  00001E  CFE8 F039          	movff	wreg,??_IRS_Low+1
  1955  000022  CFE0 F03A          	movff	bsr,??_IRS_Low+2
  1956  000026  CFE1 F03B          	movff	fsr1l,??_IRS_Low+3
  1957  00002A  CFE2 F03C          	movff	fsr1h,??_IRS_Low+4
  1958  00002E  CFD9 F03D          	movff	fsr2l,??_IRS_Low+5
  1959  000032  CFDA F03E          	movff	fsr2h,??_IRS_Low+6
  1960  000036                     
  1961                           ;pechera.c: 229: if(PIE1bits.CCP1IE && PIR1bits.CCP1IF)
  1962  000036  A49D               	btfss	157,2,c	;volatile
  1963  000038  EF20  F000         	goto	i1u84_21
  1964  00003C  EF22  F000         	goto	i1u84_20
  1965  000040                     i1u84_21:
  1966  000040  EF38  F000         	goto	i1l1842
  1967  000044                     i1u84_20:
  1968  000044  A49E               	btfss	158,2,c	;volatile
  1969  000046  EF27  F000         	goto	i1u85_21
  1970  00004A  EF29  F000         	goto	i1u85_20
  1971  00004E                     i1u85_21:
  1972  00004E  EF38  F000         	goto	i1l1842
  1973  000052                     i1u85_20:
  1974  000052                     
  1975                           ;pechera.c: 230: {;pechera.c: 231: TMR1L = 0;
  1976  000052  0E00               	movlw	0
  1977  000054  6ECE               	movwf	206,c	;volatile
  1978                           
  1979                           ;pechera.c: 232: TMR1H = 0;
  1980  000056  0E00               	movlw	0
  1981  000058  6ECF               	movwf	207,c	;volatile
  1982  00005A                     
  1983                           ;pechera.c: 234: receptores[0].capturado._8L = CCPR1L;
  1984  00005A  CFBE F060          	movff	4030,_receptores	;volatile
  1985  00005E                     
  1986                           ;pechera.c: 235: receptores[0].capturado._8H = CCPR1H;
  1987  00005E  CFBF F061          	movff	4031,_receptores+1	;volatile
  1988  000062                     
  1989                           ;pechera.c: 237: Capture(&receptores[0]);
  1990  000062  0E60               	movlw	low _receptores
  1991  000064  6E32               	movwf	Capture@reception^0,c
  1992  000066  0E00               	movlw	high _receptores
  1993  000068  6E33               	movwf	(Capture@reception+1)^0,c
  1994  00006A  EC02  F008         	call	_Capture	;wreg free
  1995  00006E                     
  1996                           ;pechera.c: 239: PIR1bits.CCP1IF = 0;
  1997  00006E  949E               	bcf	158,2,c	;volatile
  1998  000070                     i1l1842:
  1999                           
  2000                           ;pechera.c: 240: };pechera.c: 243: if(PIE2bits.CCP2IE && PIR2bits.CCP2IF)
  2001  000070  A0A0               	btfss	160,0,c	;volatile
  2002  000072  EF3D  F000         	goto	i1u86_21
  2003  000076  EF3F  F000         	goto	i1u86_20
  2004  00007A                     i1u86_21:
  2005  00007A  EF55  F000         	goto	i1l1856
  2006  00007E                     i1u86_20:
  2007  00007E  A0A1               	btfss	161,0,c	;volatile
  2008  000080  EF44  F000         	goto	i1u87_21
  2009  000084  EF46  F000         	goto	i1u87_20
  2010  000088                     i1u87_21:
  2011  000088  EF55  F000         	goto	i1l1856
  2012  00008C                     i1u87_20:
  2013  00008C                     
  2014                           ;pechera.c: 244: {;pechera.c: 245: TMR3L = 0;
  2015  00008C  0E00               	movlw	0
  2016  00008E  6EB2               	movwf	178,c	;volatile
  2017                           
  2018                           ;pechera.c: 246: TMR3H = 0;
  2019  000090  0E00               	movlw	0
  2020  000092  6EB3               	movwf	179,c	;volatile
  2021  000094                     
  2022                           ;pechera.c: 249: receptores[1].capturado._8L = CCPR3L;
  2023  000094  CF5E F077          	movff	3934,_receptores+23	;volatile
  2024  000098                     
  2025                           ;pechera.c: 250: receptores[1].capturado._8H = CCPR3H;
  2026  000098  CF5F F078          	movff	3935,_receptores+24	;volatile
  2027  00009C                     
  2028                           ;pechera.c: 252: Capture(&receptores[1]);
  2029  00009C  0E77               	movlw	low (_receptores+23)
  2030  00009E  6E32               	movwf	Capture@reception^0,c
  2031  0000A0  0E00               	movlw	high (_receptores+23)
  2032  0000A2  6E33               	movwf	(Capture@reception+1)^0,c
  2033  0000A4  EC02  F008         	call	_Capture	;wreg free
  2034  0000A8                     
  2035                           ;pechera.c: 254: PIR2bits.CCP2IF = 0;
  2036  0000A8  90A1               	bcf	161,0,c	;volatile
  2037  0000AA                     i1l1856:
  2038                           
  2039                           ;pechera.c: 255: };pechera.c: 258: if(PIE4bits.CCP3IE && PIR4bits.CCP3IF)
  2040  0000AA  A07A               	btfss	122,0,c	;volatile
  2041  0000AC  EF5A  F000         	goto	i1u88_21
  2042  0000B0  EF5C  F000         	goto	i1u88_20
  2043  0000B4                     i1u88_21:
  2044  0000B4  EF73  F000         	goto	i1l1870
  2045  0000B8                     i1u88_20:
  2046  0000B8  A07B               	btfss	123,0,c	;volatile
  2047  0000BA  EF61  F000         	goto	i1u89_21
  2048  0000BE  EF63  F000         	goto	i1u89_20
  2049  0000C2                     i1u89_21:
  2050  0000C2  EF73  F000         	goto	i1l1870
  2051  0000C6                     i1u89_20:
  2052  0000C6                     
  2053                           ;pechera.c: 259: {;pechera.c: 260: TMR5L = 0;
  2054  0000C6  0E00               	movlw	0
  2055  0000C8  010F               	movlb	15	; () banked
  2056  0000CA  6F4F               	movwf	79,b	;volatile
  2057                           
  2058                           ;pechera.c: 261: TMR5H = 0;
  2059  0000CC  0E00               	movlw	0
  2060  0000CE  6F50               	movwf	80,b	;volatile
  2061  0000D0                     
  2062                           ; BSR set to: 15
  2063                           ;pechera.c: 263: receptores[2].capturado._8L = CCPR5L;
  2064  0000D0  CF55 F08E          	movff	3925,_receptores+46	;volatile
  2065  0000D4                     
  2066                           ; BSR set to: 15
  2067                           ;pechera.c: 264: receptores[2].capturado._8H = CCPR5H;
  2068  0000D4  CF56 F08F          	movff	3926,_receptores+47	;volatile
  2069  0000D8                     
  2070                           ; BSR set to: 15
  2071                           ;pechera.c: 266: Capture(&receptores[2]);
  2072  0000D8  0E8E               	movlw	low (_receptores+46)
  2073  0000DA  6E32               	movwf	Capture@reception^0,c
  2074  0000DC  0E00               	movlw	high (_receptores+46)
  2075  0000DE  6E33               	movwf	(Capture@reception+1)^0,c
  2076  0000E0  EC02  F008         	call	_Capture	;wreg free
  2077  0000E4                     
  2078                           ;pechera.c: 268: PIR4bits.CCP3IF = 0;
  2079  0000E4  907B               	bcf	123,0,c	;volatile
  2080  0000E6                     i1l1870:
  2081                           
  2082                           ;pechera.c: 269: };pechera.c: 271: if(INTCONbits.T0IE && INTCONbits.T0IF)
  2083  0000E6  AAF2               	btfss	242,5,c	;volatile
  2084  0000E8  EF78  F000         	goto	i1u90_21
  2085  0000EC  EF7A  F000         	goto	i1u90_20
  2086  0000F0                     i1u90_21:
  2087  0000F0  EFD7  F000         	goto	i1l1908
  2088  0000F4                     i1u90_20:
  2089  0000F4  A4F2               	btfss	242,2,c	;volatile
  2090  0000F6  EF7F  F000         	goto	i1u91_21
  2091  0000FA  EF81  F000         	goto	i1u91_20
  2092  0000FE                     i1u91_21:
  2093  0000FE  EFD7  F000         	goto	i1l1908
  2094  000102                     i1u91_20:
  2095  000102                     
  2096                           ;pechera.c: 272: {;pechera.c: 273: TMR0H = 99;
  2097  000102  0E63               	movlw	99
  2098  000104  6ED7               	movwf	215,c	;volatile
  2099                           
  2100                           ;pechera.c: 274: TMR0L = 191;
  2101  000106  0EBF               	movlw	191
  2102  000108  6ED6               	movwf	214,c	;volatile
  2103  00010A                     
  2104                           ;pechera.c: 276: LA3 ^= 1;
  2105  00010A  7689               	btg	3977,3,c	;volatile
  2106                           
  2107                           ;pechera.c: 277: if(jugador.estado == Vivo)
  2108  00010C  500B               	movf	_jugador^0,w,c
  2109  00010E  A4D8               	btfss	status,2,c
  2110  000110  EF8C  F000         	goto	i1u92_21
  2111  000114  EF8E  F000         	goto	i1u92_20
  2112  000118                     i1u92_21:
  2113  000118  EFA4  F000         	goto	i1l1886
  2114  00011C                     i1u92_20:
  2115  00011C                     
  2116                           ;pechera.c: 278: {;pechera.c: 279: if(jugador.Arma.disparando)
  2117  00011C  5022               	movf	(_jugador+23)^0,w,c
  2118  00011E  B4D8               	btfsc	status,2,c
  2119  000120  EF94  F000         	goto	i1u93_21
  2120  000124  EF96  F000         	goto	i1u93_20
  2121  000128                     i1u93_21:
  2122  000128  EFA4  F000         	goto	i1l1886
  2123  00012C                     i1u93_20:
  2124  00012C                     
  2125                           ;pechera.c: 280: {;pechera.c: 281: jugador.Arma.contDisparo++;
  2126  00012C  2A21               	incf	(_jugador+22)^0,f,c
  2127  00012E                     
  2128                           ;pechera.c: 282: if(jugador.Arma.contDisparo == jugador.Arma.tDisparos)
  2129  00012E  5020               	movf	(_jugador+21)^0,w,c
  2130  000130  1821               	xorwf	(_jugador+22)^0,w,c
  2131  000132  A4D8               	btfss	status,2,c
  2132  000134  EF9E  F000         	goto	i1u94_21
  2133  000138  EFA0  F000         	goto	i1u94_20
  2134  00013C                     i1u94_21:
  2135  00013C  EFA4  F000         	goto	i1l1886
  2136  000140                     i1u94_20:
  2137  000140                     
  2138                           ;pechera.c: 283: {;pechera.c: 284: jugador.Arma.contDisparo = 0;
  2139  000140  0E00               	movlw	0
  2140  000142  6E21               	movwf	(_jugador+22)^0,c
  2141                           
  2142                           ;pechera.c: 285: jugador.Arma.habilDisparo = 1;
  2143  000144  0E01               	movlw	1
  2144  000146  6E23               	movwf	(_jugador+24)^0,c
  2145  000148                     i1l1886:
  2146                           
  2147                           ;pechera.c: 286: };pechera.c: 287: };pechera.c: 288: };pechera.c: 290: debugCont++;
  2148  000148  2A0A               	incf	_debugCont^0,f,c
  2149  00014A                     
  2150                           ;pechera.c: 291: if(debugCont == 200)
  2151  00014A  0EC8               	movlw	200
  2152  00014C  180A               	xorwf	_debugCont^0,w,c
  2153  00014E  A4D8               	btfss	status,2,c
  2154  000150  EFAC  F000         	goto	i1u95_21
  2155  000154  EFAE  F000         	goto	i1u95_20
  2156  000158                     i1u95_21:
  2157  000158  EFD6  F000         	goto	i1l1906
  2158  00015C                     i1u95_20:
  2159  00015C                     
  2160                           ;pechera.c: 292: {;pechera.c: 293: debugCont = 0;
  2161  00015C  0E00               	movlw	0
  2162  00015E  6E0A               	movwf	_debugCont^0,c
  2163                           
  2164                           ;pechera.c: 294: for(char i = 0; i < 20; i++)
  2165  000160  0E00               	movlw	0
  2166  000162  6E40               	movwf	IRS_Low@i^0,c
  2167  000164                     i1l1896:
  2168                           
  2169                           ;pechera.c: 295: {;pechera.c: 296: debug.Datos[i] = rfid.Datos[i];
  2170  000164  0E00               	movlw	low _rfid
  2171  000166  2440               	addwf	IRS_Low@i^0,w,c
  2172  000168  6ED9               	movwf	fsr2l,c
  2173  00016A  6ADA               	clrf	fsr2h,c
  2174  00016C  0E01               	movlw	high _rfid
  2175  00016E  22DA               	addwfc	fsr2h,f,c
  2176  000170  0EA5               	movlw	low _debug
  2177  000172  2440               	addwf	IRS_Low@i^0,w,c
  2178  000174  6EE1               	movwf	fsr1l,c
  2179  000176  6AE2               	clrf	fsr1h,c
  2180  000178  0E00               	movlw	high _debug
  2181  00017A  22E2               	addwfc	fsr1h,f,c
  2182  00017C  CFDF FFE7          	movff	indf2,indf1
  2183  000180  2A40               	incf	IRS_Low@i^0,f,c
  2184  000182  0E13               	movlw	19
  2185  000184  6440               	cpfsgt	IRS_Low@i^0,c
  2186  000186  EFC7  F000         	goto	i1u96_21
  2187  00018A  EFC9  F000         	goto	i1u96_20
  2188  00018E                     i1u96_21:
  2189  00018E  EFB2  F000         	goto	i1l1896
  2190  000192                     i1u96_20:
  2191  000192                     
  2192                           ;pechera.c: 297: };pechera.c: 298: debug.CantDatos = 20;
  2193  000192  0E14               	movlw	20
  2194  000194  0100               	movlb	0	; () banked
  2195  000196  6FD8               	movwf	(_debug+51)& (0+255),b
  2196  000198                     
  2197                           ; BSR set to: 0
  2198                           ;pechera.c: 299: EUSARTEnviar2(&TXREG2, &debug);
  2199  000198  0E73               	movlw	115
  2200  00019A  6E32               	movwf	i1EUSARTEnviar2@reg^0,c
  2201  00019C  0E0F               	movlw	15
  2202  00019E  6E33               	movwf	(i1EUSARTEnviar2@reg+1)^0,c
  2203  0001A0  0EA5               	movlw	low _debug
  2204  0001A2  6E34               	movwf	i1EUSARTEnviar2@e^0,c
  2205  0001A4  0E00               	movlw	high _debug
  2206  0001A6  6E35               	movwf	(i1EUSARTEnviar2@e+1)^0,c
  2207  0001A8  ECDD  F00D         	call	i1_EUSARTEnviar2	;wreg free
  2208  0001AC                     i1l1906:
  2209                           
  2210                           ;pechera.c: 300: };pechera.c: 302: INTCONbits.T0IF = 0;
  2211  0001AC  94F2               	bcf	242,2,c	;volatile
  2212  0001AE                     i1l1908:
  2213                           
  2214                           ;pechera.c: 303: };pechera.c: 305: if(PIE1bits.SSP1IE && PIR1bits.SSP1IF)
  2215  0001AE  A69D               	btfss	157,3,c	;volatile
  2216  0001B0  EFDC  F000         	goto	i1u97_21
  2217  0001B4  EFDE  F000         	goto	i1u97_20
  2218  0001B8                     i1u97_21:
  2219  0001B8  EFFF  F000         	goto	i1l1924
  2220  0001BC                     i1u97_20:
  2221  0001BC  A69E               	btfss	158,3,c	;volatile
  2222  0001BE  EFE3  F000         	goto	i1u98_21
  2223  0001C2  EFE5  F000         	goto	i1u98_20
  2224  0001C6                     i1u98_21:
  2225  0001C6  EFFF  F000         	goto	i1l1924
  2226  0001CA                     i1u98_20:
  2227  0001CA                     
  2228                           ;pechera.c: 306: {;pechera.c: 307: if(rfid.contDatos < rfid.cantDatos)
  2229  0001CA  0101               	movlb	1	; () banked
  2230  0001CC  5133               	movf	(_rfid+51)& (0+255),w,b
  2231  0001CE  5D32               	subwf	(_rfid+50)& (0+255),w,b
  2232  0001D0  B0D8               	btfsc	status,0,c
  2233  0001D2  EFED  F000         	goto	i1u99_21
  2234  0001D6  EFEF  F000         	goto	i1u99_20
  2235  0001DA                     i1u99_21:
  2236  0001DA  EFFC  F000         	goto	i1l1920
  2237  0001DE                     i1u99_20:
  2238  0001DE                     
  2239                           ; BSR set to: 1
  2240                           ;pechera.c: 308: {;pechera.c: 309: char aux = rfid.Datos[rfid.contDatos];
  2241  0001DE  0E00               	movlw	low _rfid
  2242  0001E0  2532               	addwf	(_rfid+50)& (0+255),w,b
  2243  0001E2  6ED9               	movwf	fsr2l,c
  2244  0001E4  6ADA               	clrf	fsr2h,c
  2245  0001E6  0E01               	movlw	high _rfid
  2246  0001E8  22DA               	addwfc	fsr2h,f,c
  2247  0001EA  50DF               	movf	indf2,w,c
  2248  0001EC  6E3F               	movwf	IRS_Low@aux^0,c
  2249  0001EE                     
  2250                           ; BSR set to: 1
  2251                           ;pechera.c: 310: SSP1BUF = aux;
  2252  0001EE  C03F  FFC9         	movff	IRS_Low@aux,4041	;volatile
  2253  0001F2                     
  2254                           ; BSR set to: 1
  2255                           ;pechera.c: 311: rfid.contDatos++;
  2256  0001F2  2B32               	incf	(_rfid+50)& (0+255),f,b
  2257                           
  2258                           ;pechera.c: 312: }
  2259  0001F4  EFFE  F000         	goto	i1l1922
  2260  0001F8                     i1l1920:
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;pechera.c: 313: else;pechera.c: 314: {;pechera.c: 315: rfid.contDatos = 0;
  2264  0001F8  0E00               	movlw	0
  2265  0001FA  6F32               	movwf	(_rfid+50)& (0+255),b
  2266  0001FC                     i1l1922:
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;pechera.c: 316: };pechera.c: 318: PIR1bits.SSP1IF = 0;
  2270  0001FC  969E               	bcf	158,3,c	;volatile
  2271  0001FE                     i1l1924:
  2272                           
  2273                           ;pechera.c: 319: };pechera.c: 321: if(PIE3bits.TX2IE && PIR3bits.TX2IF)
  2274  0001FE  A8A3               	btfss	163,4,c	;volatile
  2275  000200  EF04  F001         	goto	i1u100_21
  2276  000204  EF06  F001         	goto	i1u100_20
  2277  000208                     i1u100_21:
  2278  000208  EF27  F001         	goto	i1l252
  2279  00020C                     i1u100_20:
  2280  00020C  A8A4               	btfss	164,4,c	;volatile
  2281  00020E  EF0B  F001         	goto	i1u101_21
  2282  000212  EF0D  F001         	goto	i1u101_20
  2283  000216                     i1u101_21:
  2284  000216  EF27  F001         	goto	i1l252
  2285  00021A                     i1u101_20:
  2286  00021A                     
  2287                           ;pechera.c: 322: {;pechera.c: 323: if(debug.CantDatos > debug.cont)
  2288  00021A  0100               	movlb	0	; () banked
  2289  00021C  51D8               	movf	(_debug+51)& (0+255),w,b
  2290  00021E  5DD7               	subwf	(_debug+50)& (0+255),w,b
  2291  000220  B0D8               	btfsc	status,0,c
  2292  000222  EF15  F001         	goto	i1u102_21
  2293  000226  EF17  F001         	goto	i1u102_20
  2294  00022A                     i1u102_21:
  2295  00022A  EF22  F001         	goto	i1l1934
  2296  00022E                     i1u102_20:
  2297  00022E                     
  2298                           ; BSR set to: 0
  2299                           ;pechera.c: 324: {;pechera.c: 325: TXREG2 = debug.Datos[debug.cont];
  2300  00022E  0EA5               	movlw	low _debug
  2301  000230  25D7               	addwf	(_debug+50)& (0+255),w,b
  2302  000232  6ED9               	movwf	fsr2l,c
  2303  000234  6ADA               	clrf	fsr2h,c
  2304  000236  0E00               	movlw	high _debug
  2305  000238  22DA               	addwfc	fsr2h,f,c
  2306  00023A  50DF               	movf	indf2,w,c
  2307  00023C  6E73               	movwf	115,c	;volatile
  2308  00023E                     
  2309                           ; BSR set to: 0
  2310                           ;pechera.c: 326: debug.cont++;
  2311  00023E  2BD7               	incf	(_debug+50)& (0+255),f,b
  2312                           
  2313                           ;pechera.c: 327: }
  2314  000240  EF27  F001         	goto	i1l252
  2315  000244                     i1l1934:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;pechera.c: 328: else;pechera.c: 329: {;pechera.c: 330: debug.cont = 0;
  2319  000244  0E00               	movlw	0
  2320  000246  6FD7               	movwf	(_debug+50)& (0+255),b
  2321                           
  2322                           ;pechera.c: 331: debug.Transmitiendo = 0;
  2323  000248  0E00               	movlw	0
  2324  00024A  6FD9               	movwf	(_debug+52)& (0+255),b
  2325  00024C                     
  2326                           ; BSR set to: 0
  2327                           ;pechera.c: 332: PIE3bits.TX2IE = 0;
  2328  00024C  98A3               	bcf	163,4,c	;volatile
  2329  00024E                     i1l252:
  2330  00024E  C03E  FFDA         	movff	??_IRS_Low+6,fsr2h
  2331  000252  C03D  FFD9         	movff	??_IRS_Low+5,fsr2l
  2332  000256  C03C  FFE2         	movff	??_IRS_Low+4,fsr1h
  2333  00025A  C03B  FFE1         	movff	??_IRS_Low+3,fsr1l
  2334  00025E  C03A  FFE0         	movff	??_IRS_Low+2,bsr
  2335  000262  C039  FFE8         	movff	??_IRS_Low+1,wreg
  2336  000266  C038  FFD8         	movff	??_IRS_Low,status
  2337  00026A  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2338  00026C  0010               	retfie	
  2339  00026E                     __end_of_IRS_Low:
  2340                           	opt callstack 0
  2341                           
  2342 ;; *************** function i1_EUSARTEnviar2 *****************
  2343 ;; Defined at:
  2344 ;;		line 35 in file "EUSART.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  reg             2    2[COMRAM] PTR unsigned char 
  2347 ;;		 -> TXREG2(1), 
  2348 ;;  e               2    4[COMRAM] PTR struct eusart
  2349 ;;		 -> debug(53), 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2361 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;Total ram usage:        4 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_IRS_Low
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text8
  2376  001BBA                     __ptext8:
  2377                           	opt callstack 0
  2378  001BBA                     i1_EUSARTEnviar2:
  2379                           	opt callstack 27
  2380  001BBA                     
  2381                           ;EUSART.c: 37: e->Transmitiendo = 1;
  2382  001BBA  EE20 F034          	lfsr	2,52
  2383  001BBE  5034               	movf	i1EUSARTEnviar2@e^0,w,c
  2384  001BC0  26D9               	addwf	fsr2l,f,c
  2385  001BC2  5035               	movf	(i1EUSARTEnviar2@e+1)^0,w,c
  2386  001BC4  22DA               	addwfc	fsr2h,f,c
  2387  001BC6  0E01               	movlw	1
  2388  001BC8  6EDF               	movwf	indf2,c
  2389                           
  2390                           ;EUSART.c: 38: e->cont = 1;
  2391  001BCA  EE20 F032          	lfsr	2,50
  2392  001BCE  5034               	movf	i1EUSARTEnviar2@e^0,w,c
  2393  001BD0  26D9               	addwf	fsr2l,f,c
  2394  001BD2  5035               	movf	(i1EUSARTEnviar2@e+1)^0,w,c
  2395  001BD4  22DA               	addwfc	fsr2h,f,c
  2396  001BD6  0E01               	movlw	1
  2397  001BD8  6EDF               	movwf	indf2,c
  2398  001BDA                     
  2399                           ;EUSART.c: 39: *reg = e->Datos[0];
  2400  001BDA  C034  FFD9         	movff	i1EUSARTEnviar2@e,fsr2l
  2401  001BDE  C035  FFDA         	movff	i1EUSARTEnviar2@e+1,fsr2h
  2402  001BE2  C032  FFE1         	movff	i1EUSARTEnviar2@reg,fsr1l
  2403  001BE6  C033  FFE2         	movff	i1EUSARTEnviar2@reg+1,fsr1h
  2404  001BEA  CFDF FFE7          	movff	indf2,indf1
  2405  001BEE                     
  2406                           ;EUSART.c: 40: PIE3bits.TX2IE = 1;
  2407  001BEE  88A3               	bsf	163,4,c	;volatile
  2408  001BF0  0012               	return		;funcret
  2409  001BF2                     __end_ofi1_EUSARTEnviar2:
  2410                           	opt callstack 0
  2411                           
  2412 ;; *************** function _Capture *****************
  2413 ;; Defined at:
  2414 ;;		line 9 in file "LReception.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  reception       2    2[COMRAM] PTR struct reception
  2417 ;;		 -> receptores(69), 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        6 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_IRS_Low
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text9
  2444  001004                     __ptext9:
  2445                           	opt callstack 0
  2446  001004                     _Capture:
  2447                           	opt callstack 27
  2448  001004                     
  2449                           ;LReception.c: 11: if(reception->esperandoInicioRL)
  2450  001004  EE20 F002          	lfsr	2,2
  2451  001008  5032               	movf	Capture@reception^0,w,c
  2452  00100A  26D9               	addwf	fsr2l,f,c
  2453  00100C  5033               	movf	(Capture@reception+1)^0,w,c
  2454  00100E  22DA               	addwfc	fsr2h,f,c
  2455  001010  50DF               	movf	indf2,w,c
  2456  001012  B4D8               	btfsc	status,2,c
  2457  001014  EF0E  F008         	goto	i1u66_21
  2458  001018  EF10  F008         	goto	i1u66_20
  2459  00101C                     i1u66_21:
  2460  00101C  EF38  F008         	goto	i1l1706
  2461  001020                     i1u66_20:
  2462  001020                     
  2463                           ;LReception.c: 12: {;LReception.c: 13: if((reception->capturado._16 >= 2650) && (recepti
      +                          on->capturado._16 <= 2750))
  2464  001020  C032  FFD9         	movff	Capture@reception,fsr2l
  2465  001024  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2466  001028  0E5A               	movlw	90
  2467  00102A  5CDE               	subwf	postinc2,w,c
  2468  00102C  0E0A               	movlw	10
  2469  00102E  58DE               	subwfb	postinc2,w,c
  2470  001030  A0D8               	btfss	status,0,c
  2471  001032  EF1D  F008         	goto	i1u67_21
  2472  001036  EF1F  F008         	goto	i1u67_20
  2473  00103A                     i1u67_21:
  2474  00103A  EF64  F009         	goto	i1l291
  2475  00103E                     i1u67_20:
  2476  00103E  C032  FFD9         	movff	Capture@reception,fsr2l
  2477  001042  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2478  001046  0EBF               	movlw	191
  2479  001048  5CDE               	subwf	postinc2,w,c
  2480  00104A  0E0A               	movlw	10
  2481  00104C  58DE               	subwfb	postinc2,w,c
  2482  00104E  B0D8               	btfsc	status,0,c
  2483  001050  EF2C  F008         	goto	i1u68_21
  2484  001054  EF2E  F008         	goto	i1u68_20
  2485  001058                     i1u68_21:
  2486  001058  EF64  F009         	goto	i1l291
  2487  00105C                     i1u68_20:
  2488  00105C                     
  2489                           ;LReception.c: 14: {;LReception.c: 15: reception->esperandoInicioRL = 0;
  2490  00105C  EE20 F002          	lfsr	2,2
  2491  001060  5032               	movf	Capture@reception^0,w,c
  2492  001062  26D9               	addwf	fsr2l,f,c
  2493  001064  5033               	movf	(Capture@reception+1)^0,w,c
  2494  001066  22DA               	addwfc	fsr2h,f,c
  2495  001068  0E00               	movlw	0
  2496  00106A  6EDF               	movwf	indf2,c
  2497  00106C  EF64  F009         	goto	i1l291
  2498  001070                     i1l1706:
  2499                           
  2500                           ;LReception.c: 18: else;LReception.c: 19: {;LReception.c: 20: if((reception->capturado._
      +                          16 >= 2650) && (reception->capturado._16 <= 2750))
  2501  001070  C032  FFD9         	movff	Capture@reception,fsr2l
  2502  001074  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2503  001078  0E5A               	movlw	90
  2504  00107A  5CDE               	subwf	postinc2,w,c
  2505  00107C  0E0A               	movlw	10
  2506  00107E  58DE               	subwfb	postinc2,w,c
  2507  001080  A0D8               	btfss	status,0,c
  2508  001082  EF45  F008         	goto	i1u69_21
  2509  001086  EF47  F008         	goto	i1u69_20
  2510  00108A                     i1u69_21:
  2511  00108A  EF7F  F008         	goto	i1l1716
  2512  00108E                     i1u69_20:
  2513  00108E  C032  FFD9         	movff	Capture@reception,fsr2l
  2514  001092  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2515  001096  0EBF               	movlw	191
  2516  001098  5CDE               	subwf	postinc2,w,c
  2517  00109A  0E0A               	movlw	10
  2518  00109C  58DE               	subwfb	postinc2,w,c
  2519  00109E  B0D8               	btfsc	status,0,c
  2520  0010A0  EF54  F008         	goto	i1u70_21
  2521  0010A4  EF56  F008         	goto	i1u70_20
  2522  0010A8                     i1u70_21:
  2523  0010A8  EF7F  F008         	goto	i1l1716
  2524  0010AC                     i1u70_20:
  2525  0010AC                     
  2526                           ;LReception.c: 21: {;LReception.c: 22: reception->DatoLaser = reception->DatoLaser >> 1;
  2527  0010AC  EE20 F003          	lfsr	2,3
  2528  0010B0  5032               	movf	Capture@reception^0,w,c
  2529  0010B2  26D9               	addwf	fsr2l,f,c
  2530  0010B4  5033               	movf	(Capture@reception+1)^0,w,c
  2531  0010B6  22DA               	addwfc	fsr2h,f,c
  2532  0010B8  EE10 F003          	lfsr	1,3
  2533  0010BC  5032               	movf	Capture@reception^0,w,c
  2534  0010BE  26E1               	addwf	fsr1l,f,c
  2535  0010C0  5033               	movf	(Capture@reception+1)^0,w,c
  2536  0010C2  22E2               	addwfc	fsr1h,f,c
  2537  0010C4  50E7               	movf	indf1,w,c
  2538  0010C6  6E34               	movwf	??_Capture^0,c
  2539  0010C8  90D8               	bcf	status,0,c
  2540  0010CA  3034               	rrcf	??_Capture^0,w,c
  2541  0010CC  6EDF               	movwf	indf2,c
  2542  0010CE                     
  2543                           ;LReception.c: 23: reception->nBitR++;
  2544  0010CE  EE20 F015          	lfsr	2,21
  2545  0010D2  5032               	movf	Capture@reception^0,w,c
  2546  0010D4  26D9               	addwf	fsr2l,f,c
  2547  0010D6  5033               	movf	(Capture@reception+1)^0,w,c
  2548  0010D8  22DA               	addwfc	fsr2h,f,c
  2549  0010DA  2ADF               	incf	indf2,f,c
  2550  0010DC                     
  2551                           ;LReception.c: 24: reception->DatoLaser = reception->DatoLaser | 128;
  2552  0010DC  EE20 F003          	lfsr	2,3
  2553  0010E0  5032               	movf	Capture@reception^0,w,c
  2554  0010E2  26D9               	addwf	fsr2l,f,c
  2555  0010E4  5033               	movf	(Capture@reception+1)^0,w,c
  2556  0010E6  22DA               	addwfc	fsr2h,f,c
  2557  0010E8  EE10 F003          	lfsr	1,3
  2558  0010EC  5032               	movf	Capture@reception^0,w,c
  2559  0010EE  26E1               	addwf	fsr1l,f,c
  2560  0010F0  5033               	movf	(Capture@reception+1)^0,w,c
  2561  0010F2  22E2               	addwfc	fsr1h,f,c
  2562  0010F4  50E7               	movf	indf1,w,c
  2563  0010F6  0980               	iorlw	128
  2564  0010F8  6EDF               	movwf	indf2,c
  2565                           
  2566                           ;LReception.c: 25: }
  2567  0010FA  EFC7  F008         	goto	i1l284
  2568  0010FE                     i1l1716:
  2569                           
  2570                           ;LReception.c: 26: else if((reception->capturado._16 >= 2220) && (reception->capturado._
      +                          16 <= 2320))
  2571  0010FE  C032  FFD9         	movff	Capture@reception,fsr2l
  2572  001102  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2573  001106  0EAC               	movlw	172
  2574  001108  5CDE               	subwf	postinc2,w,c
  2575  00110A  0E08               	movlw	8
  2576  00110C  58DE               	subwfb	postinc2,w,c
  2577  00110E  A0D8               	btfss	status,0,c
  2578  001110  EF8C  F008         	goto	i1u71_21
  2579  001114  EF8E  F008         	goto	i1u71_20
  2580  001118                     i1u71_21:
  2581  001118  EFB7  F008         	goto	i1l1724
  2582  00111C                     i1u71_20:
  2583  00111C  C032  FFD9         	movff	Capture@reception,fsr2l
  2584  001120  C033  FFDA         	movff	Capture@reception+1,fsr2h
  2585  001124  0E11               	movlw	17
  2586  001126  5CDE               	subwf	postinc2,w,c
  2587  001128  0E09               	movlw	9
  2588  00112A  58DE               	subwfb	postinc2,w,c
  2589  00112C  B0D8               	btfsc	status,0,c
  2590  00112E  EF9B  F008         	goto	i1u72_21
  2591  001132  EF9D  F008         	goto	i1u72_20
  2592  001136                     i1u72_21:
  2593  001136  EFB7  F008         	goto	i1l1724
  2594  00113A                     i1u72_20:
  2595  00113A                     
  2596                           ;LReception.c: 27: {;LReception.c: 28: reception->DatoLaser = reception->DatoLaser >> 1;
  2597  00113A  EE20 F003          	lfsr	2,3
  2598  00113E  5032               	movf	Capture@reception^0,w,c
  2599  001140  26D9               	addwf	fsr2l,f,c
  2600  001142  5033               	movf	(Capture@reception+1)^0,w,c
  2601  001144  22DA               	addwfc	fsr2h,f,c
  2602  001146  EE10 F003          	lfsr	1,3
  2603  00114A  5032               	movf	Capture@reception^0,w,c
  2604  00114C  26E1               	addwf	fsr1l,f,c
  2605  00114E  5033               	movf	(Capture@reception+1)^0,w,c
  2606  001150  22E2               	addwfc	fsr1h,f,c
  2607  001152  50E7               	movf	indf1,w,c
  2608  001154  6E34               	movwf	??_Capture^0,c
  2609  001156  90D8               	bcf	status,0,c
  2610  001158  3034               	rrcf	??_Capture^0,w,c
  2611  00115A  6EDF               	movwf	indf2,c
  2612  00115C                     
  2613                           ;LReception.c: 29: reception->nBitR++;
  2614  00115C  EE20 F015          	lfsr	2,21
  2615  001160  5032               	movf	Capture@reception^0,w,c
  2616  001162  26D9               	addwf	fsr2l,f,c
  2617  001164  5033               	movf	(Capture@reception+1)^0,w,c
  2618  001166  22DA               	addwfc	fsr2h,f,c
  2619  001168  2ADF               	incf	indf2,f,c
  2620                           
  2621                           ;LReception.c: 30: }
  2622  00116A  EFC7  F008         	goto	i1l284
  2623  00116E                     i1l1724:
  2624                           
  2625                           ;LReception.c: 31: else;LReception.c: 32: {;LReception.c: 33: reception->esperandoInicio
      +                          RL = 1;
  2626  00116E  EE20 F002          	lfsr	2,2
  2627  001172  5032               	movf	Capture@reception^0,w,c
  2628  001174  26D9               	addwf	fsr2l,f,c
  2629  001176  5033               	movf	(Capture@reception+1)^0,w,c
  2630  001178  22DA               	addwfc	fsr2h,f,c
  2631  00117A  0E01               	movlw	1
  2632  00117C  6EDF               	movwf	indf2,c
  2633                           
  2634                           ;LReception.c: 34: reception->nBitR = 0;
  2635  00117E  EE20 F015          	lfsr	2,21
  2636  001182  5032               	movf	Capture@reception^0,w,c
  2637  001184  26D9               	addwf	fsr2l,f,c
  2638  001186  5033               	movf	(Capture@reception+1)^0,w,c
  2639  001188  22DA               	addwfc	fsr2h,f,c
  2640  00118A  0E00               	movlw	0
  2641  00118C  6EDF               	movwf	indf2,c
  2642  00118E                     i1l284:
  2643                           
  2644                           ;LReception.c: 35: };LReception.c: 37: if(reception->nBitR == 8)
  2645  00118E  EE20 F015          	lfsr	2,21
  2646  001192  5032               	movf	Capture@reception^0,w,c
  2647  001194  26D9               	addwf	fsr2l,f,c
  2648  001196  5033               	movf	(Capture@reception+1)^0,w,c
  2649  001198  22DA               	addwfc	fsr2h,f,c
  2650  00119A  0E08               	movlw	8
  2651  00119C  18DE               	xorwf	postinc2,w,c
  2652  00119E  A4D8               	btfss	status,2,c
  2653  0011A0  EFD4  F008         	goto	i1u73_21
  2654  0011A4  EFD6  F008         	goto	i1u73_20
  2655  0011A8                     i1u73_21:
  2656  0011A8  EF64  F009         	goto	i1l291
  2657  0011AC                     i1u73_20:
  2658  0011AC                     
  2659                           ;LReception.c: 38: {;LReception.c: 39: reception->nBitR = 0;
  2660  0011AC  EE20 F015          	lfsr	2,21
  2661  0011B0  5032               	movf	Capture@reception^0,w,c
  2662  0011B2  26D9               	addwf	fsr2l,f,c
  2663  0011B4  5033               	movf	(Capture@reception+1)^0,w,c
  2664  0011B6  22DA               	addwfc	fsr2h,f,c
  2665  0011B8  0E00               	movlw	0
  2666  0011BA  6EDF               	movwf	indf2,c
  2667                           
  2668                           ;LReception.c: 40: if(reception->contDatosRecL == 0)
  2669  0011BC  EE20 F013          	lfsr	2,19
  2670  0011C0  5032               	movf	Capture@reception^0,w,c
  2671  0011C2  26D9               	addwf	fsr2l,f,c
  2672  0011C4  5033               	movf	(Capture@reception+1)^0,w,c
  2673  0011C6  22DA               	addwfc	fsr2h,f,c
  2674  0011C8  50DF               	movf	indf2,w,c
  2675  0011CA  A4D8               	btfss	status,2,c
  2676  0011CC  EFEA  F008         	goto	i1u74_21
  2677  0011D0  EFEC  F008         	goto	i1u74_20
  2678  0011D4                     i1u74_21:
  2679  0011D4  EFFC  F008         	goto	i1l1730
  2680  0011D8                     i1u74_20:
  2681  0011D8                     
  2682                           ;LReception.c: 41: {;LReception.c: 42: reception->cantDatosRecL = reception->DatoLaser;
  2683  0011D8  EE20 F003          	lfsr	2,3
  2684  0011DC  5032               	movf	Capture@reception^0,w,c
  2685  0011DE  26D9               	addwf	fsr2l,f,c
  2686  0011E0  5033               	movf	(Capture@reception+1)^0,w,c
  2687  0011E2  22DA               	addwfc	fsr2h,f,c
  2688  0011E4  EE10 F014          	lfsr	1,20
  2689  0011E8  5032               	movf	Capture@reception^0,w,c
  2690  0011EA  26E1               	addwf	fsr1l,f,c
  2691  0011EC  5033               	movf	(Capture@reception+1)^0,w,c
  2692  0011EE  22E2               	addwfc	fsr1h,f,c
  2693  0011F0  CFDF FFE7          	movff	indf2,indf1
  2694                           
  2695                           ;LReception.c: 43: }
  2696  0011F4  EF5D  F009         	goto	i1l289
  2697  0011F8                     i1l1730:
  2698                           
  2699                           ;LReception.c: 44: else;LReception.c: 45: {;LReception.c: 46: reception->DatosRecibidosL
      +                          [reception->contDatosRecL - 1] = reception->DatoLaser;
  2700  0011F8  EE20 F003          	lfsr	2,3
  2701  0011FC  5032               	movf	Capture@reception^0,w,c
  2702  0011FE  26D9               	addwf	fsr2l,f,c
  2703  001200  5033               	movf	(Capture@reception+1)^0,w,c
  2704  001202  22DA               	addwfc	fsr2h,f,c
  2705  001204  EE10 F013          	lfsr	1,19
  2706  001208  5032               	movf	Capture@reception^0,w,c
  2707  00120A  26E1               	addwf	fsr1l,f,c
  2708  00120C  5033               	movf	(Capture@reception+1)^0,w,c
  2709  00120E  22E2               	addwfc	fsr1h,f,c
  2710  001210  50E7               	movf	indf1,w,c
  2711  001212  6E34               	movwf	??_Capture^0,c
  2712  001214  6A35               	clrf	(??_Capture+1)^0,c
  2713  001216  BE34               	btfsc	??_Capture^0,7,c
  2714  001218  0635               	decf	(??_Capture+1)^0,f,c
  2715  00121A  C032  F036         	movff	Capture@reception,??_Capture+2
  2716  00121E  C033  F037         	movff	Capture@reception+1,??_Capture+3
  2717  001222  5034               	movf	??_Capture^0,w,c
  2718  001224  2636               	addwf	(??_Capture+2)^0,f,c
  2719  001226  5035               	movf	(??_Capture+1)^0,w,c
  2720  001228  2237               	addwfc	(??_Capture+3)^0,f,c
  2721  00122A  0E03               	movlw	3
  2722  00122C  2436               	addwf	(??_Capture+2)^0,w,c
  2723  00122E  6EE1               	movwf	fsr1l,c
  2724  001230  0E00               	movlw	0
  2725  001232  2037               	addwfc	(??_Capture+3)^0,w,c
  2726  001234  6EE2               	movwf	fsr1h,c
  2727  001236  CFDF FFE7          	movff	indf2,indf1
  2728  00123A                     
  2729                           ;LReception.c: 48: if(reception->cantDatosRecL == reception->contDatosRecL)
  2730  00123A  EE20 F013          	lfsr	2,19
  2731  00123E  5032               	movf	Capture@reception^0,w,c
  2732  001240  26D9               	addwf	fsr2l,f,c
  2733  001242  5033               	movf	(Capture@reception+1)^0,w,c
  2734  001244  22DA               	addwfc	fsr2h,f,c
  2735  001246  50DF               	movf	indf2,w,c
  2736  001248  6E34               	movwf	??_Capture^0,c
  2737  00124A  6A35               	clrf	(??_Capture+1)^0,c
  2738  00124C  BE34               	btfsc	??_Capture^0,7,c
  2739  00124E  0635               	decf	(??_Capture+1)^0,f,c
  2740  001250  EE20 F014          	lfsr	2,20
  2741  001254  5032               	movf	Capture@reception^0,w,c
  2742  001256  26D9               	addwf	fsr2l,f,c
  2743  001258  5033               	movf	(Capture@reception+1)^0,w,c
  2744  00125A  22DA               	addwfc	fsr2h,f,c
  2745  00125C  50DF               	movf	indf2,w,c
  2746  00125E  6E36               	movwf	(??_Capture+2)^0,c
  2747  001260  6A37               	clrf	(??_Capture+3)^0,c
  2748  001262  5034               	movf	??_Capture^0,w,c
  2749  001264  1836               	xorwf	(??_Capture+2)^0,w,c
  2750  001266  E107               	bnz	i1u75_21
  2751  001268  5035               	movf	(??_Capture+1)^0,w,c
  2752  00126A  1837               	xorwf	(??_Capture+3)^0,w,c
  2753  00126C  A4D8               	btfss	status,2,c
  2754  00126E  EF3B  F009         	goto	i1u75_21
  2755  001272  EF3D  F009         	goto	i1u75_20
  2756  001276                     i1u75_21:
  2757  001276  EF5D  F009         	goto	i1l289
  2758  00127A                     i1u75_20:
  2759  00127A                     
  2760                           ;LReception.c: 49: {;LReception.c: 50: reception->esperandoInicioRL = 1;
  2761  00127A  EE20 F002          	lfsr	2,2
  2762  00127E  5032               	movf	Capture@reception^0,w,c
  2763  001280  26D9               	addwf	fsr2l,f,c
  2764  001282  5033               	movf	(Capture@reception+1)^0,w,c
  2765  001284  22DA               	addwfc	fsr2h,f,c
  2766  001286  0E01               	movlw	1
  2767  001288  6EDF               	movwf	indf2,c
  2768                           
  2769                           ;LReception.c: 51: reception->contDatosRecL = -1;
  2770  00128A  EE20 F013          	lfsr	2,19
  2771  00128E  5032               	movf	Capture@reception^0,w,c
  2772  001290  26D9               	addwf	fsr2l,f,c
  2773  001292  5033               	movf	(Capture@reception+1)^0,w,c
  2774  001294  22DA               	addwfc	fsr2h,f,c
  2775  001296  0EFF               	movlw	255
  2776  001298  6EDF               	movwf	indf2,c
  2777                           
  2778                           ;LReception.c: 52: reception->DatoLaser = 0;
  2779  00129A  EE20 F003          	lfsr	2,3
  2780  00129E  5032               	movf	Capture@reception^0,w,c
  2781  0012A0  26D9               	addwf	fsr2l,f,c
  2782  0012A2  5033               	movf	(Capture@reception+1)^0,w,c
  2783  0012A4  22DA               	addwfc	fsr2h,f,c
  2784  0012A6  0E00               	movlw	0
  2785  0012A8  6EDF               	movwf	indf2,c
  2786                           
  2787                           ;LReception.c: 53: reception->DatosLRecibidoFlag = 1;
  2788  0012AA  EE20 F016          	lfsr	2,22
  2789  0012AE  5032               	movf	Capture@reception^0,w,c
  2790  0012B0  26D9               	addwf	fsr2l,f,c
  2791  0012B2  5033               	movf	(Capture@reception+1)^0,w,c
  2792  0012B4  22DA               	addwfc	fsr2h,f,c
  2793  0012B6  0E01               	movlw	1
  2794  0012B8  6EDF               	movwf	indf2,c
  2795  0012BA                     i1l289:
  2796                           
  2797                           ;LReception.c: 54: };LReception.c: 55: };LReception.c: 57: reception->contDatosRecL++;
  2798  0012BA  EE20 F013          	lfsr	2,19
  2799  0012BE  5032               	movf	Capture@reception^0,w,c
  2800  0012C0  26D9               	addwf	fsr2l,f,c
  2801  0012C2  5033               	movf	(Capture@reception+1)^0,w,c
  2802  0012C4  22DA               	addwfc	fsr2h,f,c
  2803  0012C6  2ADF               	incf	indf2,f,c
  2804  0012C8                     i1l291:
  2805  0012C8  0012               	return		;funcret
  2806  0012CA                     __end_of_Capture:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _IRS_High *****************
  2810 ;; Defined at:
  2811 ;;		line 112 in file "pechera.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        2 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		Interrupt level 2
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	intcode
  2839  000008                     __pintcode:
  2840                           	opt callstack 0
  2841  000008                     _IRS_High:
  2842                           	opt callstack 27
  2843                           
  2844                           ;incstack = 0
  2845  000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2846  00000A  EF77  F00A         	goto	int_func
  2847                           
  2848                           	psect	intcode_body
  2849  0014EE                     __pintcode_body:
  2850                           	opt callstack 27
  2851  0014EE                     int_func:
  2852                           	opt callstack 27
  2853  0014EE  CFD9 F030          	movff	fsr2l,??_IRS_High
  2854  0014F2  CFDA F031          	movff	fsr2h,??_IRS_High+1
  2855  0014F6                     
  2856                           ;pechera.c: 115: if(INTCONbits.INT0IE && INTCONbits.INT0IF)
  2857  0014F6  A8F2               	btfss	242,4,c	;volatile
  2858  0014F8  EF80  F00A         	goto	i2u19_41
  2859  0014FC  EF82  F00A         	goto	i2u19_40
  2860  001500                     i2u19_41:
  2861  001500  EF8A  F00A         	goto	i2l210
  2862  001504                     i2u19_40:
  2863  001504  A2F2               	btfss	242,1,c	;volatile
  2864  001506  EF87  F00A         	goto	i2u20_41
  2865  00150A  EF89  F00A         	goto	i2u20_40
  2866  00150E                     i2u20_41:
  2867  00150E  EF8A  F00A         	goto	i2l210
  2868  001512                     i2u20_40:
  2869  001512                     
  2870                           ;pechera.c: 116: {;pechera.c: 119: INTCONbits.INT0IF = 0;
  2871  001512  92F2               	bcf	242,1,c	;volatile
  2872  001514                     i2l210:
  2873                           
  2874                           ;pechera.c: 120: };pechera.c: 123: if(INTCON3bits.INT2IE && INTCON3bits.INT2IF)
  2875  001514  A8F0               	btfss	240,4,c	;volatile
  2876  001516  EF8F  F00A         	goto	i2u21_41
  2877  00151A  EF91  F00A         	goto	i2u21_40
  2878  00151E                     i2u21_41:
  2879  00151E  EF9A  F00A         	goto	i2l211
  2880  001522                     i2u21_40:
  2881  001522  A2F0               	btfss	240,1,c	;volatile
  2882  001524  EF96  F00A         	goto	i2u22_41
  2883  001528  EF98  F00A         	goto	i2u22_40
  2884  00152C                     i2u22_41:
  2885  00152C  EF9A  F00A         	goto	i2l211
  2886  001530                     i2u22_40:
  2887  001530                     
  2888                           ;pechera.c: 124: {;pechera.c: 126: LE2^=1;
  2889  001530  748D               	btg	3981,2,c	;volatile
  2890                           
  2891                           ;pechera.c: 128: INTCON3bits.INT2IF = 0;
  2892  001532  92F0               	bcf	240,1,c	;volatile
  2893  001534                     i2l211:
  2894                           
  2895                           ;pechera.c: 129: };pechera.c: 131: if(PIE5bits.TMR4IE && PIR5bits.TMR4IF)
  2896  001534  A07D               	btfss	125,0,c	;volatile
  2897  001536  EF9F  F00A         	goto	i2u23_41
  2898  00153A  EFA1  F00A         	goto	i2u23_40
  2899  00153E                     i2u23_41:
  2900  00153E  EF4E  F00B         	goto	i2l231
  2901  001542                     i2u23_40:
  2902  001542  A07E               	btfss	126,0,c	;volatile
  2903  001544  EFA6  F00A         	goto	i2u24_41
  2904  001548  EFA8  F00A         	goto	i2u24_40
  2905  00154C                     i2u24_41:
  2906  00154C  EF4E  F00B         	goto	i2l231
  2907  001550                     i2u24_40:
  2908  001550                     
  2909                           ;pechera.c: 132: {;pechera.c: 133: if(primerosBitsEL < 15)
  2910  001550  0E0F               	movlw	15
  2911  001552  6009               	cpfslt	_primerosBitsEL^0,c
  2912  001554  EFAE  F00A         	goto	i2u25_41
  2913  001558  EFB0  F00A         	goto	i2u25_40
  2914  00155C                     i2u25_41:
  2915  00155C  EFC9  F00A         	goto	i2l1340
  2916  001560                     i2u25_40:
  2917  001560                     
  2918                           ;pechera.c: 134: {;pechera.c: 135: if(flancoEL)
  2919  001560  504D               	movf	_flancoEL^0,w,c
  2920  001562  B4D8               	btfsc	status,2,c
  2921  001564  EFB6  F00A         	goto	i2u26_41
  2922  001568  EFB8  F00A         	goto	i2u26_40
  2923  00156C                     i2u26_41:
  2924  00156C  EFC0  F00A         	goto	i2l214
  2925  001570                     i2u26_40:
  2926  001570                     
  2927                           ;pechera.c: 136: {;pechera.c: 137: LA2 = 1;
  2928  001570  8489               	bsf	3977,2,c	;volatile
  2929  001572                     
  2930                           ;pechera.c: 139: PR4 = 137;
  2931  001572  0E89               	movlw	137
  2932  001574  010F               	movlb	15	; () banked
  2933  001576  6F52               	movwf	82,b	;volatile
  2934                           
  2935                           ;pechera.c: 141: flancoEL = 0;
  2936  001578  0E00               	movlw	0
  2937  00157A  6E4D               	movwf	_flancoEL^0,c
  2938                           
  2939                           ;pechera.c: 142: }
  2940  00157C  EF4D  F00B         	goto	i2l1392
  2941  001580                     i2l214:
  2942                           
  2943                           ;pechera.c: 143: else;pechera.c: 144: {;pechera.c: 145: LA2 = 0;
  2944  001580  9489               	bcf	3977,2,c	;volatile
  2945  001582                     
  2946                           ;pechera.c: 146: PR4 = 70;
  2947  001582  0E46               	movlw	70
  2948  001584  010F               	movlb	15	; () banked
  2949  001586  6F52               	movwf	82,b	;volatile
  2950                           
  2951                           ;pechera.c: 147: flancoEL = 1;
  2952  001588  0E01               	movlw	1
  2953  00158A  6E4D               	movwf	_flancoEL^0,c
  2954  00158C                     i2l1338:
  2955                           
  2956                           ; BSR set to: 15
  2957                           ;pechera.c: 148: primerosBitsEL++;
  2958  00158C  2A09               	incf	_primerosBitsEL^0,f,c
  2959  00158E  EF4D  F00B         	goto	i2l1392
  2960  001592                     i2l1340:
  2961                           
  2962                           ;pechera.c: 152: else if(primerosBitsEL == 15)
  2963  001592  0E0F               	movlw	15
  2964  001594  1809               	xorwf	_primerosBitsEL^0,w,c
  2965  001596  A4D8               	btfss	status,2,c
  2966  001598  EFD0  F00A         	goto	i2u27_41
  2967  00159C  EFD2  F00A         	goto	i2u27_40
  2968  0015A0                     i2u27_41:
  2969  0015A0  EFE4  F00A         	goto	i2l1352
  2970  0015A4                     i2u27_40:
  2971  0015A4                     
  2972                           ;pechera.c: 153: {;pechera.c: 154: if(flancoEL)
  2973  0015A4  504D               	movf	_flancoEL^0,w,c
  2974  0015A6  B4D8               	btfsc	status,2,c
  2975  0015A8  EFD8  F00A         	goto	i2u28_41
  2976  0015AC  EFDA  F00A         	goto	i2u28_40
  2977  0015B0                     i2u28_41:
  2978  0015B0  EFC0  F00A         	goto	i2l214
  2979  0015B4                     i2u28_40:
  2980  0015B4                     
  2981                           ;pechera.c: 155: {;pechera.c: 156: LA2 = 1;
  2982  0015B4  8489               	bsf	3977,2,c	;volatile
  2983  0015B6                     
  2984                           ;pechera.c: 158: PR4 = 177;
  2985  0015B6  0EB1               	movlw	177
  2986  0015B8  010F               	movlb	15	; () banked
  2987  0015BA  6F52               	movwf	82,b	;volatile
  2988                           
  2989                           ;pechera.c: 160: flancoEL = 0;
  2990  0015BC  0E00               	movlw	0
  2991  0015BE  6E4D               	movwf	_flancoEL^0,c
  2992                           
  2993                           ;pechera.c: 161: }
  2994  0015C0  EF4D  F00B         	goto	i2l1392
  2995  0015C4                     i2l219:
  2996                           
  2997                           ; BSR set to: 15
  2998                           ;pechera.c: 168: };pechera.c: 169: }
  2999  0015C4  EF4D  F00B         	goto	i2l1392
  3000  0015C8                     i2l1352:
  3001                           
  3002                           ;pechera.c: 170: else if(primerosBitsEL == 16)
  3003  0015C8  0E10               	movlw	16
  3004  0015CA  1809               	xorwf	_primerosBitsEL^0,w,c
  3005  0015CC  A4D8               	btfss	status,2,c
  3006  0015CE  EFEB  F00A         	goto	i2u29_41
  3007  0015D2  EFED  F00A         	goto	i2u29_40
  3008  0015D6                     i2u29_41:
  3009  0015D6  EF31  F00B         	goto	i2l1378
  3010  0015DA                     i2u29_40:
  3011  0015DA                     
  3012                           ;pechera.c: 171: {;pechera.c: 172: if(flancoEL)
  3013  0015DA  504D               	movf	_flancoEL^0,w,c
  3014  0015DC  B4D8               	btfsc	status,2,c
  3015  0015DE  EFF3  F00A         	goto	i2u30_41
  3016  0015E2  EFF5  F00A         	goto	i2u30_40
  3017  0015E6                     i2u30_41:
  3018  0015E6  EF12  F00B         	goto	i2l222
  3019  0015EA                     i2u30_40:
  3020  0015EA                     
  3021                           ;pechera.c: 173: {;pechera.c: 174: LA2 = 1;
  3022  0015EA  8489               	bsf	3977,2,c	;volatile
  3023  0015EC                     
  3024                           ;pechera.c: 176: if(DatosEL[contByteEL] & contBitEL)
  3025  0015EC  0E01               	movlw	low _DatosEL
  3026  0015EE  2408               	addwf	_contByteEL^0,w,c
  3027  0015F0  6ED9               	movwf	fsr2l,c
  3028  0015F2  6ADA               	clrf	fsr2h,c
  3029  0015F4  0E00               	movlw	high _DatosEL
  3030  0015F6  22DA               	addwfc	fsr2h,f,c
  3031  0015F8  50DF               	movf	indf2,w,c
  3032  0015FA  144C               	andwf	_contBitEL^0,w,c
  3033  0015FC  0900               	iorlw	0
  3034  0015FE  B4D8               	btfsc	status,2,c
  3035  001600  EF04  F00B         	goto	i2u31_41
  3036  001604  EF06  F00B         	goto	i2u31_40
  3037  001608                     i2u31_41:
  3038  001608  EF0B  F00B         	goto	i2l1362
  3039  00160C                     i2u31_40:
  3040  00160C                     
  3041                           ;pechera.c: 177: PR4 = 177;
  3042  00160C  0EB1               	movlw	177
  3043  00160E  010F               	movlb	15	; () banked
  3044  001610  6F52               	movwf	82,b	;volatile
  3045  001612  EF0E  F00B         	goto	i2l224
  3046  001616                     i2l1362:
  3047                           
  3048                           ;pechera.c: 178: else;pechera.c: 179: PR4 = 137;
  3049  001616  0E89               	movlw	137
  3050  001618  010F               	movlb	15	; () banked
  3051  00161A  6F52               	movwf	82,b	;volatile
  3052  00161C                     i2l224:
  3053                           
  3054                           ; BSR set to: 15
  3055                           ;pechera.c: 181: flancoEL = 0;
  3056  00161C  0E00               	movlw	0
  3057  00161E  6E4D               	movwf	_flancoEL^0,c
  3058                           
  3059                           ;pechera.c: 182: }
  3060  001620  EF4D  F00B         	goto	i2l1392
  3061  001624                     i2l222:
  3062                           
  3063                           ;pechera.c: 183: else;pechera.c: 184: {;pechera.c: 185: LA2 = 0;
  3064  001624  9489               	bcf	3977,2,c	;volatile
  3065  001626                     
  3066                           ;pechera.c: 186: PR4 = 70;
  3067  001626  0E46               	movlw	70
  3068  001628  010F               	movlb	15	; () banked
  3069  00162A  6F52               	movwf	82,b	;volatile
  3070                           
  3071                           ;pechera.c: 187: flancoEL = 1;
  3072  00162C  0E01               	movlw	1
  3073  00162E  6E4D               	movwf	_flancoEL^0,c
  3074  001630                     
  3075                           ; BSR set to: 15
  3076                           ;pechera.c: 188: contBitEL = contBitEL << 1;
  3077  001630  504C               	movf	_contBitEL^0,w,c
  3078  001632  244C               	addwf	_contBitEL^0,w,c
  3079  001634  6E4C               	movwf	_contBitEL^0,c
  3080  001636                     
  3081                           ; BSR set to: 15
  3082                           ;pechera.c: 190: if(contBitEL == 0)
  3083  001636  504C               	movf	_contBitEL^0,w,c
  3084  001638  A4D8               	btfss	status,2,c
  3085  00163A  EF21  F00B         	goto	i2u32_41
  3086  00163E  EF23  F00B         	goto	i2u32_40
  3087  001642                     i2u32_41:
  3088  001642  EF4D  F00B         	goto	i2l1392
  3089  001646                     i2u32_40:
  3090  001646                     
  3091                           ; BSR set to: 15
  3092                           ;pechera.c: 191: {;pechera.c: 192: contBitEL = 1;
  3093  001646  0E01               	movlw	1
  3094  001648  6E4C               	movwf	_contBitEL^0,c
  3095  00164A                     
  3096                           ; BSR set to: 15
  3097                           ;pechera.c: 193: contByteEL++;
  3098  00164A  2A08               	incf	_contByteEL^0,f,c
  3099  00164C                     
  3100                           ; BSR set to: 15
  3101                           ;pechera.c: 195: if(contByteEL == cantBytesEL)
  3102  00164C  5007               	movf	_cantBytesEL^0,w,c
  3103  00164E  1808               	xorwf	_contByteEL^0,w,c
  3104  001650  A4D8               	btfss	status,2,c
  3105  001652  EF2D  F00B         	goto	i2u33_41
  3106  001656  EF2F  F00B         	goto	i2u33_40
  3107  00165A                     i2u33_41:
  3108  00165A  EFE2  F00A         	goto	i2l219
  3109  00165E                     i2u33_40:
  3110  00165E  EFC6  F00A         	goto	i2l1338
  3111  001662                     i2l1378:
  3112                           
  3113                           ;pechera.c: 202: else;pechera.c: 203: {;pechera.c: 204: if(flancoEL)
  3114  001662  504D               	movf	_flancoEL^0,w,c
  3115  001664  B4D8               	btfsc	status,2,c
  3116  001666  EF37  F00B         	goto	i2u34_41
  3117  00166A  EF39  F00B         	goto	i2u34_40
  3118  00166E                     i2u34_41:
  3119  00166E  EF41  F00B         	goto	i2l1384
  3120  001672                     i2u34_40:
  3121  001672                     
  3122                           ;pechera.c: 205: {;pechera.c: 206: LA2 = 1;
  3123  001672  8489               	bsf	3977,2,c	;volatile
  3124  001674                     
  3125                           ;pechera.c: 207: flancoEL = 0;
  3126  001674  0E00               	movlw	0
  3127  001676  6E4D               	movwf	_flancoEL^0,c
  3128                           
  3129                           ;pechera.c: 208: PR4 = 50;
  3130  001678  0E32               	movlw	50
  3131  00167A  010F               	movlb	15	; () banked
  3132  00167C  6F52               	movwf	82,b	;volatile
  3133                           
  3134                           ;pechera.c: 209: }
  3135  00167E  EF4D  F00B         	goto	i2l1392
  3136  001682                     i2l1384:
  3137                           
  3138                           ;pechera.c: 210: else;pechera.c: 211: {;pechera.c: 212: primerosBitsEL = 0;
  3139  001682  0E00               	movlw	0
  3140  001684  6E09               	movwf	_primerosBitsEL^0,c
  3141                           
  3142                           ;pechera.c: 213: flancoEL = 1;
  3143  001686  0E01               	movlw	1
  3144  001688  6E4D               	movwf	_flancoEL^0,c
  3145                           
  3146                           ;pechera.c: 214: contBitEL = 1;
  3147  00168A  0E01               	movlw	1
  3148  00168C  6E4C               	movwf	_contBitEL^0,c
  3149                           
  3150                           ;pechera.c: 215: contByteEL = 0;
  3151  00168E  0E00               	movlw	0
  3152  001690  6E08               	movwf	_contByteEL^0,c
  3153  001692                     
  3154                           ;pechera.c: 216: T4CONbits.TMR4ON = 0;
  3155  001692  010F               	movlb	15	; () banked
  3156  001694  9551               	bcf	81,2,b	;volatile
  3157  001696                     
  3158                           ; BSR set to: 15
  3159                           ;pechera.c: 217: PIE5bits.TMR4IE = 0;
  3160  001696  907D               	bcf	125,0,c	;volatile
  3161  001698                     
  3162                           ; BSR set to: 15
  3163                           ;pechera.c: 218: LA2 = 0;
  3164  001698  9489               	bcf	3977,2,c	;volatile
  3165  00169A                     i2l1392:
  3166                           
  3167                           ; BSR set to: 15
  3168                           ;pechera.c: 219: };pechera.c: 220: };pechera.c: 222: PIR5bits.TMR4IF = 0;
  3169  00169A  907E               	bcf	126,0,c	;volatile
  3170  00169C                     i2l231:
  3171  00169C  C031  FFDA         	movff	??_IRS_High+1,fsr2h
  3172  0016A0  C030  FFD9         	movff	??_IRS_High,fsr2l
  3173  0016A4  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3174  0016A6  0011               	retfie		f
  3175  0016A8                     __end_of_IRS_High:
  3176                           	opt callstack 0
  3177                           
  3178                           	psect	rparam
  3179  0000                     
  3180                           	psect	temp
  3181  00004E                     btemp:
  3182                           	opt callstack 0
  3183  00004E                     	ds	1
  3184  0000                     int$flags	set	btemp
  3185  0000                     wtemp8	set	btemp+1
  3186  0000                     ttemp5	set	btemp+1
  3187  0000                     ttemp6	set	btemp+4
  3188  0000                     ttemp7	set	btemp+8
  3189                           tosu	equ	0xFFF
  3190                           tosh	equ	0xFFE
  3191                           tosl	equ	0xFFD
  3192                           stkptr	equ	0xFFC
  3193                           pclatu	equ	0xFFB
  3194                           pclath	equ	0xFFA
  3195                           pcl	equ	0xFF9
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           prodh	equ	0xFF4
  3201                           prodl	equ	0xFF3
  3202                           indf0	equ	0xFEF
  3203                           postinc0	equ	0xFEE
  3204                           postdec0	equ	0xFED
  3205                           preinc0	equ	0xFEC
  3206                           plusw0	equ	0xFEB
  3207                           fsr0h	equ	0xFEA
  3208                           fsr0l	equ	0xFE9
  3209                           wreg	equ	0xFE8
  3210                           indf1	equ	0xFE7
  3211                           postinc1	equ	0xFE6
  3212                           postdec1	equ	0xFE5
  3213                           preinc1	equ	0xFE4
  3214                           plusw1	equ	0xFE3
  3215                           fsr1h	equ	0xFE2
  3216                           fsr1l	equ	0xFE1
  3217                           bsr	equ	0xFE0
  3218                           indf2	equ	0xFDF
  3219                           postinc2	equ	0xFDE
  3220                           postdec2	equ	0xFDD
  3221                           preinc2	equ	0xFDC
  3222                           plusw2	equ	0xFDB
  3223                           fsr2h	equ	0xFDA
  3224                           fsr2l	equ	0xFD9
  3225                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1
    Data        2
    BSS         221
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      77
    BANK0           160      0     122
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    EUSARTEnviar2@reg	PTR unsigned char  size(2) Largest target is 1
		 -> TXREG2(SFR_1[1]), 

    EUSARTEnviar2@e	PTR struct eusart size(2) Largest target is 53
		 -> debug(BANK0[53]), 

    RFIDRecive@spi	PTR struct spi size(2) Largest target is 52
		 -> rfid(BANK1[52]), 

    RFIDInit@spi	PTR struct spi size(2) Largest target is 52
		 -> rfid(BANK1[52]), 

    ReadShot@gameConfig	PTR struct gameConfig size(2) Largest target is 6
		 -> configJuego(COMRAM[6]), 

    ReadShot@reception	PTR struct reception size(2) Largest target is 69
		 -> receptores(BANK0[69]), 

    ReadShot@player	PTR struct player size(2) Largest target is 31
		 -> jugador(COMRAM[31]), 

    Capture@reception	PTR struct reception size(2) Largest target is 69
		 -> receptores(BANK0[69]), 


Critical Paths under _main in COMRAM

    _main->_ReadShot

Critical Paths under _IRS_Low in COMRAM

    _IRS_Low->_Capture

Critical Paths under _IRS_High in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _IRS_Low in BANK0

    None.

Critical Paths under _IRS_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRS_Low in BANK1

    None.

Critical Paths under _IRS_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRS_Low in BANK2

    None.

Critical Paths under _IRS_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRS_Low in BANK3

    None.

Critical Paths under _IRS_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IRS_Low in BANK4

    None.

Critical Paths under _IRS_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IRS_Low in BANK5

    None.

Critical Paths under _IRS_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IRS_Low in BANK6

    None.

Critical Paths under _IRS_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IRS_Low in BANK7

    None.

Critical Paths under _IRS_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IRS_Low in BANK8

    None.

Critical Paths under _IRS_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IRS_Low in BANK9

    None.

Critical Paths under _IRS_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IRS_Low in BANK10

    None.

Critical Paths under _IRS_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IRS_Low in BANK11

    None.

Critical Paths under _IRS_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IRS_Low in BANK12

    None.

Critical Paths under _IRS_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IRS_Low in BANK13

    None.

Critical Paths under _IRS_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IRS_Low in BANK14

    None.

Critical Paths under _IRS_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IRS_Low in BANK15

    None.

Critical Paths under _IRS_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2899
                             _Config
                      _EUSARTEnviar2
                          _InitDebug
                           _RFIDInit
                         _RFIDRecive
                           _ReadShot
 ---------------------------------------------------------------------------------
 (1) _ReadShot                                            11     5      6    1153
                                             17 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _RFIDRecive                                           2     0      2     177
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RFIDInit                                             2     0      2     397
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitDebug                                            2     2      0     246
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSARTEnviar2                                        4     0      4     926
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _IRS_Low                                              9     9      0    1246
                                              8 COMRAM     9     9      0
                            _Capture
                    i1_EUSARTEnviar2
 ---------------------------------------------------------------------------------
 (3) i1_EUSARTEnviar2                                      4     0      4     140
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _Capture                                              6     4      2     993
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _IRS_High                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config
   _EUSARTEnviar2
   _InitDebug
   _RFIDInit
   _RFIDRecive
   _ReadShot

 _IRS_Low (ROOT)
   _Capture
   i1_EUSARTEnviar2

 _IRS_High (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      34       7       20.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7A       5       76.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      4D       1       81.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      12        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul 22 16:43:54 2020

                      l97 1A1E                        bsr 000FE0              __CFG_CP0$OFF 000000  
            __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000  
             __CFG_LVP$ON 000000             RFIDRecive@spi 0041                       l311 1B80  
                     l303 1806                       l332 1BB8                       l308 1AF8  
                     l270 13CE                       l265 14E6                       l259 193A  
                     l269 13A8                       _LA2 007C4A                       _LA3 007C4B  
                     _LE2 007C6A              __CFG_CPB$OFF 000000                       _PR4 000F52  
            __CFG_CPD$OFF 000000                       u800 1706                       u801 1702  
                     u810 1730                       u811 172C                       u820 175A  
                     u821 1756                       u830 17A6                       u831 17A2  
                     u760 1866                       u761 1862                       u770 1928  
                     u771 1924                       u780 16C0                       u781 16BC  
                     u790 16EA                       u791 16E6            ReadShot@player 0043  
                     prod 000FF3                       wreg 000FE8                _TXSTA2bits 000F72  
              InitDebug@i 0041                      l2000 1462                      l2010 1498  
                    l2002 1466                      l2020 14C6                      l2012 14B4  
                    l2004 146A                      l2022 14CA                      l2014 14BA  
                    l2006 146E                      l2016 14BE                      l2008 1486  
                    l2018 14C2                      l1610 196A                      l1620 1974  
                    l1612 196C                      l1604 193C                      l1630 199E  
                    l1622 1986                      l1614 196E                      l1606 1952  
                    l1640 19B4                      l1632 19A0                      l1624 1988  
                    l1616 1970                      l1608 195C                      l1800 1B64  
                    l1650 19DE                      l1642 19C6                      l1634 19AE  
                    l1626 199A                      l1618 1972                      l1802 1B74  
                    l1810 1706                      l1660 19E8                      l1652 19E0  
                    l1644 19C8                      l1636 19B0                      l1628 199C  
                    l1740 1BB6                      l1820 17E6                      l1812 1730  
                    l1804 16A8                      l1670 19FA                      l1662 19EA  
                    l1654 19E2                      l1646 19CA                      l1638 19B2  
                    l1750 1854                      l1742 1808                      l1814 175A  
                    l1806 16C0                      l1680 1A0C                      l1672 19FC  
                    l1664 19EC                      l1656 19E4                      l1648 19CC  
                    l1736 1B82                      l1760 189E                      l1752 1856  
                    l1816 17A6                      l1808 16EA                      l1690 1A16  
                    l1682 1A0E                      l1674 19FE                      l1666 19EE  
                    l1658 19E6                      l1738 1BA2                      l1762 1916  
                    l1754 1866                      l1770 1A2C                      l1818 17BE  
                    l1692 1A18                      l1684 1A10                      l1676 1A00  
                    l1668 19F8                      l1764 1918                      l1748 1844  
                    l1780 1A7C                      l1772 1A3C                      l1940 12CE  
                    l1694 1A1A                      l1686 1A12                      l1678 1A02  
                    l1766 1928                      l1790 1ACC                      l1782 1A8C  
                    l1774 1A4C                      l1950 1300                      l1942 12DA  
                    l1696 1A1C                      l1688 1A14                      l1792 1ADC  
                    l1784 1A9C                      l1776 1A5C                      l1768 1A20  
                    l1952 1312                      l1960 132E                      l1944 12E6  
                    l1794 1AE8                      l1786 1AAC                      l1778 1A6C  
                    l1970 1374                      l1962 133E                      l1954 1316  
                    l1946 12EA                      l1938 12CA                      l1788 1ABC  
                    l1796 1B48                      l1980 13FC                      l1972 1390  
                    l1964 134C                      l1956 131A                      l1948 12EE  
                    l1798 1B54                      l1990 1412                      l1982 1402  
                    l1974 13B6                      l1966 135C                      l1958 131E  
                    l1984 1406                      l1992 142A                      l1976 13C6  
                    l1968 1372                      l1994 143C                      l1986 140A  
                    l1978 13E0                      l1996 1458                      l1988 140E  
                    l1998 145E                      u1100 13E0                      u1101 13DC  
                    u1110 143C                      u1030 1300                      u1111 1438  
                    u1031 12FC                      u1120 1498                      u1040 1312  
                    u1121 1494                      u1041 130E                      u1050 133E  
                    u1051 133A                      u1060 134C                      u1061 1348  
                    u1070 135C                      u1071 1358                      u1080 13B6  
                    u1081 13B2                      u1090 13C6                      u1091 13C2  
                    _LATA 000F89                      _LATB 000F8A             __CFG_DEBUG$ON 000000  
                    _TMR4 000F53                      _WPUB 000F61           __end_of_IRS_Low 026E  
                    _main 12CA                      _rfid 0100                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9               ?_RFIDRecive 0041  
                    btemp 004E             __CFG_BORV$190 000000                      prodl 000FF3  
                    start 026E             __CFG_IESO$OFF 000000           __end_of_Capture 12CA  
            ___param_bank 000000              _BAUDCON2bits 000F70             _EUSARTEnviar2 1B82  
                   ?_main 0030                     i1l332 1BF0                     i1l252 024E  
                   i2l210 1514                     i2l211 1534                     i1l291 12C8  
                   i1l284 118E          __end_of_RFIDInit 1AFA                     i2l222 1624  
                   i2l214 1580                     i2l231 169C                     i2l224 161C  
                   i1l289 12BA                     i2l219 15C4                     _TMR0H 000FD7  
                   _TMR1H 000FCF                     _TMR0L 000FD6                     _TMR1L 000FCE  
                   _TMR3H 000FB3                     _TMR3L 000FB2                     _TMR5H 000F50  
                   _TMR5L 000F4F                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISD 000F95                     _TRISE 000F96          __end_of_IRS_High 16A8  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _debug 00A5        __CFG_MCLRE$EXTMCLR 000000  
                   tablat 000FF5          Capture@reception 0032                     ttemp5 004F  
                   ttemp6 0052                     ttemp7 0056                     status 000FD8  
                   wtemp8 004F            __CFG_HFOFST$ON 000000            __CFG_FOSC$HSMP 000000  
         InitDebug@i_2160 0042           __initialization 1AFA              __end_of_main 14EE  
        __end_of_ReadShot 1808            ?_EUSARTEnviar2 0041                    ??_main 004C  
           __activetblptr 000001            __CFG_PLLCFG$ON 000000       __size_of_RFIDRecive 003A  
               ??_IRS_Low 0038          i1EUSARTEnviar2@e 0034                    _CCPR1H 000FBF  
                  _CCPR1L 000FBE                    _CCPR3H 000F5F                    _CCPR3L 000F5E  
                  _CCPR5H 000F56                    _CCPR5L 000F55                    _ANSELA 000F38  
                  _ANSELB 000F39                    _ANSELC 000F3A                    _ANSELD 000F3B  
       ReadShot@reception 0045                    i1l1700 1020                    i1l1710 10AC  
                  i1l1702 103E                    i1l1720 113A                    i1l1712 10CE  
                  i1l1704 105C                    i1l1730 11F8                    i1l1722 115C  
                  i1l1714 10DC                    i1l1706 1070                    i1l1732 123A  
                  i1l1724 116E                    i1l1708 108E                    i1l1716 10FE  
                  i1l1900 0182                    i1l1734 127A                    i1l1726 11AC  
                  i1l1718 111C                    i1l1822 1BBA                    i1l1910 01BC  
                  i1l1902 0192                    i1l1830 0044                    i1l1728 11D8  
                  i1l1824 1BDA                    i1l1920 01F8                    i1l1912 01CA  
                  i1l1904 0198                    i1l1840 006E                    i1l1832 0052  
                  i1l1826 1BEE                    i1l1930 022E                    i1l1922 01FC  
                  i1l1914 01DE                    i1l1906 01AC                    i1l1850 0098  
                  i1l1834 005A                    i1l1842 0070                    i1l1932 023E  
                  i1l1916 01EE                    i1l1924 01FE                    i1l1908 01AE  
                  i1l1860 00C6                    i1l1852 009C                    i1l1844 007E  
                  i1l1836 005E                    i1l1828 0036                    i1l1934 0244  
                  i1l1926 020C                    i1l1918 01F2                    i1l1862 00D0  
                  i1l1870 00E6                    i1l1854 00A8                    i1l1846 008C  
                  i1l1838 0062                    i2l1320 1512                    i1l1936 024C  
                  i1l1928 021A                    i1l1880 012C                    i1l1872 00F4  
                  i1l1864 00D4                    i1l1848 0094                    i1l1856 00AA  
                  i2l1330 1560                    i2l1322 1522                    i1l1698 1004  
                  i1l1890 015C                    i1l1882 012E                    i1l1874 0102  
                  i1l1866 00D8                    i1l1858 00B8                    i2l1332 1570  
                  i2l1340 1592                    i2l1324 1530                    i2l1316 14F6  
                  i1l1884 0140                    i1l1876 010A                    i1l1868 00E4  
                  i2l1342 15A4                    i2l1334 1572                    i2l1326 1542  
                  i2l1318 1504                    i1l1878 011C                    i1l1886 0148  
                  i2l1360 160C                    i2l1344 15B4                    i2l1352 15C8  
                  i2l1336 1582                    i2l1328 1550                    i1l1896 0164  
                  i1l1888 014A                    i2l1370 1646                    i2l1362 1616  
                  i2l1354 15DA                    i2l1346 15B6                    i2l1338 158C  
                  i1l1898 0180                    i2l1380 1672                    i2l1372 164A  
                  i2l1364 1626                    i2l1356 15EA                    i2l1390 1698  
                  i2l1382 1674                    i2l1374 164C                    i2l1366 1630  
                  i2l1358 15EC                    i2l1384 1682                    i2l1368 1636  
                  i2l1392 169A                    i2l1386 1692                    i2l1378 1662  
                  i2l1388 1696            __CFG_WDTEN$OFF 000000        __size_of_InitDebug 0134  
               ??_Capture 0034                    _SPBRG2 000F75                    _TXREG2 000F73  
                  _Config 193C            __CFG_XINST$OFF 000000              _CCPTMRS0bits 000F49  
          __CFG_STVREN$ON 000000                    clear_0 1B18                    clear_1 1B24  
                  clear_2 1B30              __pdataCOMRAM 004C              __mediumconst 0000  
         i1_EUSARTEnviar2 1BBA                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8        ReadShot@gameConfig 0041               RFIDInit@spi 0041  
              __accesstop 0060   __end_of__initialization 1B36           __CFG_PBADEN$OFF 000000  
           ___rparam_used 000001                 ?_RFIDInit 0041                 ?_IRS_High 0030  
          __pcstackCOMRAM 0030           ??_EUSARTEnviar2 0045         __end_of_InitDebug 193C  
              __pbssBANK0 0060                __pbssBANK1 0100                 ?_ReadShot 0041  
            ??_RFIDRecive 0043                   ?_Config 0030                ??_RFIDInit 0043  
      __CFG_CCP2MX$PORTC1 000000                ??_IRS_High 0030        __CFG_CCP3MX$PORTE0 000000  
 __end_ofi1_EUSARTEnviar2 1BF2        __end_of_RFIDRecive 1B82                _contByteEL 0008  
                 i2u20_40 1512                   i2u20_41 150E                   i2u21_40 1522  
                 i2u21_41 151E                   i1u70_20 10AC                   i1u70_21 10A8  
                 i2u30_40 15EA                   i2u22_40 1530                   i2u30_41 15E6  
                 i2u22_41 152C                   i1u71_20 111C                   i1u71_21 1118  
                 i2u31_40 160C                   i2u23_40 1542                   i2u31_41 1608  
                 i2u23_41 153E                   i1u72_20 113A                   i1u72_21 1136  
                 i2u32_40 1646                   i2u24_40 1550                   i2u32_41 1642  
                 i2u24_41 154C                   i1u73_20 11AC                   i1u73_21 11A8  
                 i2u33_40 165E                   i2u25_40 1560                   i2u33_41 165A  
                 i2u25_41 155C                   i1u74_20 11D8                   i1u66_20 1020  
                 i1u90_20 00F4                   i1u74_21 11D4                   i1u66_21 101C  
                 i1u90_21 00F0                   i2u34_40 1672                   i2u26_40 1570  
                 i2u34_41 166E                   i2u26_41 156C                   i1u75_20 127A  
                 i1u67_20 103E                   i1u91_20 0102                   i1u75_21 1276  
                 i1u67_21 103A                   i1u91_21 00FE                   i2u27_40 15A4  
                 i2u19_40 1504                   i2u27_41 15A0                   i2u19_41 1500  
                 i1u68_20 105C                   i1u92_20 011C                   i1u84_20 0044  
                 i1u68_21 1058                   i1u92_21 0118                   i1u84_21 0040  
                 i2u28_40 15B4                   i2u28_41 15B0                   i1u69_20 108E  
                 i1u93_20 012C                   i1u85_20 0052                   i1u69_21 108A  
                 i1u93_21 0128                   i1u85_21 004E                   i2u29_40 15DA  
                 i2u29_41 15D6                   i1u94_20 0140                   i1u86_20 007E  
                 i1u94_21 013C                   i1u86_21 007A                   i1u95_20 015C  
                 i1u87_20 008C                   i1u95_21 0158                   i1u87_21 0088  
                 _IRS_Low 0018                   i1u96_20 0192                   i1u88_20 00B8  
                 i1u96_21 018E                   i1u88_21 00B4                   i1u97_20 01BC  
                 i1u89_20 00C6                   i1u97_21 01B8                   i1u89_21 00C2  
                 i1u98_20 01CA                   i1u98_21 01C6                   i1u99_20 01DE  
                 i1u99_21 01DA                   _SPBRGH2 000F76                   _SSP1BUF 000FC9  
                 _DatosEL 0001                   _Capture 1004                ??_ReadShot 0047  
         __CFG_PWRTEN$OFF 000000           __size_of_Config 00E4                   __Hparam 0000  
                 __Lparam 0000              __psmallconst 1000                   __pcinit 1AFA  
                 __ramtop 1000                   __ptext0 12CA                   __ptext1 16A8  
                 __ptext2 1B48                   __ptext3 1A20                   __ptext4 1808  
                 __ptext5 1B82                   __ptext6 193C                   __ptext8 1BBA  
                 __ptext9 1004                 _T0CONbits 000FD5                 _T1CONbits 000FCD  
               _T3CONbits 000FB1                   _jugador 000B                 _T4CONbits 000F51  
               _T5CONbits 000F4E                _receptores 0060            __pintcode_body 14EE  
    end_of_initialization 1B36                   int_func 14EE         __end_of_preambulo 1002  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE          ?i1_EUSARTEnviar2 0032                 _PORTBbits 000F81  
        EUSARTEnviar2@reg 0041                 _TRISCbits 000F94                 _TRISEbits 000F96  
             _CCP1CONbits 000FBD               _CCP2CONbits 000F66               _CCP3CONbits 000F5D  
          __end_of_Config 1A20         __size_of_RFIDInit 00DA         __size_of_IRS_High 16A0  
           __pidataCOMRAM 1BF2       start_initialization 1AFA                 _InitDebug 1808  
                ??_Config 0041         __size_of_ReadShot 0160     __end_of_EUSARTEnviar2 1BBA  
             _cantBytesEL 0007               __pbssCOMRAM 0001                ?_InitDebug 0030  
                ?_IRS_Low 0030                  ?_Capture 0032                 _debugCont 000A  
                IRS_Low@i 0040                 __pintcode 0008                IRS_Low@aux 003F  
      i1EUSARTEnviar2@reg 0032                 _contBitEL 004C               __pintcodelo 0018  
        __CFG_PRICLKEN$ON 000000               __smallconst 1000                  _IPR1bits 000F9F  
                _IPR2bits 000FA2                  _PIE1bits 000F9D                  _IPR3bits 000FA5  
                _PIE2bits 000FA0                  _IPR4bits 000F7C                  _IPR5bits 000F7F  
                _PIE3bits 000FA3                  _PIE4bits 000F7A                  _PIE5bits 000F7D  
             _configJuego 002A                  i1u100_20 020C                  i1u100_21 0208  
                i1u101_20 021A                  i1u101_21 0216                  i1u102_20 022E  
                i1u102_21 022A                  _RFIDInit 1A20                  _PIR1bits 000F9E  
                _PIR2bits 000FA1                  _PIR3bits 000FA4                  _PIR4bits 000F7B  
                _PIR5bits 000F7E                 _preambulo 1001                  _IRS_High 0008  
                _RCONbits 000FD0          __CFG_WDTPS$32768 000000               ??_InitDebug 0041  
        __size_of_IRS_Low 0256               _INTCON2bits 000FF1               _INTCON3bits 000FF0  
                _ReadShot 16A8          __size_of_Capture 02C6                  __Hrparam 0000  
                __Lrparam 0000            _primerosBitsEL 0009              __Lsmallconst 1000  
      __CFG_BOREN$SBORDIS 000000         __CFG_P2BMX$PORTD2 000000  __size_ofi1_EUSARTEnviar2 0038  
                _flancoEL 004D              _SSP1CON1bits 000FC6             __size_of_main 0224  
          EUSARTEnviar2@e 0043                  int$flags 004E              _SSP1STATbits 000FC7  
              _INTCONbits 000FF2                  intlevel1 0000                  intlevel2 0000  
              _RFIDRecive 1B48                _RCSTA2bits 000F71         __CFG_T3CMX$PORTC0 000000  
  __size_of_EUSARTEnviar2 0038         ??i1_EUSARTEnviar2 0036  
